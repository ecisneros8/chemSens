#include <cmath>
#include <vector>
#include <iostream>
#include <cppad/cppad.hpp>

using namespace std;

using std::vector;
using CppAD::AD;
using CppAD::Value;
using CppAD::Var2Par;

extern "C" {
  void nspecies_(int& ns);
  void nreactions_(int& nr);
  void nelements_(int& ne);
  void getmolecularweights_(double* mw);
  void getmassfractions_(double* x, double* y);
  void getenthalpymass_(double* T, double* y, double* h);
  void getdensity_(double* T, double* p, double* y, double* rho);
  void gettemperature_(double* h, double* y, double* Told, double* Tnew);
  void gettemperaturesource_(double* p, double* h, double* T, double* y, double* fT);
  void getsource_(double* p, double* h, double* Told, double* y, double* fy);
  void getjacobian_(double* p, double* h, double* Told, double* y, double* dfy);
}

namespace mech {

  /***********************************************************************************/
  /* some constants                                                                  */
  /***********************************************************************************/
  double GasConstant = 8314.4621;
  double OneAtm      = 1.01325e5;
  double OneThird    = 1.0/3.0;

  /***********************************************************************************/
  /* mech definitions                                                                */
  /***********************************************************************************/
  int kk = 53;
  int ii = 325;
  int mm = 5;

  vector<double> getMolecularWeights() {

    vector<double> mw(kk,0.0);
    mw[0] = 2.0159e+00;
    mw[1] = 1.0079e+00;
    mw[2] = 1.5999e+01;
    mw[3] = 3.1999e+01;
    mw[4] = 1.7007e+01;
    mw[5] = 1.8015e+01;
    mw[6] = 3.3007e+01;
    mw[7] = 3.4015e+01;
    mw[8] = 1.2011e+01;
    mw[9] = 1.3019e+01;
    mw[10] = 1.4027e+01;
    mw[11] = 1.4027e+01;
    mw[12] = 1.5035e+01;
    mw[13] = 1.6043e+01;
    mw[14] = 2.8010e+01;
    mw[15] = 4.4010e+01;
    mw[16] = 2.9018e+01;
    mw[17] = 3.0026e+01;
    mw[18] = 3.1034e+01;
    mw[19] = 3.1034e+01;
    mw[20] = 3.2042e+01;
    mw[21] = 2.5030e+01;
    mw[22] = 2.6038e+01;
    mw[23] = 2.7046e+01;
    mw[24] = 2.8054e+01;
    mw[25] = 2.9062e+01;
    mw[26] = 3.0070e+01;
    mw[27] = 4.1029e+01;
    mw[28] = 4.2037e+01;
    mw[29] = 4.2037e+01;
    mw[30] = 1.4007e+01;
    mw[31] = 1.5015e+01;
    mw[32] = 1.6023e+01;
    mw[33] = 1.7031e+01;
    mw[34] = 2.9021e+01;
    mw[35] = 3.0006e+01;
    mw[36] = 4.6006e+01;
    mw[37] = 4.4013e+01;
    mw[38] = 3.1014e+01;
    mw[39] = 2.6018e+01;
    mw[40] = 2.7026e+01;
    mw[41] = 2.8034e+01;
    mw[42] = 4.1032e+01;
    mw[43] = 4.3025e+01;
    mw[44] = 4.3025e+01;
    mw[45] = 4.3025e+01;
    mw[46] = 4.2017e+01;
    mw[47] = 2.8013e+01;
    mw[48] = 3.9948e+01;
    mw[49] = 4.3089e+01;
    mw[50] = 4.4097e+01;
    mw[51] = 4.3045e+01;
    mw[52] = 4.4053e+01;

    return(mw);
    
  };

  /***********************************************************************************/
  /* thermodynamics                                                                  */
  /***********************************************************************************/
  template <class Type>
  void getSpecificHeats_R(Type& T, vector<Type>& cp0_R) {

    Type tt0 = T;
    Type tt1 = T * tt0;
    Type tt2 = T * tt1;
    Type tt3 = T * tt2;

    if(tt0 < 1.0000e+03) {
      cp0_R[0] = 2.344331120000000e+00 + 7.980520749999999e-03 * tt0 + -1.947815100000000e-05 * tt1 + 2.015720940000000e-08 * tt2 + -7.376117610000001e-12 * tt3;
    } else {
      cp0_R[0] = 3.337279200000000e+00 + -4.940247310000000e-05 * tt0 + 4.994567780000000e-07 * tt1 + -1.795663940000000e-10 * tt2 + 2.002553760000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[1] = 2.500000000000000e+00 + 7.053328190000000e-13 * tt0 + -1.995919640000000e-15 * tt1 + 2.300816320000000e-18 * tt2 + -9.277323320000001e-22 * tt3;
    } else {
      cp0_R[1] = 2.500000010000000e+00 + -2.308429730000000e-11 * tt0 + 1.615619480000000e-14 * tt1 + -4.735152350000000e-18 * tt2 + 4.981973570000000e-22 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[2] = 3.168267100000000e+00 + -3.279318840000000e-03 * tt0 + 6.643063960000000e-06 * tt1 + -6.128066240000000e-09 * tt2 + 2.112659710000000e-12 * tt3;
    } else {
      cp0_R[2] = 2.569420780000000e+00 + -8.597411370000000e-05 * tt0 + 4.194845890000000e-08 * tt1 + -1.001777990000000e-11 * tt2 + 1.228336910000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[3] = 3.782456360000000e+00 + -2.996734160000000e-03 * tt0 + 9.847302010000000e-06 * tt1 + -9.681295090000001e-09 * tt2 + 3.243728370000000e-12 * tt3;
    } else {
      cp0_R[3] = 3.282537840000000e+00 + 1.483087540000000e-03 * tt0 + -7.579666690000000e-07 * tt1 + 2.094705550000000e-10 * tt2 + -2.167177940000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[4] = 3.992015430000000e+00 + -2.401317520000000e-03 * tt0 + 4.617938410000000e-06 * tt1 + -3.881133330000000e-09 * tt2 + 1.364114700000000e-12 * tt3;
    } else {
      cp0_R[4] = 3.092887670000000e+00 + 5.484297160000000e-04 * tt0 + 1.265052280000000e-07 * tt1 + -8.794615559999999e-11 * tt2 + 1.174123760000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[5] = 4.198640560000000e+00 + -2.036434100000000e-03 * tt0 + 6.520402110000000e-06 * tt1 + -5.487970620000000e-09 * tt2 + 1.771978170000000e-12 * tt3;
    } else {
      cp0_R[5] = 3.033992490000000e+00 + 2.176918040000000e-03 * tt0 + -1.640725180000000e-07 * tt1 + -9.704198700000000e-11 * tt2 + 1.682009920000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[6] = 4.301798010000000e+00 + -4.749120510000000e-03 * tt0 + 2.115828910000000e-05 * tt1 + -2.427638940000000e-08 * tt2 + 9.292251240000000e-12 * tt3;
    } else {
      cp0_R[6] = 4.017210900000000e+00 + 2.239820130000000e-03 * tt0 + -6.336581500000000e-07 * tt1 + 1.142463700000000e-10 * tt2 + -1.079085350000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[7] = 4.276112690000000e+00 + -5.428224169999999e-04 * tt0 + 1.673357010000000e-05 * tt1 + -2.157708130000000e-08 * tt2 + 8.624543630000000e-12 * tt3;
    } else {
      cp0_R[7] = 4.165002850000000e+00 + 4.908316940000000e-03 * tt0 + -1.901392250000000e-06 * tt1 + 3.711859860000000e-10 * tt2 + -2.879083050000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[8] = 2.554239550000000e+00 + -3.215377240000000e-04 * tt0 + 7.337922450000000e-07 * tt1 + -7.322348890000000e-10 * tt2 + 2.665214460000000e-13 * tt3;
    } else {
      cp0_R[8] = 2.492668880000000e+00 + 4.798892840000000e-05 * tt0 + -7.243350200000001e-08 * tt1 + 3.742910290000000e-11 * tt2 + -4.872778930000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[9] = 3.489816650000000e+00 + 3.238355410000000e-04 * tt0 + -1.688990650000000e-06 * tt1 + 3.162173270000000e-09 * tt2 + -1.406090670000000e-12 * tt3;
    } else {
      cp0_R[9] = 2.878464730000000e+00 + 9.709136810000000e-04 * tt0 + 1.444456550000000e-07 * tt1 + -1.306878490000000e-10 * tt2 + 1.760793830000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[10] = 3.762678670000000e+00 + 9.688721430000000e-04 * tt0 + 2.794898410000000e-06 * tt1 + -3.850911530000000e-09 * tt2 + 1.687417190000000e-12 * tt3;
    } else {
      cp0_R[10] = 2.874101130000000e+00 + 3.656392920000000e-03 * tt0 + -1.408945970000000e-06 * tt1 + 2.601795490000000e-10 * tt2 + -1.877275670000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[11] = 4.198604110000000e+00 + -2.366614190000000e-03 * tt0 + 8.232962200000000e-06 * tt1 + -6.688159810000000e-09 * tt2 + 1.943147370000000e-12 * tt3;
    } else {
      cp0_R[11] = 2.292038420000000e+00 + 4.655886370000000e-03 * tt0 + -2.011919470000000e-06 * tt1 + 4.179060000000000e-10 * tt2 + -3.397163650000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[12] = 3.673590400000000e+00 + 2.010951750000000e-03 * tt0 + 5.730218560000000e-06 * tt1 + -6.871174250000000e-09 * tt2 + 2.543857340000000e-12 * tt3;
    } else {
      cp0_R[12] = 2.285717720000000e+00 + 7.239900370000000e-03 * tt0 + -2.987143480000000e-06 * tt1 + 5.956846440000000e-10 * tt2 + -4.671543940000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[13] = 5.149876130000000e+00 + -1.367097880000000e-02 * tt0 + 4.918005990000000e-05 * tt1 + -4.847430260000000e-08 * tt2 + 1.666939560000000e-11 * tt3;
    } else {
      cp0_R[13] = 7.485149500000000e-02 + 1.339094670000000e-02 * tt0 + -5.732858090000000e-06 * tt1 + 1.222925350000000e-09 * tt2 + -1.018152300000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[14] = 3.579533470000000e+00 + -6.103536800000000e-04 * tt0 + 1.016814330000000e-06 * tt1 + 9.070058840000000e-10 * tt2 + -9.044244990000000e-13 * tt3;
    } else {
      cp0_R[14] = 2.715185610000000e+00 + 2.062527430000000e-03 * tt0 + -9.988257710000001e-07 * tt1 + 2.300530080000000e-10 * tt2 + -2.036477160000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[15] = 2.356773520000000e+00 + 8.984596770000000e-03 * tt0 + -7.123562690000000e-06 * tt1 + 2.459190220000000e-09 * tt2 + -1.436995480000000e-13 * tt3;
    } else {
      cp0_R[15] = 3.857460290000000e+00 + 4.414370260000000e-03 * tt0 + -2.214814040000000e-06 * tt1 + 5.234901880000001e-10 * tt2 + -4.720841640000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[16] = 4.221185840000000e+00 + -3.243925320000000e-03 * tt0 + 1.377994460000000e-05 * tt1 + -1.331440930000000e-08 * tt2 + 4.337688650000000e-12 * tt3;
    } else {
      cp0_R[16] = 2.772174380000000e+00 + 4.956955260000000e-03 * tt0 + -2.484456130000000e-06 * tt1 + 5.891617780000000e-10 * tt2 + -5.335087110000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[17] = 4.793723150000000e+00 + -9.908333690000000e-03 * tt0 + 3.732200080000000e-05 * tt1 + -3.792852610000000e-08 * tt2 + 1.317726520000000e-11 * tt3;
    } else {
      cp0_R[17] = 1.760690080000000e+00 + 9.200000820000000e-03 * tt0 + -4.422588130000000e-06 * tt1 + 1.006412120000000e-09 * tt2 + -8.838556400000001e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[18] = 3.863889180000000e+00 + 5.596723040000000e-03 * tt0 + 5.932717910000000e-06 * tt1 + -1.045320120000000e-08 * tt2 + 4.369672780000000e-12 * tt3;
    } else {
      cp0_R[18] = 3.692665690000000e+00 + 8.645767970000001e-03 * tt0 + -3.751011200000000e-06 * tt1 + 7.872346360000000e-10 * tt2 + -6.485542010000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[19] = 2.106083740868644e+00 + 7.217545611840916e-03 * tt0 + 5.335825777358757e-06 * tt1 + -7.374562574086794e-09 * tt2 + 2.074342158630007e-12 * tt3;
    } else {
      cp0_R[19] = 3.771000099870984e+00 + 7.871073375136668e-03 * tt0 + -2.656064859783170e-06 * tt1 + 3.943402155606197e-10 * tt2 + -2.111411617357040e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[20] = 5.715395820000000e+00 + -1.523091290000000e-02 * tt0 + 6.524411550000000e-05 * tt1 + -7.108068890000000e-08 * tt2 + 2.613526980000000e-11 * tt3;
    } else {
      cp0_R[20] = 1.789707910000000e+00 + 1.409382920000000e-02 * tt0 + -6.365008350000000e-06 * tt1 + 1.381710850000000e-09 * tt2 + -1.170602200000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[21] = 2.889657330000000e+00 + 1.340996110000000e-02 * tt0 + -2.847695010000000e-05 * tt1 + 2.947910450000000e-08 * tt2 + -1.093315110000000e-11 * tt3;
    } else {
      cp0_R[21] = 3.167806520000000e+00 + 4.752219020000000e-03 * tt0 + -1.837870770000000e-06 * tt1 + 3.041902520000000e-10 * tt2 + -1.772327700000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[22] = 8.086810940000000e-01 + 2.336156290000000e-02 * tt0 + -3.551718150000000e-05 * tt1 + 2.801524370000000e-08 * tt2 + -8.500729740000000e-12 * tt3;
    } else {
      cp0_R[22] = 4.147569640000000e+00 + 5.961666640000000e-03 * tt0 + -2.372948520000000e-06 * tt1 + 4.674121710000000e-10 * tt2 + -3.612352130000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[23] = 3.212466450000000e+00 + 1.514791620000000e-03 * tt0 + 2.592094120000000e-05 * tt1 + -3.576578470000000e-08 * tt2 + 1.471508730000000e-11 * tt3;
    } else {
      cp0_R[23] = 3.016724000000000e+00 + 1.033022920000000e-02 * tt0 + -4.680823490000000e-06 * tt1 + 1.017632880000000e-09 * tt2 + -8.626070410000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[24] = 3.959201480000000e+00 + -7.570522470000000e-03 * tt0 + 5.709902920000000e-05 * tt1 + -6.915887530000000e-08 * tt2 + 2.698843730000000e-11 * tt3;
    } else {
      cp0_R[24] = 2.036111160000000e+00 + 1.464541510000000e-02 * tt0 + -6.710779150000000e-06 * tt1 + 1.472229230000000e-09 * tt2 + -1.257060610000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[25] = 4.306465680000000e+00 + -4.186588920000000e-03 * tt0 + 4.971428070000000e-05 * tt1 + -5.991266060000000e-08 * tt2 + 2.305090040000000e-11 * tt3;
    } else {
      cp0_R[25] = 1.954656420000000e+00 + 1.739727220000000e-02 * tt0 + -7.982066680000000e-06 * tt1 + 1.752176890000000e-09 * tt2 + -1.496415760000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[26] = 4.291424920000000e+00 + -5.501542700000000e-03 * tt0 + 5.994382880000000e-05 * tt1 + -7.084662850000000e-08 * tt2 + 2.686857710000000e-11 * tt3;
    } else {
      cp0_R[26] = 1.071881500000000e+00 + 2.168526770000000e-02 * tt0 + -1.002560670000000e-05 * tt1 + 2.214120010000000e-09 * tt2 + -1.900028900000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[27] = 2.251845286753941e+00 + 1.765401529121510e-02 * tt0 + -2.372620998746318e-05 * tt1 + 1.727224682516638e-08 * tt2 + -5.064957679024219e-12 * tt3;
    } else {
      cp0_R[27] = 5.628172209693201e+00 + 4.085394191788521e-03 * tt0 + -1.593486747480799e-06 * tt1 + 2.862686614342911e-10 * tt2 + -1.940857878719715e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[28] = 2.135836300000000e+00 + 1.811887210000000e-02 * tt0 + -1.739474740000000e-05 * tt1 + 9.343975680000000e-09 * tt2 + -2.014576150000000e-12 * tt3;
    } else {
      cp0_R[28] = 4.511297320000000e+00 + 9.003597449999999e-03 * tt0 + -4.169396350000000e-06 * tt1 + 9.233458820000000e-10 * tt2 + -7.948382010000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[29] = 1.242373300000000e+00 + 3.107220100000000e-02 * tt0 + -5.086686400000000e-05 * tt1 + 4.313713100000000e-08 * tt2 + -1.401459400000000e-11 * tt3;
    } else {
      cp0_R[29] = 5.923829100000000e+00 + 6.792360000000000e-03 * tt0 + -2.565856400000000e-06 * tt1 + 4.498784100000000e-10 * tt2 + -2.994010100000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[30] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 + 0.000000000000000e+00 * tt2 + 0.000000000000000e+00 * tt3;
    } else {
      cp0_R[30] = 2.415942900000000e+00 + 1.748906500000000e-04 * tt0 + -1.190236900000000e-07 * tt1 + 3.022624500000000e-11 * tt2 + -2.036098200000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[31] = 3.492921011861569e+00 + 3.116663872075112e-04 * tt0 + -1.488634448347248e-06 * tt1 + 2.481099930777435e-09 * tt2 + -1.035453466982129e-12 * tt3;
    } else {
      cp0_R[31] = 2.783696025592561e+00 + 1.329837654747218e-03 * tt0 + -4.247778452188489e-07 * tt1 + 7.834799223454380e-11 * tt2 + -5.504412838335915e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[32] = 4.204002900000000e+00 + -2.106138500000000e-03 * tt0 + 7.106834800000000e-06 * tt1 + -5.611519700000000e-09 * tt2 + 1.644071700000000e-12 * tt3;
    } else {
      cp0_R[32] = 2.834742100000000e+00 + 3.207308200000000e-03 * tt0 + -9.339080400000000e-07 * tt1 + 1.370295300000000e-10 * tt2 + -7.920614400000001e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[33] = 4.286027400000000e+00 + -4.660523000000000e-03 * tt0 + 2.171851300000000e-05 * tt1 + -2.280888700000000e-08 * tt2 + 8.263804600000000e-12 * tt3;
    } else {
      cp0_R[33] = 2.634452100000000e+00 + 5.666256000000000e-03 * tt0 + -1.727867600000000e-06 * tt1 + 2.386716100000000e-10 * tt2 + -1.257878600000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[34] = 4.344692700000000e+00 + -4.849707200000000e-03 * tt0 + 2.005945900000000e-05 * tt1 + -2.172646400000000e-08 * tt2 + 7.946953900000000e-12 * tt3;
    } else {
      cp0_R[34] = 3.766754400000000e+00 + 2.891508200000000e-03 * tt0 + -1.041662000000000e-06 * tt1 + 1.684259400000000e-10 * tt2 + -1.009189600000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[35] = 4.218476300000000e+00 + -4.638976000000000e-03 * tt0 + 1.104102200000000e-05 * tt1 + -9.336135400000000e-09 * tt2 + 2.803577000000000e-12 * tt3;
    } else {
      cp0_R[35] = 3.260605600000000e+00 + 1.191104300000000e-03 * tt0 + -4.291704800000000e-07 * tt1 + 6.945766900000000e-11 * tt2 + -4.033609900000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[36] = 3.944021396162443e+00 + -1.585330601832869e-03 * tt0 + 1.665748788222073e-05 * tt1 + -2.047499998024086e-08 * tt2 + 7.834866090855437e-12 * tt3;
    } else {
      cp0_R[36] = 4.884750806581229e+00 + 2.172400959750924e-03 * tt0 + -8.280716485239976e-07 * tt1 + 1.574755976022204e-10 * tt2 + -1.051092824549460e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[37] = 2.257150200000000e+00 + 1.130472800000000e-02 * tt0 + -1.367131900000000e-05 * tt1 + 9.681980600000001e-09 * tt2 + -2.930718200000000e-12 * tt3;
    } else {
      cp0_R[37] = 4.823072900000000e+00 + 2.627025100000000e-03 * tt0 + -9.585087400000000e-07 * tt1 + 1.600071200000000e-10 * tt2 + -9.775230299999999e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[38] = 4.533491600000000e+00 + -5.669617100000000e-03 * tt0 + 1.847320700000000e-05 * tt1 + -1.713709400000000e-08 * tt2 + 5.545457300000000e-12 * tt3;
    } else {
      cp0_R[38] = 2.979250900000000e+00 + 3.494405900000000e-03 * tt0 + -7.854977800000000e-07 * tt1 + 5.747959400000000e-11 * tt2 + -1.933591600000000e-16 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[39] = 3.612935100000000e+00 + -9.555132700000000e-04 * tt0 + 2.144297700000000e-06 * tt1 + -3.151632300000000e-10 * tt2 + -4.643035600000000e-13 * tt3;
    } else {
      cp0_R[39] = 3.745980500000000e+00 + 4.345077500000000e-05 * tt0 + 2.970598400000000e-07 * tt1 + -6.865180600000000e-11 * tt2 + 4.413417300000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[40] = 2.258988600000000e+00 + 1.005117000000000e-02 * tt0 + -1.335176300000000e-05 * tt1 + 1.009234900000000e-08 * tt2 + -3.008902800000000e-12 * tt3;
    } else {
      cp0_R[40] = 3.802239200000000e+00 + 3.146422800000000e-03 * tt0 + -1.063218500000000e-06 * tt1 + 1.661975700000000e-10 * tt2 + -9.799756999999999e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[41] = 2.851656681796872e+00 + 5.695272062464354e-03 * tt0 + 1.071016358036203e-06 * tt1 + -1.622460876289962e-09 * tt2 + -2.351748786566605e-13 * tt3;
    } else {
      cp0_R[41] = 5.209675858242369e+00 + 2.969334630454467e-03 * tt0 + -2.855846743480308e-07 * tt1 + -1.635484557022231e-10 * tt2 + 3.043198870422614e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[42] = 2.524291163538235e+00 + 1.596083018838857e-02 * tt0 + -1.881689501805120e-05 * tt1 + 1.212610017056553e-08 * tt2 + -3.235933108012102e-12 * tt3;
    } else {
      cp0_R[42] = 5.894636352522648e+00 + 3.989595712034258e-03 * tt0 + -1.598237917631213e-06 * tt1 + 2.924939344231556e-10 * tt2 + -2.009468491981192e-14 * tt3;
    };

    if(tt0 < 1.3820e+03) {
      cp0_R[43] = 2.647279890000000e+00 + 1.275053420000000e-02 * tt0 + -1.047942360000000e-05 * tt1 + 4.414328360000000e-09 * tt2 + -7.575214660000000e-13 * tt3;
    } else {
      cp0_R[43] = 6.598604560000000e+00 + 3.027786260000000e-03 * tt0 + -1.077043460000000e-06 * tt1 + 1.716665280000000e-10 * tt2 + -1.014393910000000e-14 * tt3;
    };

    if(tt0 < 1.3680e+03) {
      cp0_R[44] = 3.786049520000000e+00 + 6.886679220000000e-03 * tt0 + -3.214878640000000e-06 * tt1 + 5.171957670000000e-10 * tt2 + 1.193607880000000e-14 * tt3;
    } else {
      cp0_R[44] = 5.897848850000000e+00 + 3.167893930000000e-03 * tt0 + -1.118010640000000e-06 * tt1 + 1.772431440000000e-10 * tt2 + -1.043391770000000e-14 * tt3;
    };

    if(tt0 < 1.4780e+03) {
      cp0_R[45] = 3.630963170000000e+00 + 7.302823570000000e-03 * tt0 + -2.280500030000000e-06 * tt1 + -6.612712980000000e-10 * tt2 + 3.622357520000000e-13 * tt3;
    } else {
      cp0_R[45] = 6.223951340000000e+00 + 3.178640040000000e-03 * tt0 + -1.093787550000000e-06 * tt1 + 1.707351630000000e-10 * tt2 + -9.950219549999999e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[46] = 2.826945256886816e+00 + 8.805023768041478e-03 * tt0 + -8.386135270184225e-06 * tt1 + 4.801067410391268e-09 * tt2 + -1.331078468070705e-12 * tt3;
    } else {
      cp0_R[46] = 5.152191023455068e+00 + 2.305166085067319e-03 * tt0 + -8.803267348458963e-07 * tt1 + 1.478900617804730e-10 * tt2 + -9.097738392331190e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[47] = 3.298616281368291e+00 + 1.408708904146039e-03 * tt0 + -3.964481129109908e-06 * tt1 + 5.642920880408571e-09 * tt2 + -2.445407041148433e-12 * tt3;
    } else {
      cp0_R[47] = 2.926639911210682e+00 + 1.487977101178227e-03 * tt0 + -5.684761849244810e-07 * tt1 + 1.009704225872734e-10 * tt2 + -6.753354387142974e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[48] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 + 0.000000000000000e+00 * tt2 + 0.000000000000000e+00 * tt3;
    } else {
      cp0_R[48] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 + 0.000000000000000e+00 * tt2 + 0.000000000000000e+00 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[49] = 1.052626404724569e+00 + 2.598375709250536e-02 * tt0 + 2.401884142562253e-06 * tt1 + -1.963348865459252e-08 * tt2 + 9.382393185714673e-12 * tt3;
    } else {
      cp0_R[49] = 7.702696163910607e+00 + 1.604420476782206e-02 * tt0 + -5.283322400216647e-06 * tt1 + 7.629859218463020e-10 * tt2 + -3.939228244798265e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[50] = 9.343755233905280e-01 + 2.641831188654101e-02 * tt0 + 6.122525745064917e-06 * tt1 + -2.199549965075941e-08 * tt2 + 9.521730709636926e-12 * tt3;
    } else {
      cp0_R[50] = 7.534135421306297e+00 + 1.887223932284164e-02 * tt0 + -6.271848861570704e-06 * tt1 + 9.147563902677370e-10 * tt2 + -4.783805897099325e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[51] = 3.408787019654885e+00 + 1.074072958392421e-02 * tt0 + 1.885561770902235e-06 * tt1 + -7.151741540340959e-09 * tt2 + 2.864570657787322e-12 * tt3;
    } else {
      cp0_R[51] = 5.975670017995165e+00 + 8.130591556038399e-03 * tt0 + -2.743624403060617e-06 * tt1 + 4.070304991343674e-10 * tt2 + -2.176017817962461e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      cp0_R[52] = 4.729459500000000e+00 + -3.193285800000000e-03 * tt0 + 4.753492100000000e-05 * tt1 + -5.745861100000000e-08 * tt2 + 2.193111200000000e-11 * tt3;
    } else {
      cp0_R[52] = 5.404110800000000e+00 + 1.172305900000000e-02 * tt0 + -4.226313700000000e-06 * tt1 + 6.837245100000000e-10 * tt2 + -4.098486300000000e-14 * tt3;
    };
    
  };

  template <class Type>
  void getEnthalpies_RT(Type& T, vector<Type>& h0_RT) {

    Type tt0 = T;
    Type tt1 = T * tt0;
    Type tt2 = T * tt1;
    Type tt3 = T * tt2;
    Type tt4 = 1.0 / T;

    if(tt0 < 1.0000e+03) {
      h0_RT[0] = 2.344331120000000e+00 + 7.980520749999999e-03 * tt0 * 0.50 + -1.947815100000000e-05 * tt1 * OneThird + 2.015720940000000e-08 * tt2 * 0.25 + -7.376117610000001e-12 * tt3 * 0.20 + -9.179351730000000e+02 * tt4;
    } else {
      h0_RT[0] = 3.337279200000000e+00 + -4.940247310000000e-05 * tt0 * 0.50 + 4.994567780000000e-07 * tt1 * OneThird + -1.795663940000000e-10 * tt2 * 0.25 + 2.002553760000000e-14 * tt3 * 0.20 + -9.501589220000000e+02 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[1] = 2.500000000000000e+00 + 7.053328190000000e-13 * tt0 * 0.50 + -1.995919640000000e-15 * tt1 * OneThird + 2.300816320000000e-18 * tt2 * 0.25 + -9.277323320000001e-22 * tt3 * 0.20 + 2.547365990000000e+04 * tt4;
    } else {
      h0_RT[1] = 2.500000010000000e+00 + -2.308429730000000e-11 * tt0 * 0.50 + 1.615619480000000e-14 * tt1 * OneThird + -4.735152350000000e-18 * tt2 * 0.25 + 4.981973570000000e-22 * tt3 * 0.20 + 2.547365990000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[2] = 3.168267100000000e+00 + -3.279318840000000e-03 * tt0 * 0.50 + 6.643063960000000e-06 * tt1 * OneThird + -6.128066240000000e-09 * tt2 * 0.25 + 2.112659710000000e-12 * tt3 * 0.20 + 2.912225920000000e+04 * tt4;
    } else {
      h0_RT[2] = 2.569420780000000e+00 + -8.597411370000000e-05 * tt0 * 0.50 + 4.194845890000000e-08 * tt1 * OneThird + -1.001777990000000e-11 * tt2 * 0.25 + 1.228336910000000e-15 * tt3 * 0.20 + 2.921757910000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[3] = 3.782456360000000e+00 + -2.996734160000000e-03 * tt0 * 0.50 + 9.847302010000000e-06 * tt1 * OneThird + -9.681295090000001e-09 * tt2 * 0.25 + 3.243728370000000e-12 * tt3 * 0.20 + -1.063943560000000e+03 * tt4;
    } else {
      h0_RT[3] = 3.282537840000000e+00 + 1.483087540000000e-03 * tt0 * 0.50 + -7.579666690000000e-07 * tt1 * OneThird + 2.094705550000000e-10 * tt2 * 0.25 + -2.167177940000000e-14 * tt3 * 0.20 + -1.088457720000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[4] = 3.992015430000000e+00 + -2.401317520000000e-03 * tt0 * 0.50 + 4.617938410000000e-06 * tt1 * OneThird + -3.881133330000000e-09 * tt2 * 0.25 + 1.364114700000000e-12 * tt3 * 0.20 + 3.615080560000000e+03 * tt4;
    } else {
      h0_RT[4] = 3.092887670000000e+00 + 5.484297160000000e-04 * tt0 * 0.50 + 1.265052280000000e-07 * tt1 * OneThird + -8.794615559999999e-11 * tt2 * 0.25 + 1.174123760000000e-14 * tt3 * 0.20 + 3.858657000000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[5] = 4.198640560000000e+00 + -2.036434100000000e-03 * tt0 * 0.50 + 6.520402110000000e-06 * tt1 * OneThird + -5.487970620000000e-09 * tt2 * 0.25 + 1.771978170000000e-12 * tt3 * 0.20 + -3.029372670000000e+04 * tt4;
    } else {
      h0_RT[5] = 3.033992490000000e+00 + 2.176918040000000e-03 * tt0 * 0.50 + -1.640725180000000e-07 * tt1 * OneThird + -9.704198700000000e-11 * tt2 * 0.25 + 1.682009920000000e-14 * tt3 * 0.20 + -3.000429710000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[6] = 4.301798010000000e+00 + -4.749120510000000e-03 * tt0 * 0.50 + 2.115828910000000e-05 * tt1 * OneThird + -2.427638940000000e-08 * tt2 * 0.25 + 9.292251240000000e-12 * tt3 * 0.20 + 2.948080400000000e+02 * tt4;
    } else {
      h0_RT[6] = 4.017210900000000e+00 + 2.239820130000000e-03 * tt0 * 0.50 + -6.336581500000000e-07 * tt1 * OneThird + 1.142463700000000e-10 * tt2 * 0.25 + -1.079085350000000e-14 * tt3 * 0.20 + 1.118567130000000e+02 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[7] = 4.276112690000000e+00 + -5.428224169999999e-04 * tt0 * 0.50 + 1.673357010000000e-05 * tt1 * OneThird + -2.157708130000000e-08 * tt2 * 0.25 + 8.624543630000000e-12 * tt3 * 0.20 + -1.770258210000000e+04 * tt4;
    } else {
      h0_RT[7] = 4.165002850000000e+00 + 4.908316940000000e-03 * tt0 * 0.50 + -1.901392250000000e-06 * tt1 * OneThird + 3.711859860000000e-10 * tt2 * 0.25 + -2.879083050000000e-14 * tt3 * 0.20 + -1.786178770000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[8] = 2.554239550000000e+00 + -3.215377240000000e-04 * tt0 * 0.50 + 7.337922450000000e-07 * tt1 * OneThird + -7.322348890000000e-10 * tt2 * 0.25 + 2.665214460000000e-13 * tt3 * 0.20 + 8.544388320000000e+04 * tt4;
    } else {
      h0_RT[8] = 2.492668880000000e+00 + 4.798892840000000e-05 * tt0 * 0.50 + -7.243350200000001e-08 * tt1 * OneThird + 3.742910290000000e-11 * tt2 * 0.25 + -4.872778930000000e-15 * tt3 * 0.20 + 8.545129530000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[9] = 3.489816650000000e+00 + 3.238355410000000e-04 * tt0 * 0.50 + -1.688990650000000e-06 * tt1 * OneThird + 3.162173270000000e-09 * tt2 * 0.25 + -1.406090670000000e-12 * tt3 * 0.20 + 7.079729340000000e+04 * tt4;
    } else {
      h0_RT[9] = 2.878464730000000e+00 + 9.709136810000000e-04 * tt0 * 0.50 + 1.444456550000000e-07 * tt1 * OneThird + -1.306878490000000e-10 * tt2 * 0.25 + 1.760793830000000e-14 * tt3 * 0.20 + 7.101243640000001e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[10] = 3.762678670000000e+00 + 9.688721430000000e-04 * tt0 * 0.50 + 2.794898410000000e-06 * tt1 * OneThird + -3.850911530000000e-09 * tt2 * 0.25 + 1.687417190000000e-12 * tt3 * 0.20 + 4.600404010000000e+04 * tt4;
    } else {
      h0_RT[10] = 2.874101130000000e+00 + 3.656392920000000e-03 * tt0 * 0.50 + -1.408945970000000e-06 * tt1 * OneThird + 2.601795490000000e-10 * tt2 * 0.25 + -1.877275670000000e-14 * tt3 * 0.20 + 4.626360400000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[11] = 4.198604110000000e+00 + -2.366614190000000e-03 * tt0 * 0.50 + 8.232962200000000e-06 * tt1 * OneThird + -6.688159810000000e-09 * tt2 * 0.25 + 1.943147370000000e-12 * tt3 * 0.20 + 5.049681630000000e+04 * tt4;
    } else {
      h0_RT[11] = 2.292038420000000e+00 + 4.655886370000000e-03 * tt0 * 0.50 + -2.011919470000000e-06 * tt1 * OneThird + 4.179060000000000e-10 * tt2 * 0.25 + -3.397163650000000e-14 * tt3 * 0.20 + 5.092599970000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[12] = 3.673590400000000e+00 + 2.010951750000000e-03 * tt0 * 0.50 + 5.730218560000000e-06 * tt1 * OneThird + -6.871174250000000e-09 * tt2 * 0.25 + 2.543857340000000e-12 * tt3 * 0.20 + 1.644499880000000e+04 * tt4;
    } else {
      h0_RT[12] = 2.285717720000000e+00 + 7.239900370000000e-03 * tt0 * 0.50 + -2.987143480000000e-06 * tt1 * OneThird + 5.956846440000000e-10 * tt2 * 0.25 + -4.671543940000000e-14 * tt3 * 0.20 + 1.677558430000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[13] = 5.149876130000000e+00 + -1.367097880000000e-02 * tt0 * 0.50 + 4.918005990000000e-05 * tt1 * OneThird + -4.847430260000000e-08 * tt2 * 0.25 + 1.666939560000000e-11 * tt3 * 0.20 + -1.024664760000000e+04 * tt4;
    } else {
      h0_RT[13] = 7.485149500000000e-02 + 1.339094670000000e-02 * tt0 * 0.50 + -5.732858090000000e-06 * tt1 * OneThird + 1.222925350000000e-09 * tt2 * 0.25 + -1.018152300000000e-13 * tt3 * 0.20 + -9.468344590000001e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[14] = 3.579533470000000e+00 + -6.103536800000000e-04 * tt0 * 0.50 + 1.016814330000000e-06 * tt1 * OneThird + 9.070058840000000e-10 * tt2 * 0.25 + -9.044244990000000e-13 * tt3 * 0.20 + -1.434408600000000e+04 * tt4;
    } else {
      h0_RT[14] = 2.715185610000000e+00 + 2.062527430000000e-03 * tt0 * 0.50 + -9.988257710000001e-07 * tt1 * OneThird + 2.300530080000000e-10 * tt2 * 0.25 + -2.036477160000000e-14 * tt3 * 0.20 + -1.415187240000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[15] = 2.356773520000000e+00 + 8.984596770000000e-03 * tt0 * 0.50 + -7.123562690000000e-06 * tt1 * OneThird + 2.459190220000000e-09 * tt2 * 0.25 + -1.436995480000000e-13 * tt3 * 0.20 + -4.837196970000000e+04 * tt4;
    } else {
      h0_RT[15] = 3.857460290000000e+00 + 4.414370260000000e-03 * tt0 * 0.50 + -2.214814040000000e-06 * tt1 * OneThird + 5.234901880000001e-10 * tt2 * 0.25 + -4.720841640000000e-14 * tt3 * 0.20 + -4.875916600000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[16] = 4.221185840000000e+00 + -3.243925320000000e-03 * tt0 * 0.50 + 1.377994460000000e-05 * tt1 * OneThird + -1.331440930000000e-08 * tt2 * 0.25 + 4.337688650000000e-12 * tt3 * 0.20 + 3.839564960000000e+03 * tt4;
    } else {
      h0_RT[16] = 2.772174380000000e+00 + 4.956955260000000e-03 * tt0 * 0.50 + -2.484456130000000e-06 * tt1 * OneThird + 5.891617780000000e-10 * tt2 * 0.25 + -5.335087110000000e-14 * tt3 * 0.20 + 4.011918150000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[17] = 4.793723150000000e+00 + -9.908333690000000e-03 * tt0 * 0.50 + 3.732200080000000e-05 * tt1 * OneThird + -3.792852610000000e-08 * tt2 * 0.25 + 1.317726520000000e-11 * tt3 * 0.20 + -1.430895670000000e+04 * tt4;
    } else {
      h0_RT[17] = 1.760690080000000e+00 + 9.200000820000000e-03 * tt0 * 0.50 + -4.422588130000000e-06 * tt1 * OneThird + 1.006412120000000e-09 * tt2 * 0.25 + -8.838556400000001e-14 * tt3 * 0.20 + -1.399583230000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[18] = 3.863889180000000e+00 + 5.596723040000000e-03 * tt0 * 0.50 + 5.932717910000000e-06 * tt1 * OneThird + -1.045320120000000e-08 * tt2 * 0.25 + 4.369672780000000e-12 * tt3 * 0.20 + -3.193913670000000e+03 * tt4;
    } else {
      h0_RT[18] = 3.692665690000000e+00 + 8.645767970000001e-03 * tt0 * 0.50 + -3.751011200000000e-06 * tt1 * OneThird + 7.872346360000000e-10 * tt2 * 0.25 + -6.485542010000000e-14 * tt3 * 0.20 + -3.242506270000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[19] = 2.106083740868644e+00 + 7.217545611840916e-03 * tt0 * 0.50 + 5.335825777358757e-06 * tt1 * OneThird + -7.374562574086794e-09 * tt2 * 0.25 + 2.074342158630007e-12 * tt3 * 0.20 + 9.786125620403312e+02 * tt4;
    } else {
      h0_RT[19] = 3.771000099870984e+00 + 7.871073375136668e-03 * tt0 * 0.50 + -2.656064859783170e-06 * tt1 * OneThird + 3.943402155606197e-10 * tt2 * 0.25 + -2.111411617357040e-14 * tt3 * 0.20 + 1.277614246529541e+02 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[20] = 5.715395820000000e+00 + -1.523091290000000e-02 * tt0 * 0.50 + 6.524411550000000e-05 * tt1 * OneThird + -7.108068890000000e-08 * tt2 * 0.25 + 2.613526980000000e-11 * tt3 * 0.20 + -2.564276560000000e+04 * tt4;
    } else {
      h0_RT[20] = 1.789707910000000e+00 + 1.409382920000000e-02 * tt0 * 0.50 + -6.365008350000000e-06 * tt1 * OneThird + 1.381710850000000e-09 * tt2 * 0.25 + -1.170602200000000e-13 * tt3 * 0.20 + -2.537487470000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[21] = 2.889657330000000e+00 + 1.340996110000000e-02 * tt0 * 0.50 + -2.847695010000000e-05 * tt1 * OneThird + 2.947910450000000e-08 * tt2 * 0.25 + -1.093315110000000e-11 * tt3 * 0.20 + 6.683939320000001e+04 * tt4;
    } else {
      h0_RT[21] = 3.167806520000000e+00 + 4.752219020000000e-03 * tt0 * 0.50 + -1.837870770000000e-06 * tt1 * OneThird + 3.041902520000000e-10 * tt2 * 0.25 + -1.772327700000000e-14 * tt3 * 0.20 + 6.712106500000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[22] = 8.086810940000000e-01 + 2.336156290000000e-02 * tt0 * 0.50 + -3.551718150000000e-05 * tt1 * OneThird + 2.801524370000000e-08 * tt2 * 0.25 + -8.500729740000000e-12 * tt3 * 0.20 + 2.642898070000000e+04 * tt4;
    } else {
      h0_RT[22] = 4.147569640000000e+00 + 5.961666640000000e-03 * tt0 * 0.50 + -2.372948520000000e-06 * tt1 * OneThird + 4.674121710000000e-10 * tt2 * 0.25 + -3.612352130000000e-14 * tt3 * 0.20 + 2.593599920000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[23] = 3.212466450000000e+00 + 1.514791620000000e-03 * tt0 * 0.50 + 2.592094120000000e-05 * tt1 * OneThird + -3.576578470000000e-08 * tt2 * 0.25 + 1.471508730000000e-11 * tt3 * 0.20 + 3.485984680000000e+04 * tt4;
    } else {
      h0_RT[23] = 3.016724000000000e+00 + 1.033022920000000e-02 * tt0 * 0.50 + -4.680823490000000e-06 * tt1 * OneThird + 1.017632880000000e-09 * tt2 * 0.25 + -8.626070410000000e-14 * tt3 * 0.20 + 3.461287390000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[24] = 3.959201480000000e+00 + -7.570522470000000e-03 * tt0 * 0.50 + 5.709902920000000e-05 * tt1 * OneThird + -6.915887530000000e-08 * tt2 * 0.25 + 2.698843730000000e-11 * tt3 * 0.20 + 5.089775930000000e+03 * tt4;
    } else {
      h0_RT[24] = 2.036111160000000e+00 + 1.464541510000000e-02 * tt0 * 0.50 + -6.710779150000000e-06 * tt1 * OneThird + 1.472229230000000e-09 * tt2 * 0.25 + -1.257060610000000e-13 * tt3 * 0.20 + 4.939886140000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[25] = 4.306465680000000e+00 + -4.186588920000000e-03 * tt0 * 0.50 + 4.971428070000000e-05 * tt1 * OneThird + -5.991266060000000e-08 * tt2 * 0.25 + 2.305090040000000e-11 * tt3 * 0.20 + 1.284162650000000e+04 * tt4;
    } else {
      h0_RT[25] = 1.954656420000000e+00 + 1.739727220000000e-02 * tt0 * 0.50 + -7.982066680000000e-06 * tt1 * OneThird + 1.752176890000000e-09 * tt2 * 0.25 + -1.496415760000000e-13 * tt3 * 0.20 + 1.285752000000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[26] = 4.291424920000000e+00 + -5.501542700000000e-03 * tt0 * 0.50 + 5.994382880000000e-05 * tt1 * OneThird + -7.084662850000000e-08 * tt2 * 0.25 + 2.686857710000000e-11 * tt3 * 0.20 + -1.152220550000000e+04 * tt4;
    } else {
      h0_RT[26] = 1.071881500000000e+00 + 2.168526770000000e-02 * tt0 * 0.50 + -1.002560670000000e-05 * tt1 * OneThird + 2.214120010000000e-09 * tt2 * 0.25 + -1.900028900000000e-13 * tt3 * 0.20 + -1.142639320000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[27] = 2.251845286753941e+00 + 1.765401529121510e-02 * tt0 * 0.50 + -2.372620998746318e-05 * tt1 * OneThird + 1.727224682516638e-08 * tt2 * 0.25 + -5.064957679024219e-12 * tt3 * 0.20 + 2.005943757764270e+04 * tt4;
    } else {
      h0_RT[27] = 5.628172209693201e+00 + 4.085394191788521e-03 * tt0 * 0.50 + -1.593486747480799e-06 * tt1 * OneThird + 2.862686614342911e-10 * tt2 * 0.25 + -1.940857878719715e-14 * tt3 * 0.20 + 1.932723151197489e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[28] = 2.135836300000000e+00 + 1.811887210000000e-02 * tt0 * 0.50 + -1.739474740000000e-05 * tt1 * OneThird + 9.343975680000000e-09 * tt2 * 0.25 + -2.014576150000000e-12 * tt3 * 0.20 + -7.042918040000000e+03 * tt4;
    } else {
      h0_RT[28] = 4.511297320000000e+00 + 9.003597449999999e-03 * tt0 * 0.50 + -4.169396350000000e-06 * tt1 * OneThird + 9.233458820000000e-10 * tt2 * 0.25 + -7.948382010000000e-14 * tt3 * 0.20 + -7.551053110000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[29] = 1.242373300000000e+00 + 3.107220100000000e-02 * tt0 * 0.50 + -5.086686400000000e-05 * tt1 * OneThird + 4.313713100000000e-08 * tt2 * 0.25 + -1.401459400000000e-11 * tt3 * 0.20 + 8.031614300000000e+03 * tt4;
    } else {
      h0_RT[29] = 5.923829100000000e+00 + 6.792360000000000e-03 * tt0 * 0.50 + -2.565856400000000e-06 * tt1 * OneThird + 4.498784100000000e-10 * tt2 * 0.25 + -2.994010100000000e-14 * tt3 * 0.20 + 7.264626000000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[30] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 * 0.50 + 0.000000000000000e+00 * tt1 * OneThird + 0.000000000000000e+00 * tt2 * 0.25 + 0.000000000000000e+00 * tt3 * 0.20 + 5.610463700000000e+04 * tt4;
    } else {
      h0_RT[30] = 2.415942900000000e+00 + 1.748906500000000e-04 * tt0 * 0.50 + -1.190236900000000e-07 * tt1 * OneThird + 3.022624500000000e-11 * tt2 * 0.25 + -2.036098200000000e-15 * tt3 * 0.20 + 5.613377300000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[31] = 3.492921011861569e+00 + 3.116663872075112e-04 * tt0 * 0.50 + -1.488634448347248e-06 * tt1 * OneThird + 2.481099930777435e-09 * tt2 * 0.25 + -1.035453466982129e-12 * tt3 * 0.20 + 4.188062815335995e+04 * tt4;
    } else {
      h0_RT[31] = 2.783696025592561e+00 + 1.329837654747218e-03 * tt0 * 0.50 + -4.247778452188489e-07 * tt1 * OneThird + 7.834799223454380e-11 * tt2 * 0.25 + -5.504412838335915e-15 * tt3 * 0.20 + 4.212084681195661e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[32] = 4.204002900000000e+00 + -2.106138500000000e-03 * tt0 * 0.50 + 7.106834800000000e-06 * tt1 * OneThird + -5.611519700000000e-09 * tt2 * 0.25 + 1.644071700000000e-12 * tt3 * 0.20 + 2.188591000000000e+04 * tt4;
    } else {
      h0_RT[32] = 2.834742100000000e+00 + 3.207308200000000e-03 * tt0 * 0.50 + -9.339080400000000e-07 * tt1 * OneThird + 1.370295300000000e-10 * tt2 * 0.25 + -7.920614400000001e-15 * tt3 * 0.20 + 2.217195700000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[33] = 4.286027400000000e+00 + -4.660523000000000e-03 * tt0 * 0.50 + 2.171851300000000e-05 * tt1 * OneThird + -2.280888700000000e-08 * tt2 * 0.25 + 8.263804600000000e-12 * tt3 * 0.20 + -6.741728500000000e+03 * tt4;
    } else {
      h0_RT[33] = 2.634452100000000e+00 + 5.666256000000000e-03 * tt0 * 0.50 + -1.727867600000000e-06 * tt1 * OneThird + 2.386716100000000e-10 * tt2 * 0.25 + -1.257878600000000e-14 * tt3 * 0.20 + -6.544695800000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[34] = 4.344692700000000e+00 + -4.849707200000000e-03 * tt0 * 0.50 + 2.005945900000000e-05 * tt1 * OneThird + -2.172646400000000e-08 * tt2 * 0.25 + 7.946953900000000e-12 * tt3 * 0.20 + 2.879197300000000e+04 * tt4;
    } else {
      h0_RT[34] = 3.766754400000000e+00 + 2.891508200000000e-03 * tt0 * 0.50 + -1.041662000000000e-06 * tt1 * OneThird + 1.684259400000000e-10 * tt2 * 0.25 + -1.009189600000000e-14 * tt3 * 0.20 + 2.865069700000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[35] = 4.218476300000000e+00 + -4.638976000000000e-03 * tt0 * 0.50 + 1.104102200000000e-05 * tt1 * OneThird + -9.336135400000000e-09 * tt2 * 0.25 + 2.803577000000000e-12 * tt3 * 0.20 + 9.844623000000000e+03 * tt4;
    } else {
      h0_RT[35] = 3.260605600000000e+00 + 1.191104300000000e-03 * tt0 * 0.50 + -4.291704800000000e-07 * tt1 * OneThird + 6.945766900000000e-11 * tt2 * 0.25 + -4.033609900000000e-15 * tt3 * 0.20 + 9.920974600000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[36] = 3.944021396162443e+00 + -1.585330601832869e-03 * tt0 * 0.50 + 1.665748788222073e-05 * tt1 * OneThird + -2.047499998024086e-08 * tt2 * 0.25 + 7.834866090855437e-12 * tt3 * 0.20 + 2.896618560441036e+03 * tt4;
    } else {
      h0_RT[36] = 4.884750806581229e+00 + 2.172400959750924e-03 * tt0 * 0.50 + -8.280716485239976e-07 * tt1 * OneThird + 1.574755976022204e-10 * tt2 * 0.25 + -1.051092824549460e-14 * tt3 * 0.20 + 2.316499722171343e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[37] = 2.257150200000000e+00 + 1.130472800000000e-02 * tt0 * 0.50 + -1.367131900000000e-05 * tt1 * OneThird + 9.681980600000001e-09 * tt2 * 0.25 + -2.930718200000000e-12 * tt3 * 0.20 + 8.741774400000000e+03 * tt4;
    } else {
      h0_RT[37] = 4.823072900000000e+00 + 2.627025100000000e-03 * tt0 * 0.50 + -9.585087400000000e-07 * tt1 * OneThird + 1.600071200000000e-10 * tt2 * 0.25 + -9.775230299999999e-15 * tt3 * 0.20 + 8.073404800000000e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[38] = 4.533491600000000e+00 + -5.669617100000000e-03 * tt0 * 0.50 + 1.847320700000000e-05 * tt1 * OneThird + -1.713709400000000e-08 * tt2 * 0.25 + 5.545457300000000e-12 * tt3 * 0.20 + 1.154829700000000e+04 * tt4;
    } else {
      h0_RT[38] = 2.979250900000000e+00 + 3.494405900000000e-03 * tt0 * 0.50 + -7.854977800000000e-07 * tt1 * OneThird + 5.747959400000000e-11 * tt2 * 0.25 + -1.933591600000000e-16 * tt3 * 0.20 + 1.175058200000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[39] = 3.612935100000000e+00 + -9.555132700000000e-04 * tt0 * 0.50 + 2.144297700000000e-06 * tt1 * OneThird + -3.151632300000000e-10 * tt2 * 0.25 + -4.643035600000000e-13 * tt3 * 0.20 + 5.170834000000000e+04 * tt4;
    } else {
      h0_RT[39] = 3.745980500000000e+00 + 4.345077500000000e-05 * tt0 * 0.50 + 2.970598400000000e-07 * tt1 * OneThird + -6.865180600000000e-11 * tt2 * 0.25 + 4.413417300000000e-15 * tt3 * 0.20 + 5.153618800000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[40] = 2.258988600000000e+00 + 1.005117000000000e-02 * tt0 * 0.50 + -1.335176300000000e-05 * tt1 * OneThird + 1.009234900000000e-08 * tt2 * 0.25 + -3.008902800000000e-12 * tt3 * 0.20 + 1.471263300000000e+04 * tt4;
    } else {
      h0_RT[40] = 3.802239200000000e+00 + 3.146422800000000e-03 * tt0 * 0.50 + -1.063218500000000e-06 * tt1 * OneThird + 1.661975700000000e-10 * tt2 * 0.25 + -9.799756999999999e-15 * tt3 * 0.20 + 1.440729200000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[41] = 2.851656681796872e+00 + 5.695272062464354e-03 * tt0 * 0.50 + 1.071016358036203e-06 * tt1 * OneThird + -1.622460876289962e-09 * tt2 * 0.25 + -2.351748786566605e-13 * tt3 * 0.20 + 2.863782061262985e+04 * tt4;
    } else {
      h0_RT[41] = 5.209675858242369e+00 + 2.969334630454467e-03 * tt0 * 0.50 + -2.855846743480308e-07 * tt1 * OneThird + -1.635484557022231e-10 * tt2 * 0.25 + 3.043198870422614e-14 * tt3 * 0.20 + 2.767712101769826e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[42] = 2.524291163538235e+00 + 1.596083018838857e-02 * tt0 * 0.50 + -1.881689501805120e-05 * tt1 * OneThird + 1.212610017056553e-08 * tt2 * 0.25 + -3.235933108012102e-12 * tt3 * 0.20 + 5.426198685610552e+04 * tt4;
    } else {
      h0_RT[42] = 5.894636352522648e+00 + 3.989595712034258e-03 * tt0 * 0.50 + -1.598237917631213e-06 * tt1 * OneThird + 2.924939344231556e-10 * tt2 * 0.25 + -2.009468491981192e-14 * tt3 * 0.20 + 5.345294041290875e+04 * tt4;
    };

    if(tt0 < 1.3820e+03) {
      h0_RT[43] = 2.647279890000000e+00 + 1.275053420000000e-02 * tt0 * 0.50 + -1.047942360000000e-05 * tt1 * OneThird + 4.414328360000000e-09 * tt2 * 0.25 + -7.575214660000000e-13 * tt3 * 0.20 + 1.929902520000000e+04 * tt4;
    } else {
      h0_RT[43] = 6.598604560000000e+00 + 3.027786260000000e-03 * tt0 * 0.50 + -1.077043460000000e-06 * tt1 * OneThird + 1.716665280000000e-10 * tt2 * 0.25 + -1.014393910000000e-14 * tt3 * 0.20 + 1.796613390000000e+04 * tt4;
    };

    if(tt0 < 1.3680e+03) {
      h0_RT[44] = 3.786049520000000e+00 + 6.886679220000000e-03 * tt0 * 0.50 + -3.214878640000000e-06 * tt1 * OneThird + 5.171957670000000e-10 * tt2 * 0.25 + 1.193607880000000e-14 * tt3 * 0.20 + -2.826984000000000e+03 * tt4;
    } else {
      h0_RT[44] = 5.897848850000000e+00 + 3.167893930000000e-03 * tt0 * 0.50 + -1.118010640000000e-06 * tt1 * OneThird + 1.772431440000000e-10 * tt2 * 0.25 + -1.043391770000000e-14 * tt3 * 0.20 + -3.706533310000000e+03 * tt4;
    };

    if(tt0 < 1.4780e+03) {
      h0_RT[45] = 3.630963170000000e+00 + 7.302823570000000e-03 * tt0 * 0.50 + -2.280500030000000e-06 * tt1 * OneThird + -6.612712980000000e-10 * tt2 * 0.25 + 3.622357520000000e-13 * tt3 * 0.20 + -1.558736360000000e+04 * tt4;
    } else {
      h0_RT[45] = 6.223951340000000e+00 + 3.178640040000000e-03 * tt0 * 0.50 + -1.093787550000000e-06 * tt1 * OneThird + 1.707351630000000e-10 * tt2 * 0.25 + -9.950219549999999e-15 * tt3 * 0.20 + -1.665993440000000e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[46] = 2.826945256886816e+00 + 8.805023768041478e-03 * tt0 * 0.50 + -8.386135270184225e-06 * tt1 * OneThird + 4.801067410391268e-09 * tt2 * 0.25 + -1.331078468070705e-12 * tt3 * 0.20 + 1.468247598894414e+04 * tt4;
    } else {
      h0_RT[46] = 5.152191023455068e+00 + 2.305166085067319e-03 * tt0 * 0.50 + -8.803267348458963e-07 * tt1 * OneThird + 1.478900617804730e-10 * tt2 * 0.25 + -9.097738392331190e-15 * tt3 * 0.20 + 1.400412107663388e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[47] = 3.298616281368291e+00 + 1.408708904146039e-03 * tt0 * 0.50 + -3.964481129109908e-06 * tt1 * OneThird + 5.642920880408571e-09 * tt2 * 0.25 + -2.445407041148433e-12 * tt3 * 0.20 + -1.020894198687962e+03 * tt4;
    } else {
      h0_RT[47] = 2.926639911210682e+00 + 1.487977101178227e-03 * tt0 * 0.50 + -5.684761849244810e-07 * tt1 * OneThird + 1.009704225872734e-10 * tt2 * 0.25 + -6.753354387142974e-15 * tt3 * 0.20 + -9.227966980051905e+02 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[48] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 * 0.50 + 0.000000000000000e+00 * tt1 * OneThird + 0.000000000000000e+00 * tt2 * 0.25 + 0.000000000000000e+00 * tt3 * 0.20 + -7.453750000000000e+02 * tt4;
    } else {
      h0_RT[48] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 * 0.50 + 0.000000000000000e+00 * tt1 * OneThird + 0.000000000000000e+00 * tt2 * 0.25 + 0.000000000000000e+00 * tt3 * 0.20 + -7.453750000000000e+02 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[49] = 1.052626404724569e+00 + 2.598375709250536e-02 * tt0 * 0.50 + 2.401884142562253e-06 * tt1 * OneThird + -1.963348865459252e-08 * tt2 * 0.25 + 9.382393185714673e-12 * tt3 * 0.20 + 1.063175828568324e+04 * tt4;
    } else {
      h0_RT[49] = 7.702696163910607e+00 + 1.604420476782206e-02 * tt0 * 0.50 + -5.283322400216647e-06 * tt1 * OneThird + 7.629859218463020e-10 * tt2 * 0.25 + -3.939228244798265e-14 * tt3 * 0.20 + 8.298438652621320e+03 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[50] = 9.343755233905280e-01 + 2.641831188654101e-02 * tt0 * 0.50 + 6.122525745064917e-06 * tt1 * OneThird + -2.199549965075941e-08 * tt2 * 0.25 + 9.521730709636926e-12 * tt3 * 0.20 + -1.395859976875131e+04 * tt4;
    } else {
      h0_RT[50] = 7.534135421306297e+00 + 1.887223932284164e-02 * tt0 * 0.50 + -6.271848861570704e-06 * tt1 * OneThird + 9.147563902677370e-10 * tt2 * 0.25 + -4.783805897099325e-14 * tt3 * 0.20 + -1.646751543914072e+04 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[51] = 3.408787019654885e+00 + 1.074072958392421e-02 * tt0 * 0.50 + 1.885561770902235e-06 * tt1 * OneThird + -7.151741540340959e-09 * tt2 * 0.25 + 2.864570657787322e-12 * tt3 * 0.20 + 1.521502513838755e+03 * tt4;
    } else {
      h0_RT[51] = 5.975670017995165e+00 + 8.130591556038399e-03 * tt0 * 0.50 + -2.743624403060617e-06 * tt1 * OneThird + 4.070304991343674e-10 * tt2 * 0.25 + -2.176017817962461e-14 * tt3 * 0.20 + 4.903237447535527e+02 * tt4;
    };

    if(tt0 < 1.0000e+03) {
      h0_RT[52] = 4.729459500000000e+00 + -3.193285800000000e-03 * tt0 * 0.50 + 4.753492100000000e-05 * tt1 * OneThird + -5.745861100000000e-08 * tt2 * 0.25 + 2.193111200000000e-11 * tt3 * 0.20 + -2.157287800000000e+04 * tt4;
    } else {
      h0_RT[52] = 5.404110800000000e+00 + 1.172305900000000e-02 * tt0 * 0.50 + -4.226313700000000e-06 * tt1 * OneThird + 6.837245100000000e-10 * tt2 * 0.25 + -4.098486300000000e-14 * tt3 * 0.20 + -2.259312200000000e+04 * tt4;
    };

  };

  template <class Type>
  void getEnthalpiesDerivatives(Type& T, vector<Type>& dh0dT) {

    Type tt0 = T;
    Type tt1 = T * tt0;
    Type tt2 = T * tt1;
    Type tt3 = T * tt2;

    if(tt0 < 1.0000e+03) {
      dh0dT[0] = 2.344331120000000e+00 + 7.980520749999999e-03 * tt0 + -1.947815100000000e-05 * tt1 + 2.015720940000000e-08 * tt2 + -7.376117610000001e-12 * tt3;
    } else {
      dh0dT[0] = 3.337279200000000e+00 + -4.940247310000000e-05 * tt0 + 4.994567780000000e-07 * tt1 + -1.795663940000000e-10 * tt2 + 2.002553760000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[1] = 2.500000000000000e+00 + 7.053328190000000e-13 * tt0 + -1.995919640000000e-15 * tt1 + 2.300816320000000e-18 * tt2 + -9.277323320000001e-22 * tt3;
    } else {
      dh0dT[1] = 2.500000010000000e+00 + -2.308429730000000e-11 * tt0 + 1.615619480000000e-14 * tt1 + -4.735152350000000e-18 * tt2 + 4.981973570000000e-22 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[2] = 3.168267100000000e+00 + -3.279318840000000e-03 * tt0 + 6.643063960000000e-06 * tt1 + -6.128066240000000e-09 * tt2 + 2.112659710000000e-12 * tt3;
    } else {
      dh0dT[2] = 2.569420780000000e+00 + -8.597411370000000e-05 * tt0 + 4.194845890000000e-08 * tt1 + -1.001777990000000e-11 * tt2 + 1.228336910000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[3] = 3.782456360000000e+00 + -2.996734160000000e-03 * tt0 + 9.847302010000000e-06 * tt1 + -9.681295090000001e-09 * tt2 + 3.243728370000000e-12 * tt3;
    } else {
      dh0dT[3] = 3.282537840000000e+00 + 1.483087540000000e-03 * tt0 + -7.579666690000000e-07 * tt1 + 2.094705550000000e-10 * tt2 + -2.167177940000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[4] = 3.992015430000000e+00 + -2.401317520000000e-03 * tt0 + 4.617938410000000e-06 * tt1 + -3.881133330000000e-09 * tt2 + 1.364114700000000e-12 * tt3;
    } else {
      dh0dT[4] = 3.092887670000000e+00 + 5.484297160000000e-04 * tt0 + 1.265052280000000e-07 * tt1 + -8.794615559999999e-11 * tt2 + 1.174123760000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[5] = 4.198640560000000e+00 + -2.036434100000000e-03 * tt0 + 6.520402110000000e-06 * tt1 + -5.487970620000000e-09 * tt2 + 1.771978170000000e-12 * tt3;
    } else {
      dh0dT[5] = 3.033992490000000e+00 + 2.176918040000000e-03 * tt0 + -1.640725180000000e-07 * tt1 + -9.704198700000000e-11 * tt2 + 1.682009920000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[6] = 4.301798010000000e+00 + -4.749120510000000e-03 * tt0 + 2.115828910000000e-05 * tt1 + -2.427638940000000e-08 * tt2 + 9.292251240000000e-12 * tt3;
    } else {
      dh0dT[6] = 4.017210900000000e+00 + 2.239820130000000e-03 * tt0 + -6.336581500000000e-07 * tt1 + 1.142463700000000e-10 * tt2 + -1.079085350000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[7] = 4.276112690000000e+00 + -5.428224169999999e-04 * tt0 + 1.673357010000000e-05 * tt1 + -2.157708130000000e-08 * tt2 + 8.624543630000000e-12 * tt3;
    } else {
      dh0dT[7] = 4.165002850000000e+00 + 4.908316940000000e-03 * tt0 + -1.901392250000000e-06 * tt1 + 3.711859860000000e-10 * tt2 + -2.879083050000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[8] = 2.554239550000000e+00 + -3.215377240000000e-04 * tt0 + 7.337922450000000e-07 * tt1 + -7.322348890000000e-10 * tt2 + 2.665214460000000e-13 * tt3;
    } else {
      dh0dT[8] = 2.492668880000000e+00 + 4.798892840000000e-05 * tt0 + -7.243350200000001e-08 * tt1 + 3.742910290000000e-11 * tt2 + -4.872778930000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[9] = 3.489816650000000e+00 + 3.238355410000000e-04 * tt0 + -1.688990650000000e-06 * tt1 + 3.162173270000000e-09 * tt2 + -1.406090670000000e-12 * tt3;
    } else {
      dh0dT[9] = 2.878464730000000e+00 + 9.709136810000000e-04 * tt0 + 1.444456550000000e-07 * tt1 + -1.306878490000000e-10 * tt2 + 1.760793830000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[10] = 3.762678670000000e+00 + 9.688721430000000e-04 * tt0 + 2.794898410000000e-06 * tt1 + -3.850911530000000e-09 * tt2 + 1.687417190000000e-12 * tt3;
    } else {
      dh0dT[10] = 2.874101130000000e+00 + 3.656392920000000e-03 * tt0 + -1.408945970000000e-06 * tt1 + 2.601795490000000e-10 * tt2 + -1.877275670000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[11] = 4.198604110000000e+00 + -2.366614190000000e-03 * tt0 + 8.232962200000000e-06 * tt1 + -6.688159810000000e-09 * tt2 + 1.943147370000000e-12 * tt3;
    } else {
      dh0dT[11] = 2.292038420000000e+00 + 4.655886370000000e-03 * tt0 + -2.011919470000000e-06 * tt1 + 4.179060000000000e-10 * tt2 + -3.397163650000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[12] = 3.673590400000000e+00 + 2.010951750000000e-03 * tt0 + 5.730218560000000e-06 * tt1 + -6.871174250000000e-09 * tt2 + 2.543857340000000e-12 * tt3;
    } else {
      dh0dT[12] = 2.285717720000000e+00 + 7.239900370000000e-03 * tt0 + -2.987143480000000e-06 * tt1 + 5.956846440000000e-10 * tt2 + -4.671543940000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[13] = 5.149876130000000e+00 + -1.367097880000000e-02 * tt0 + 4.918005990000000e-05 * tt1 + -4.847430260000000e-08 * tt2 + 1.666939560000000e-11 * tt3;
    } else {
      dh0dT[13] = 7.485149500000000e-02 + 1.339094670000000e-02 * tt0 + -5.732858090000000e-06 * tt1 + 1.222925350000000e-09 * tt2 + -1.018152300000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[14] = 3.579533470000000e+00 + -6.103536800000000e-04 * tt0 + 1.016814330000000e-06 * tt1 + 9.070058840000000e-10 * tt2 + -9.044244990000000e-13 * tt3;
    } else {
      dh0dT[14] = 2.715185610000000e+00 + 2.062527430000000e-03 * tt0 + -9.988257710000001e-07 * tt1 + 2.300530080000000e-10 * tt2 + -2.036477160000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[15] = 2.356773520000000e+00 + 8.984596770000000e-03 * tt0 + -7.123562690000000e-06 * tt1 + 2.459190220000000e-09 * tt2 + -1.436995480000000e-13 * tt3;
    } else {
      dh0dT[15] = 3.857460290000000e+00 + 4.414370260000000e-03 * tt0 + -2.214814040000000e-06 * tt1 + 5.234901880000001e-10 * tt2 + -4.720841640000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[16] = 4.221185840000000e+00 + -3.243925320000000e-03 * tt0 + 1.377994460000000e-05 * tt1 + -1.331440930000000e-08 * tt2 + 4.337688650000000e-12 * tt3;
    } else {
      dh0dT[16] = 2.772174380000000e+00 + 4.956955260000000e-03 * tt0 + -2.484456130000000e-06 * tt1 + 5.891617780000000e-10 * tt2 + -5.335087110000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[17] = 4.793723150000000e+00 + -9.908333690000000e-03 * tt0 + 3.732200080000000e-05 * tt1 + -3.792852610000000e-08 * tt2 + 1.317726520000000e-11 * tt3;
    } else {
      dh0dT[17] = 1.760690080000000e+00 + 9.200000820000000e-03 * tt0 + -4.422588130000000e-06 * tt1 + 1.006412120000000e-09 * tt2 + -8.838556400000001e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[18] = 3.863889180000000e+00 + 5.596723040000000e-03 * tt0 + 5.932717910000000e-06 * tt1 + -1.045320120000000e-08 * tt2 + 4.369672780000000e-12 * tt3;
    } else {
      dh0dT[18] = 3.692665690000000e+00 + 8.645767970000001e-03 * tt0 + -3.751011200000000e-06 * tt1 + 7.872346360000000e-10 * tt2 + -6.485542010000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[19] = 2.106083740868644e+00 + 7.217545611840916e-03 * tt0 + 5.335825777358757e-06 * tt1 + -7.374562574086794e-09 * tt2 + 2.074342158630007e-12 * tt3;
    } else {
      dh0dT[19] = 3.771000099870984e+00 + 7.871073375136668e-03 * tt0 + -2.656064859783170e-06 * tt1 + 3.943402155606197e-10 * tt2 + -2.111411617357040e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[20] = 5.715395820000000e+00 + -1.523091290000000e-02 * tt0 + 6.524411550000000e-05 * tt1 + -7.108068890000000e-08 * tt2 + 2.613526980000000e-11 * tt3;
    } else {
      dh0dT[20] = 1.789707910000000e+00 + 1.409382920000000e-02 * tt0 + -6.365008350000000e-06 * tt1 + 1.381710850000000e-09 * tt2 + -1.170602200000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[21] = 2.889657330000000e+00 + 1.340996110000000e-02 * tt0 + -2.847695010000000e-05 * tt1 + 2.947910450000000e-08 * tt2 + -1.093315110000000e-11 * tt3;
    } else {
      dh0dT[21] = 3.167806520000000e+00 + 4.752219020000000e-03 * tt0 + -1.837870770000000e-06 * tt1 + 3.041902520000000e-10 * tt2 + -1.772327700000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[22] = 8.086810940000000e-01 + 2.336156290000000e-02 * tt0 + -3.551718150000000e-05 * tt1 + 2.801524370000000e-08 * tt2 + -8.500729740000000e-12 * tt3;
    } else {
      dh0dT[22] = 4.147569640000000e+00 + 5.961666640000000e-03 * tt0 + -2.372948520000000e-06 * tt1 + 4.674121710000000e-10 * tt2 + -3.612352130000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[23] = 3.212466450000000e+00 + 1.514791620000000e-03 * tt0 + 2.592094120000000e-05 * tt1 + -3.576578470000000e-08 * tt2 + 1.471508730000000e-11 * tt3;
    } else {
      dh0dT[23] = 3.016724000000000e+00 + 1.033022920000000e-02 * tt0 + -4.680823490000000e-06 * tt1 + 1.017632880000000e-09 * tt2 + -8.626070410000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[24] = 3.959201480000000e+00 + -7.570522470000000e-03 * tt0 + 5.709902920000000e-05 * tt1 + -6.915887530000000e-08 * tt2 + 2.698843730000000e-11 * tt3;
    } else {
      dh0dT[24] = 2.036111160000000e+00 + 1.464541510000000e-02 * tt0 + -6.710779150000000e-06 * tt1 + 1.472229230000000e-09 * tt2 + -1.257060610000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[25] = 4.306465680000000e+00 + -4.186588920000000e-03 * tt0 + 4.971428070000000e-05 * tt1 + -5.991266060000000e-08 * tt2 + 2.305090040000000e-11 * tt3;
    } else {
      dh0dT[25] = 1.954656420000000e+00 + 1.739727220000000e-02 * tt0 + -7.982066680000000e-06 * tt1 + 1.752176890000000e-09 * tt2 + -1.496415760000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[26] = 4.291424920000000e+00 + -5.501542700000000e-03 * tt0 + 5.994382880000000e-05 * tt1 + -7.084662850000000e-08 * tt2 + 2.686857710000000e-11 * tt3;
    } else {
      dh0dT[26] = 1.071881500000000e+00 + 2.168526770000000e-02 * tt0 + -1.002560670000000e-05 * tt1 + 2.214120010000000e-09 * tt2 + -1.900028900000000e-13 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[27] = 2.251845286753941e+00 + 1.765401529121510e-02 * tt0 + -2.372620998746318e-05 * tt1 + 1.727224682516638e-08 * tt2 + -5.064957679024219e-12 * tt3;
    } else {
      dh0dT[27] = 5.628172209693201e+00 + 4.085394191788521e-03 * tt0 + -1.593486747480799e-06 * tt1 + 2.862686614342911e-10 * tt2 + -1.940857878719715e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[28] = 2.135836300000000e+00 + 1.811887210000000e-02 * tt0 + -1.739474740000000e-05 * tt1 + 9.343975680000000e-09 * tt2 + -2.014576150000000e-12 * tt3;
    } else {
      dh0dT[28] = 4.511297320000000e+00 + 9.003597449999999e-03 * tt0 + -4.169396350000000e-06 * tt1 + 9.233458820000000e-10 * tt2 + -7.948382010000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[29] = 1.242373300000000e+00 + 3.107220100000000e-02 * tt0 + -5.086686400000000e-05 * tt1 + 4.313713100000000e-08 * tt2 + -1.401459400000000e-11 * tt3;
    } else {
      dh0dT[29] = 5.923829100000000e+00 + 6.792360000000000e-03 * tt0 + -2.565856400000000e-06 * tt1 + 4.498784100000000e-10 * tt2 + -2.994010100000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[30] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 + 0.000000000000000e+00 * tt2 + 0.000000000000000e+00 * tt3;
    } else {
      dh0dT[30] = 2.415942900000000e+00 + 1.748906500000000e-04 * tt0 + -1.190236900000000e-07 * tt1 + 3.022624500000000e-11 * tt2 + -2.036098200000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[31] = 3.492921011861569e+00 + 3.116663872075112e-04 * tt0 + -1.488634448347248e-06 * tt1 + 2.481099930777435e-09 * tt2 + -1.035453466982129e-12 * tt3;
    } else {
      dh0dT[31] = 2.783696025592561e+00 + 1.329837654747218e-03 * tt0 + -4.247778452188489e-07 * tt1 + 7.834799223454380e-11 * tt2 + -5.504412838335915e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[32] = 4.204002900000000e+00 + -2.106138500000000e-03 * tt0 + 7.106834800000000e-06 * tt1 + -5.611519700000000e-09 * tt2 + 1.644071700000000e-12 * tt3;
    } else {
      dh0dT[32] = 2.834742100000000e+00 + 3.207308200000000e-03 * tt0 + -9.339080400000000e-07 * tt1 + 1.370295300000000e-10 * tt2 + -7.920614400000001e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[33] = 4.286027400000000e+00 + -4.660523000000000e-03 * tt0 + 2.171851300000000e-05 * tt1 + -2.280888700000000e-08 * tt2 + 8.263804600000000e-12 * tt3;
    } else {
      dh0dT[33] = 2.634452100000000e+00 + 5.666256000000000e-03 * tt0 + -1.727867600000000e-06 * tt1 + 2.386716100000000e-10 * tt2 + -1.257878600000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[34] = 4.344692700000000e+00 + -4.849707200000000e-03 * tt0 + 2.005945900000000e-05 * tt1 + -2.172646400000000e-08 * tt2 + 7.946953900000000e-12 * tt3;
    } else {
      dh0dT[34] = 3.766754400000000e+00 + 2.891508200000000e-03 * tt0 + -1.041662000000000e-06 * tt1 + 1.684259400000000e-10 * tt2 + -1.009189600000000e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[35] = 4.218476300000000e+00 + -4.638976000000000e-03 * tt0 + 1.104102200000000e-05 * tt1 + -9.336135400000000e-09 * tt2 + 2.803577000000000e-12 * tt3;
    } else {
      dh0dT[35] = 3.260605600000000e+00 + 1.191104300000000e-03 * tt0 + -4.291704800000000e-07 * tt1 + 6.945766900000000e-11 * tt2 + -4.033609900000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[36] = 3.944021396162443e+00 + -1.585330601832869e-03 * tt0 + 1.665748788222073e-05 * tt1 + -2.047499998024086e-08 * tt2 + 7.834866090855437e-12 * tt3;
    } else {
      dh0dT[36] = 4.884750806581229e+00 + 2.172400959750924e-03 * tt0 + -8.280716485239976e-07 * tt1 + 1.574755976022204e-10 * tt2 + -1.051092824549460e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[37] = 2.257150200000000e+00 + 1.130472800000000e-02 * tt0 + -1.367131900000000e-05 * tt1 + 9.681980600000001e-09 * tt2 + -2.930718200000000e-12 * tt3;
    } else {
      dh0dT[37] = 4.823072900000000e+00 + 2.627025100000000e-03 * tt0 + -9.585087400000000e-07 * tt1 + 1.600071200000000e-10 * tt2 + -9.775230299999999e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[38] = 4.533491600000000e+00 + -5.669617100000000e-03 * tt0 + 1.847320700000000e-05 * tt1 + -1.713709400000000e-08 * tt2 + 5.545457300000000e-12 * tt3;
    } else {
      dh0dT[38] = 2.979250900000000e+00 + 3.494405900000000e-03 * tt0 + -7.854977800000000e-07 * tt1 + 5.747959400000000e-11 * tt2 + -1.933591600000000e-16 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[39] = 3.612935100000000e+00 + -9.555132700000000e-04 * tt0 + 2.144297700000000e-06 * tt1 + -3.151632300000000e-10 * tt2 + -4.643035600000000e-13 * tt3;
    } else {
      dh0dT[39] = 3.745980500000000e+00 + 4.345077500000000e-05 * tt0 + 2.970598400000000e-07 * tt1 + -6.865180600000000e-11 * tt2 + 4.413417300000000e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[40] = 2.258988600000000e+00 + 1.005117000000000e-02 * tt0 + -1.335176300000000e-05 * tt1 + 1.009234900000000e-08 * tt2 + -3.008902800000000e-12 * tt3;
    } else {
      dh0dT[40] = 3.802239200000000e+00 + 3.146422800000000e-03 * tt0 + -1.063218500000000e-06 * tt1 + 1.661975700000000e-10 * tt2 + -9.799756999999999e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[41] = 2.851656681796872e+00 + 5.695272062464354e-03 * tt0 + 1.071016358036203e-06 * tt1 + -1.622460876289962e-09 * tt2 + -2.351748786566605e-13 * tt3;
    } else {
      dh0dT[41] = 5.209675858242369e+00 + 2.969334630454467e-03 * tt0 + -2.855846743480308e-07 * tt1 + -1.635484557022231e-10 * tt2 + 3.043198870422614e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[42] = 2.524291163538235e+00 + 1.596083018838857e-02 * tt0 + -1.881689501805120e-05 * tt1 + 1.212610017056553e-08 * tt2 + -3.235933108012102e-12 * tt3;
    } else {
      dh0dT[42] = 5.894636352522648e+00 + 3.989595712034258e-03 * tt0 + -1.598237917631213e-06 * tt1 + 2.924939344231556e-10 * tt2 + -2.009468491981192e-14 * tt3;
    };

    if(tt0 < 1.3820e+03) {
      dh0dT[43] = 2.647279890000000e+00 + 1.275053420000000e-02 * tt0 + -1.047942360000000e-05 * tt1 + 4.414328360000000e-09 * tt2 + -7.575214660000000e-13 * tt3;
    } else {
      dh0dT[43] = 6.598604560000000e+00 + 3.027786260000000e-03 * tt0 + -1.077043460000000e-06 * tt1 + 1.716665280000000e-10 * tt2 + -1.014393910000000e-14 * tt3;
    };

    if(tt0 < 1.3680e+03) {
      dh0dT[44] = 3.786049520000000e+00 + 6.886679220000000e-03 * tt0 + -3.214878640000000e-06 * tt1 + 5.171957670000000e-10 * tt2 + 1.193607880000000e-14 * tt3;
    } else {
      dh0dT[44] = 5.897848850000000e+00 + 3.167893930000000e-03 * tt0 + -1.118010640000000e-06 * tt1 + 1.772431440000000e-10 * tt2 + -1.043391770000000e-14 * tt3;
    };

    if(tt0 < 1.4780e+03) {
      dh0dT[45] = 3.630963170000000e+00 + 7.302823570000000e-03 * tt0 + -2.280500030000000e-06 * tt1 + -6.612712980000000e-10 * tt2 + 3.622357520000000e-13 * tt3;
    } else {
      dh0dT[45] = 6.223951340000000e+00 + 3.178640040000000e-03 * tt0 + -1.093787550000000e-06 * tt1 + 1.707351630000000e-10 * tt2 + -9.950219549999999e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[46] = 2.826945256886816e+00 + 8.805023768041478e-03 * tt0 + -8.386135270184225e-06 * tt1 + 4.801067410391268e-09 * tt2 + -1.331078468070705e-12 * tt3;
    } else {
      dh0dT[46] = 5.152191023455068e+00 + 2.305166085067319e-03 * tt0 + -8.803267348458963e-07 * tt1 + 1.478900617804730e-10 * tt2 + -9.097738392331190e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[47] = 3.298616281368291e+00 + 1.408708904146039e-03 * tt0 + -3.964481129109908e-06 * tt1 + 5.642920880408571e-09 * tt2 + -2.445407041148433e-12 * tt3;
    } else {
      dh0dT[47] = 2.926639911210682e+00 + 1.487977101178227e-03 * tt0 + -5.684761849244810e-07 * tt1 + 1.009704225872734e-10 * tt2 + -6.753354387142974e-15 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[48] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 + 0.000000000000000e+00 * tt2 + 0.000000000000000e+00 * tt3;
    } else {
      dh0dT[48] = 2.500000000000000e+00 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 + 0.000000000000000e+00 * tt2 + 0.000000000000000e+00 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[49] = 1.052626404724569e+00 + 2.598375709250536e-02 * tt0 + 2.401884142562253e-06 * tt1 + -1.963348865459252e-08 * tt2 + 9.382393185714673e-12 * tt3;
    } else {
      dh0dT[49] = 7.702696163910607e+00 + 1.604420476782206e-02 * tt0 + -5.283322400216647e-06 * tt1 + 7.629859218463020e-10 * tt2 + -3.939228244798265e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[50] = 9.343755233905280e-01 + 2.641831188654101e-02 * tt0 + 6.122525745064917e-06 * tt1 + -2.199549965075941e-08 * tt2 + 9.521730709636926e-12 * tt3;
    } else {
      dh0dT[50] = 7.534135421306297e+00 + 1.887223932284164e-02 * tt0 + -6.271848861570704e-06 * tt1 + 9.147563902677370e-10 * tt2 + -4.783805897099325e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[51] = 3.408787019654885e+00 + 1.074072958392421e-02 * tt0 + 1.885561770902235e-06 * tt1 + -7.151741540340959e-09 * tt2 + 2.864570657787322e-12 * tt3;
    } else {
      dh0dT[51] = 5.975670017995165e+00 + 8.130591556038399e-03 * tt0 + -2.743624403060617e-06 * tt1 + 4.070304991343674e-10 * tt2 + -2.176017817962461e-14 * tt3;
    };

    if(tt0 < 1.0000e+03) {
      dh0dT[52] = 4.729459500000000e+00 + -3.193285800000000e-03 * tt0 + 4.753492100000000e-05 * tt1 + -5.745861100000000e-08 * tt2 + 2.193111200000000e-11 * tt3;
    } else {
      dh0dT[52] = 5.404110800000000e+00 + 1.172305900000000e-02 * tt0 + -4.226313700000000e-06 * tt1 + 6.837245100000000e-10 * tt2 + -4.098486300000000e-14 * tt3;
    };

  };

  template <class Type>
  void getEntropies_R(Type& T, vector<Type>& s0_R) {

    Type tt0 = T;
    Type tt1 = T * tt0;
    Type tt2 = T * tt1;
    Type tt3 = T * tt2;
    Type tt4 = 1.0 / T;
    Type tt5 = log(T);

    if(tt0 < 1.0000e+03) {
      s0_R[0] = 2.344331120000000e+00 * tt5 + 7.980520749999999e-03 * tt0 + -1.947815100000000e-05 * tt1 * 0.50 + 2.015720940000000e-08 * tt2 * OneThird + -7.376117610000001e-12 * tt3 * 0.25 + 6.830102380000000e-01;
    } else {
      s0_R[0] = 3.337279200000000e+00 * tt5 +  -4.940247310000000e-05 * tt0 + 4.994567780000000e-07 * tt1 * 0.50 + -1.795663940000000e-10 * tt2 * OneThird + 2.002553760000000e-14 * tt3 * 0.25 + -3.205023310000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[1] = 2.500000000000000e+00 * tt5 + 7.053328190000000e-13 * tt0 + -1.995919640000000e-15 * tt1 * 0.50 + 2.300816320000000e-18 * tt2 * OneThird + -9.277323320000001e-22 * tt3 * 0.25 + -4.466828530000000e-01;
    } else {
      s0_R[1] = 2.500000010000000e+00 * tt5 +  -2.308429730000000e-11 * tt0 + 1.615619480000000e-14 * tt1 * 0.50 + -4.735152350000000e-18 * tt2 * OneThird + 4.981973570000000e-22 * tt3 * 0.25 + -4.466829140000000e-01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[2] = 3.168267100000000e+00 * tt5 + -3.279318840000000e-03 * tt0 + 6.643063960000000e-06 * tt1 * 0.50 + -6.128066240000000e-09 * tt2 * OneThird + 2.112659710000000e-12 * tt3 * 0.25 + 2.051933460000000e+00;
    } else {
      s0_R[2] = 2.569420780000000e+00 * tt5 +  -8.597411370000000e-05 * tt0 + 4.194845890000000e-08 * tt1 * 0.50 + -1.001777990000000e-11 * tt2 * OneThird + 1.228336910000000e-15 * tt3 * 0.25 + 4.784338640000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[3] = 3.782456360000000e+00 * tt5 + -2.996734160000000e-03 * tt0 + 9.847302010000000e-06 * tt1 * 0.50 + -9.681295090000001e-09 * tt2 * OneThird + 3.243728370000000e-12 * tt3 * 0.25 + 3.657675730000000e+00;
    } else {
      s0_R[3] = 3.282537840000000e+00 * tt5 +  1.483087540000000e-03 * tt0 + -7.579666690000000e-07 * tt1 * 0.50 + 2.094705550000000e-10 * tt2 * OneThird + -2.167177940000000e-14 * tt3 * 0.25 + 5.453231290000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[4] = 3.992015430000000e+00 * tt5 + -2.401317520000000e-03 * tt0 + 4.617938410000000e-06 * tt1 * 0.50 + -3.881133330000000e-09 * tt2 * OneThird + 1.364114700000000e-12 * tt3 * 0.25 + -1.039254580000000e-01;
    } else {
      s0_R[4] = 3.092887670000000e+00 * tt5 +  5.484297160000000e-04 * tt0 + 1.265052280000000e-07 * tt1 * 0.50 + -8.794615559999999e-11 * tt2 * OneThird + 1.174123760000000e-14 * tt3 * 0.25 + 4.476696100000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[5] = 4.198640560000000e+00 * tt5 + -2.036434100000000e-03 * tt0 + 6.520402110000000e-06 * tt1 * 0.50 + -5.487970620000000e-09 * tt2 * OneThird + 1.771978170000000e-12 * tt3 * 0.25 + -8.490322080000000e-01;
    } else {
      s0_R[5] = 3.033992490000000e+00 * tt5 +  2.176918040000000e-03 * tt0 + -1.640725180000000e-07 * tt1 * 0.50 + -9.704198700000000e-11 * tt2 * OneThird + 1.682009920000000e-14 * tt3 * 0.25 + 4.966770100000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[6] = 4.301798010000000e+00 * tt5 + -4.749120510000000e-03 * tt0 + 2.115828910000000e-05 * tt1 * 0.50 + -2.427638940000000e-08 * tt2 * OneThird + 9.292251240000000e-12 * tt3 * 0.25 + 3.716662450000000e+00;
    } else {
      s0_R[6] = 4.017210900000000e+00 * tt5 +  2.239820130000000e-03 * tt0 + -6.336581500000000e-07 * tt1 * 0.50 + 1.142463700000000e-10 * tt2 * OneThird + -1.079085350000000e-14 * tt3 * 0.25 + 3.785102150000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[7] = 4.276112690000000e+00 * tt5 + -5.428224169999999e-04 * tt0 + 1.673357010000000e-05 * tt1 * 0.50 + -2.157708130000000e-08 * tt2 * OneThird + 8.624543630000000e-12 * tt3 * 0.25 + 3.435050740000000e+00;
    } else {
      s0_R[7] = 4.165002850000000e+00 * tt5 +  4.908316940000000e-03 * tt0 + -1.901392250000000e-06 * tt1 * 0.50 + 3.711859860000000e-10 * tt2 * OneThird + -2.879083050000000e-14 * tt3 * 0.25 + 2.916156620000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[8] = 2.554239550000000e+00 * tt5 + -3.215377240000000e-04 * tt0 + 7.337922450000000e-07 * tt1 * 0.50 + -7.322348890000000e-10 * tt2 * OneThird + 2.665214460000000e-13 * tt3 * 0.25 + 4.531308480000000e+00;
    } else {
      s0_R[8] = 2.492668880000000e+00 * tt5 +  4.798892840000000e-05 * tt0 + -7.243350200000001e-08 * tt1 * 0.50 + 3.742910290000000e-11 * tt2 * OneThird + -4.872778930000000e-15 * tt3 * 0.25 + 4.801503730000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[9] = 3.489816650000000e+00 * tt5 + 3.238355410000000e-04 * tt0 + -1.688990650000000e-06 * tt1 * 0.50 + 3.162173270000000e-09 * tt2 * OneThird + -1.406090670000000e-12 * tt3 * 0.25 + 2.084011080000000e+00;
    } else {
      s0_R[9] = 2.878464730000000e+00 * tt5 +  9.709136810000000e-04 * tt0 + 1.444456550000000e-07 * tt1 * 0.50 + -1.306878490000000e-10 * tt2 * OneThird + 1.760793830000000e-14 * tt3 * 0.25 + 5.484979990000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[10] = 3.762678670000000e+00 * tt5 + 9.688721430000000e-04 * tt0 + 2.794898410000000e-06 * tt1 * 0.50 + -3.850911530000000e-09 * tt2 * OneThird + 1.687417190000000e-12 * tt3 * 0.25 + 1.562531850000000e+00;
    } else {
      s0_R[10] = 2.874101130000000e+00 * tt5 +  3.656392920000000e-03 * tt0 + -1.408945970000000e-06 * tt1 * 0.50 + 2.601795490000000e-10 * tt2 * OneThird + -1.877275670000000e-14 * tt3 * 0.25 + 6.171193240000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[11] = 4.198604110000000e+00 * tt5 + -2.366614190000000e-03 * tt0 + 8.232962200000000e-06 * tt1 * 0.50 + -6.688159810000000e-09 * tt2 * OneThird + 1.943147370000000e-12 * tt3 * 0.25 + -7.691189670000000e-01;
    } else {
      s0_R[11] = 2.292038420000000e+00 * tt5 +  4.655886370000000e-03 * tt0 + -2.011919470000000e-06 * tt1 * 0.50 + 4.179060000000000e-10 * tt2 * OneThird + -3.397163650000000e-14 * tt3 * 0.25 + 8.626501690000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[12] = 3.673590400000000e+00 * tt5 + 2.010951750000000e-03 * tt0 + 5.730218560000000e-06 * tt1 * 0.50 + -6.871174250000000e-09 * tt2 * OneThird + 2.543857340000000e-12 * tt3 * 0.25 + 1.604564330000000e+00;
    } else {
      s0_R[12] = 2.285717720000000e+00 * tt5 +  7.239900370000000e-03 * tt0 + -2.987143480000000e-06 * tt1 * 0.50 + 5.956846440000000e-10 * tt2 * OneThird + -4.671543940000000e-14 * tt3 * 0.25 + 8.480071790000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[13] = 5.149876130000000e+00 * tt5 + -1.367097880000000e-02 * tt0 + 4.918005990000000e-05 * tt1 * 0.50 + -4.847430260000000e-08 * tt2 * OneThird + 1.666939560000000e-11 * tt3 * 0.25 + -4.641303760000000e+00;
    } else {
      s0_R[13] = 7.485149500000000e-02 * tt5 +  1.339094670000000e-02 * tt0 + -5.732858090000000e-06 * tt1 * 0.50 + 1.222925350000000e-09 * tt2 * OneThird + -1.018152300000000e-13 * tt3 * 0.25 + 1.843731800000000e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[14] = 3.579533470000000e+00 * tt5 + -6.103536800000000e-04 * tt0 + 1.016814330000000e-06 * tt1 * 0.50 + 9.070058840000000e-10 * tt2 * OneThird + -9.044244990000000e-13 * tt3 * 0.25 + 3.508409280000000e+00;
    } else {
      s0_R[14] = 2.715185610000000e+00 * tt5 +  2.062527430000000e-03 * tt0 + -9.988257710000001e-07 * tt1 * 0.50 + 2.300530080000000e-10 * tt2 * OneThird + -2.036477160000000e-14 * tt3 * 0.25 + 7.818687720000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[15] = 2.356773520000000e+00 * tt5 + 8.984596770000000e-03 * tt0 + -7.123562690000000e-06 * tt1 * 0.50 + 2.459190220000000e-09 * tt2 * OneThird + -1.436995480000000e-13 * tt3 * 0.25 + 9.901052220000000e+00;
    } else {
      s0_R[15] = 3.857460290000000e+00 * tt5 +  4.414370260000000e-03 * tt0 + -2.214814040000000e-06 * tt1 * 0.50 + 5.234901880000001e-10 * tt2 * OneThird + -4.720841640000000e-14 * tt3 * 0.25 + 2.271638060000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[16] = 4.221185840000000e+00 * tt5 + -3.243925320000000e-03 * tt0 + 1.377994460000000e-05 * tt1 * 0.50 + -1.331440930000000e-08 * tt2 * OneThird + 4.337688650000000e-12 * tt3 * 0.25 + 3.394372430000000e+00;
    } else {
      s0_R[16] = 2.772174380000000e+00 * tt5 +  4.956955260000000e-03 * tt0 + -2.484456130000000e-06 * tt1 * 0.50 + 5.891617780000000e-10 * tt2 * OneThird + -5.335087110000000e-14 * tt3 * 0.25 + 9.798344920000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[17] = 4.793723150000000e+00 * tt5 + -9.908333690000000e-03 * tt0 + 3.732200080000000e-05 * tt1 * 0.50 + -3.792852610000000e-08 * tt2 * OneThird + 1.317726520000000e-11 * tt3 * 0.25 + 6.028129000000000e-01;
    } else {
      s0_R[17] = 1.760690080000000e+00 * tt5 +  9.200000820000000e-03 * tt0 + -4.422588130000000e-06 * tt1 * 0.50 + 1.006412120000000e-09 * tt2 * OneThird + -8.838556400000001e-14 * tt3 * 0.25 + 1.365632300000000e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[18] = 3.863889180000000e+00 * tt5 + 5.596723040000000e-03 * tt0 + 5.932717910000000e-06 * tt1 * 0.50 + -1.045320120000000e-08 * tt2 * OneThird + 4.369672780000000e-12 * tt3 * 0.25 + 5.473022430000000e+00;
    } else {
      s0_R[18] = 3.692665690000000e+00 * tt5 +  8.645767970000001e-03 * tt0 + -3.751011200000000e-06 * tt1 * 0.50 + 7.872346360000000e-10 * tt2 * OneThird + -6.485542010000000e-14 * tt3 * 0.25 + 5.810432150000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[19] = 2.106083740868644e+00 * tt5 + 7.217545611840916e-03 * tt0 + 5.335825777358757e-06 * tt1 * 0.50 + -7.374562574086794e-09 * tt2 * OneThird + 2.074342158630007e-12 * tt3 * 0.25 + 1.315267015071675e+01;
    } else {
      s0_R[19] = 3.771000099870984e+00 * tt5 +  7.871073375136668e-03 * tt0 + -2.656064859783170e-06 * tt1 * 0.50 + 3.943402155606197e-10 * tt2 * OneThird + -2.111411617357040e-14 * tt3 * 0.25 + 2.928482743514920e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[20] = 5.715395820000000e+00 * tt5 + -1.523091290000000e-02 * tt0 + 6.524411550000000e-05 * tt1 * 0.50 + -7.108068890000000e-08 * tt2 * OneThird + 2.613526980000000e-11 * tt3 * 0.25 + -1.504098230000000e+00;
    } else {
      s0_R[20] = 1.789707910000000e+00 * tt5 +  1.409382920000000e-02 * tt0 + -6.365008350000000e-06 * tt1 * 0.50 + 1.381710850000000e-09 * tt2 * OneThird + -1.170602200000000e-13 * tt3 * 0.25 + 1.450236230000000e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[21] = 2.889657330000000e+00 * tt5 + 1.340996110000000e-02 * tt0 + -2.847695010000000e-05 * tt1 * 0.50 + 2.947910450000000e-08 * tt2 * OneThird + -1.093315110000000e-11 * tt3 * 0.25 + 6.222964380000000e+00;
    } else {
      s0_R[21] = 3.167806520000000e+00 * tt5 +  4.752219020000000e-03 * tt0 + -1.837870770000000e-06 * tt1 * 0.50 + 3.041902520000000e-10 * tt2 * OneThird + -1.772327700000000e-14 * tt3 * 0.25 + 6.635894750000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[22] = 8.086810940000000e-01 * tt5 + 2.336156290000000e-02 * tt0 + -3.551718150000000e-05 * tt1 * 0.50 + 2.801524370000000e-08 * tt2 * OneThird + -8.500729740000000e-12 * tt3 * 0.25 + 1.393970510000000e+01;
    } else {
      s0_R[22] = 4.147569640000000e+00 * tt5 +  5.961666640000000e-03 * tt0 + -2.372948520000000e-06 * tt1 * 0.50 + 4.674121710000000e-10 * tt2 * OneThird + -3.612352130000000e-14 * tt3 * 0.25 + -1.230281210000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[23] = 3.212466450000000e+00 * tt5 + 1.514791620000000e-03 * tt0 + 2.592094120000000e-05 * tt1 * 0.50 + -3.576578470000000e-08 * tt2 * OneThird + 1.471508730000000e-11 * tt3 * 0.25 + 8.510540250000000e+00;
    } else {
      s0_R[23] = 3.016724000000000e+00 * tt5 +  1.033022920000000e-02 * tt0 + -4.680823490000000e-06 * tt1 * 0.50 + 1.017632880000000e-09 * tt2 * OneThird + -8.626070410000000e-14 * tt3 * 0.25 + 7.787323780000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[24] = 3.959201480000000e+00 * tt5 + -7.570522470000000e-03 * tt0 + 5.709902920000000e-05 * tt1 * 0.50 + -6.915887530000000e-08 * tt2 * OneThird + 2.698843730000000e-11 * tt3 * 0.25 + 4.097330960000000e+00;
    } else {
      s0_R[24] = 2.036111160000000e+00 * tt5 +  1.464541510000000e-02 * tt0 + -6.710779150000000e-06 * tt1 * 0.50 + 1.472229230000000e-09 * tt2 * OneThird + -1.257060610000000e-13 * tt3 * 0.25 + 1.030536930000000e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[25] = 4.306465680000000e+00 * tt5 + -4.186588920000000e-03 * tt0 + 4.971428070000000e-05 * tt1 * 0.50 + -5.991266060000000e-08 * tt2 * OneThird + 2.305090040000000e-11 * tt3 * 0.25 + 4.707209240000000e+00;
    } else {
      s0_R[25] = 1.954656420000000e+00 * tt5 +  1.739727220000000e-02 * tt0 + -7.982066680000000e-06 * tt1 * 0.50 + 1.752176890000000e-09 * tt2 * OneThird + -1.496415760000000e-13 * tt3 * 0.25 + 1.346243430000000e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[26] = 4.291424920000000e+00 * tt5 + -5.501542700000000e-03 * tt0 + 5.994382880000000e-05 * tt1 * 0.50 + -7.084662850000000e-08 * tt2 * OneThird + 2.686857710000000e-11 * tt3 * 0.25 + 2.666823160000000e+00;
    } else {
      s0_R[26] = 1.071881500000000e+00 * tt5 +  2.168526770000000e-02 * tt0 + -1.002560670000000e-05 * tt1 * 0.50 + 2.214120010000000e-09 * tt2 * OneThird + -1.900028900000000e-13 * tt3 * 0.25 + 1.511561070000000e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[27] = 2.251845286753941e+00 * tt5 + 1.765401529121510e-02 * tt0 + -2.372620998746318e-05 * tt1 * 0.50 + 1.727224682516638e-08 * tt2 * OneThird + -5.064957679024219e-12 * tt3 * 0.25 + 1.248990921083339e+01;
    } else {
      s0_R[27] = 5.628172209693201e+00 * tt5 +  4.085394191788521e-03 * tt0 + -1.593486747480799e-06 * tt1 * 0.50 + 2.862686614342911e-10 * tt2 * OneThird + -1.940857878719715e-14 * tt3 * 0.25 + -3.930065989049631e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[28] = 2.135836300000000e+00 * tt5 + 1.811887210000000e-02 * tt0 + -1.739474740000000e-05 * tt1 * 0.50 + 9.343975680000000e-09 * tt2 * OneThird + -2.014576150000000e-12 * tt3 * 0.25 + 1.221564800000000e+01;
    } else {
      s0_R[28] = 4.511297320000000e+00 * tt5 +  9.003597449999999e-03 * tt0 + -4.169396350000000e-06 * tt1 * 0.50 + 9.233458820000000e-10 * tt2 * OneThird + -7.948382010000000e-14 * tt3 * 0.25 + 6.322472050000000e-01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[29] = 1.242373300000000e+00 * tt5 + 3.107220100000000e-02 * tt0 + -5.086686400000000e-05 * tt1 * 0.50 + 4.313713100000000e-08 * tt2 * OneThird + -1.401459400000000e-11 * tt3 * 0.25 + 1.387431900000000e+01;
    } else {
      s0_R[29] = 5.923829100000000e+00 * tt5 +  6.792360000000000e-03 * tt0 + -2.565856400000000e-06 * tt1 * 0.50 + 4.498784100000000e-10 * tt2 * OneThird + -2.994010100000000e-14 * tt3 * 0.25 + -7.601774200000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[30] = 2.500000000000000e+00 * tt5 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 * 0.50 + 0.000000000000000e+00 * tt2 * OneThird + 0.000000000000000e+00 * tt3 * 0.25 + 4.193908700000000e+00;
    } else {
      s0_R[30] = 2.415942900000000e+00 * tt5 +  1.748906500000000e-04 * tt0 + -1.190236900000000e-07 * tt1 * 0.50 + 3.022624500000000e-11 * tt2 * OneThird + -2.036098200000000e-15 * tt3 * 0.25 + 4.649609600000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[31] = 3.492921011861569e+00 * tt5 + 3.116663872075112e-04 * tt0 + -1.488634448347248e-06 * tt1 * 0.50 + 2.481099930777435e-09 * tt2 * OneThird + -1.035453466982129e-12 * tt3 * 0.25 + 1.848279354475121e+00;
    } else {
      s0_R[31] = 2.783696025592561e+00 * tt5 +  1.329837654747218e-03 * tt0 + -4.247778452188489e-07 * tt1 * 0.50 + 7.834799223454380e-11 * tt2 * OneThird + -5.504412838335915e-15 * tt3 * 0.25 + 5.740762477568666e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[32] = 4.204002900000000e+00 * tt5 + -2.106138500000000e-03 * tt0 + 7.106834800000000e-06 * tt1 * 0.50 + -5.611519700000000e-09 * tt2 * OneThird + 1.644071700000000e-12 * tt3 * 0.25 + -1.418424800000000e-01;
    } else {
      s0_R[32] = 2.834742100000000e+00 * tt5 +  3.207308200000000e-03 * tt0 + -9.339080400000000e-07 * tt1 * 0.50 + 1.370295300000000e-10 * tt2 * OneThird + -7.920614400000001e-15 * tt3 * 0.25 + 6.520416300000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[33] = 4.286027400000000e+00 * tt5 + -4.660523000000000e-03 * tt0 + 2.171851300000000e-05 * tt1 * 0.50 + -2.280888700000000e-08 * tt2 * OneThird + 8.263804600000000e-12 * tt3 * 0.25 + -6.253727700000000e-01;
    } else {
      s0_R[33] = 2.634452100000000e+00 * tt5 +  5.666256000000000e-03 * tt0 + -1.727867600000000e-06 * tt1 * 0.50 + 2.386716100000000e-10 * tt2 * OneThird + -1.257878600000000e-14 * tt3 * 0.25 + 6.566292800000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[34] = 4.344692700000000e+00 * tt5 + -4.849707200000000e-03 * tt0 + 2.005945900000000e-05 * tt1 * 0.50 + -2.172646400000000e-08 * tt2 * OneThird + 7.946953900000000e-12 * tt3 * 0.25 + 2.977941000000000e+00;
    } else {
      s0_R[34] = 3.766754400000000e+00 * tt5 +  2.891508200000000e-03 * tt0 + -1.041662000000000e-06 * tt1 * 0.50 + 1.684259400000000e-10 * tt2 * OneThird + -1.009189600000000e-14 * tt3 * 0.25 + 4.470506700000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[35] = 4.218476300000000e+00 * tt5 + -4.638976000000000e-03 * tt0 + 1.104102200000000e-05 * tt1 * 0.50 + -9.336135400000000e-09 * tt2 * OneThird + 2.803577000000000e-12 * tt3 * 0.25 + 2.280846400000000e+00;
    } else {
      s0_R[35] = 3.260605600000000e+00 * tt5 +  1.191104300000000e-03 * tt0 + -4.291704800000000e-07 * tt1 * 0.50 + 6.945766900000000e-11 * tt2 * OneThird + -4.033609900000000e-15 * tt3 * 0.25 + 6.369302700000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[36] = 3.944021396162443e+00 * tt5 + -1.585330601832869e-03 * tt0 + 1.665748788222073e-05 * tt1 * 0.50 + -2.047499998024086e-08 * tt2 * OneThird + 7.834866090855437e-12 * tt3 * 0.25 + 6.312029690250977e+00;
    } else {
      s0_R[36] = 4.884750806581229e+00 * tt5 +  2.172400959750924e-03 * tt0 + -8.280716485239976e-07 * tt1 * 0.50 + 1.574755976022204e-10 * tt2 * OneThird + -1.051092824549460e-14 * tt3 * 0.25 + -1.173982613803730e-01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[37] = 2.257150200000000e+00 * tt5 + 1.130472800000000e-02 * tt0 + -1.367131900000000e-05 * tt1 * 0.50 + 9.681980600000001e-09 * tt2 * OneThird + -2.930718200000000e-12 * tt3 * 0.25 + 1.075799200000000e+01;
    } else {
      s0_R[37] = 4.823072900000000e+00 * tt5 +  2.627025100000000e-03 * tt0 + -9.585087400000000e-07 * tt1 * 0.50 + 1.600071200000000e-10 * tt2 * OneThird + -9.775230299999999e-15 * tt3 * 0.25 + -2.201720700000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[38] = 4.533491600000000e+00 * tt5 + -5.669617100000000e-03 * tt0 + 1.847320700000000e-05 * tt1 * 0.50 + -1.713709400000000e-08 * tt2 * OneThird + 5.545457300000000e-12 * tt3 * 0.25 + 1.749841700000000e+00;
    } else {
      s0_R[38] = 2.979250900000000e+00 * tt5 +  3.494405900000000e-03 * tt0 + -7.854977800000000e-07 * tt1 * 0.50 + 5.747959400000000e-11 * tt2 * OneThird + -1.933591600000000e-16 * tt3 * 0.25 + 8.606372800000001e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[39] = 3.612935100000000e+00 * tt5 + -9.555132700000000e-04 * tt0 + 2.144297700000000e-06 * tt1 * 0.50 + -3.151632300000000e-10 * tt2 * OneThird + -4.643035600000000e-13 * tt3 * 0.25 + 3.980499500000000e+00;
    } else {
      s0_R[39] = 3.745980500000000e+00 * tt5 +  4.345077500000000e-05 * tt0 + 2.970598400000000e-07 * tt1 * 0.50 + -6.865180600000000e-11 * tt2 * OneThird + 4.413417300000000e-15 * tt3 * 0.25 + 2.786760100000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[40] = 2.258988600000000e+00 * tt5 + 1.005117000000000e-02 * tt0 + -1.335176300000000e-05 * tt1 * 0.50 + 1.009234900000000e-08 * tt2 * OneThird + -3.008902800000000e-12 * tt3 * 0.25 + 8.916441900000001e+00;
    } else {
      s0_R[40] = 3.802239200000000e+00 * tt5 +  3.146422800000000e-03 * tt0 + -1.063218500000000e-06 * tt1 * 0.50 + 1.661975700000000e-10 * tt2 * OneThird + -9.799756999999999e-15 * tt3 * 0.25 + 1.575460100000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[41] = 2.851656681796872e+00 * tt5 + 5.695272062464354e-03 * tt0 + 1.071016358036203e-06 * tt1 * 0.50 + -1.622460876289962e-09 * tt2 * OneThird + -2.351748786566605e-13 * tt3 * 0.25 + 8.992766289573940e+00;
    } else {
      s0_R[41] = 5.209675858242369e+00 * tt5 +  2.969334630454467e-03 * tt0 + -2.855846743480308e-07 * tt1 * 0.50 + -1.635484557022231e-10 * tt2 * OneThird + 3.043198870422614e-14 * tt3 * 0.25 + -4.444321033292685e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[42] = 2.524291163538235e+00 * tt5 + 1.596083018838857e-02 * tt0 + -1.881689501805120e-05 * tt1 * 0.50 + 1.212610017056553e-08 * tt2 * OneThird + -3.235933108012102e-12 * tt3 * 0.25 + 1.167598703071010e+01;
    } else {
      s0_R[42] = 5.894636352522648e+00 * tt5 +  3.989595712034258e-03 * tt0 + -1.598237917631213e-06 * tt1 * 0.50 + 2.924939344231556e-10 * tt2 * OneThird + -2.009468491981192e-14 * tt3 * 0.25 + -5.103051008070310e+00;
    };

    if(tt0 < 1.3820e+03) {
      s0_R[43] = 2.647279890000000e+00 * tt5 + 1.275053420000000e-02 * tt0 + -1.047942360000000e-05 * tt1 * 0.50 + 4.414328360000000e-09 * tt2 * OneThird + -7.575214660000000e-13 * tt3 * 0.25 + 1.073329720000000e+01;
    } else {
      s0_R[43] = 6.598604560000000e+00 * tt5 +  3.027786260000000e-03 * tt0 + -1.077043460000000e-06 * tt1 * 0.50 + 1.716665280000000e-10 * tt2 * OneThird + -1.014393910000000e-14 * tt3 * 0.25 + -1.033065990000000e+01;
    };

    if(tt0 < 1.3680e+03) {
      s0_R[44] = 3.786049520000000e+00 * tt5 + 6.886679220000000e-03 * tt0 + -3.214878640000000e-06 * tt1 * 0.50 + 5.171957670000000e-10 * tt2 * OneThird + 1.193607880000000e-14 * tt3 * 0.25 + 5.632921620000000e+00;
    } else {
      s0_R[44] = 5.897848850000000e+00 * tt5 +  3.167893930000000e-03 * tt0 + -1.118010640000000e-06 * tt1 * 0.50 + 1.772431440000000e-10 * tt2 * OneThird + -1.043391770000000e-14 * tt3 * 0.25 + -6.181678250000000e+00;
    };

    if(tt0 < 1.4780e+03) {
      s0_R[45] = 3.630963170000000e+00 * tt5 + 7.302823570000000e-03 * tt0 + -2.280500030000000e-06 * tt1 * 0.50 + -6.612712980000000e-10 * tt2 * OneThird + 3.622357520000000e-13 * tt3 * 0.25 + 6.194577270000000e+00;
    } else {
      s0_R[45] = 6.223951340000000e+00 * tt5 +  3.178640040000000e-03 * tt0 + -1.093787550000000e-06 * tt1 * 0.50 + 1.707351630000000e-10 * tt2 * OneThird + -9.950219549999999e-15 * tt3 * 0.25 + -8.382247410000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[46] = 2.826945256886816e+00 * tt5 + 8.805023768041478e-03 * tt0 + -8.386135270184225e-06 * tt1 * 0.50 + 4.801067410391268e-09 * tt2 * OneThird + -1.331078468070705e-12 * tt3 * 0.25 + 9.550408840487275e+00;
    } else {
      s0_R[46] = 5.152191023455068e+00 * tt5 +  2.305166085067319e-03 * tt0 + -8.803267348458963e-07 * tt1 * 0.50 + 1.478900617804730e-10 * tt2 * OneThird + -9.097738392331190e-15 * tt3 * 0.25 + -2.544302529366448e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[47] = 3.298616281368291e+00 * tt5 + 1.408708904146039e-03 * tt0 + -3.964481129109908e-06 * tt1 * 0.50 + 5.642920880408571e-09 * tt2 * OneThird + -2.445407041148433e-12 * tt3 * 0.25 + 3.950623591964732e+00;
    } else {
      s0_R[47] = 2.926639911210682e+00 * tt5 +  1.487977101178227e-03 * tt0 + -5.684761849244810e-07 * tt1 * 0.50 + 1.009704225872734e-10 * tt2 * OneThird + -6.753354387142974e-15 * tt3 * 0.25 + 5.980528055036107e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[48] = 2.500000000000000e+00 * tt5 + 0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 * 0.50 + 0.000000000000000e+00 * tt2 * OneThird + 0.000000000000000e+00 * tt3 * 0.25 + 4.366000000000000e+00;
    } else {
      s0_R[48] = 2.500000000000000e+00 * tt5 +  0.000000000000000e+00 * tt0 + 0.000000000000000e+00 * tt1 * 0.50 + 0.000000000000000e+00 * tt2 * OneThird + 0.000000000000000e+00 * tt3 * 0.25 + 4.366000000000000e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[49] = 1.052626404724569e+00 * tt5 + 2.598375709250536e-02 * tt0 + 2.401884142562253e-06 * tt1 * 0.50 + -1.963348865459252e-08 * tt2 * OneThird + 9.382393185714673e-12 * tt3 * 0.25 + 2.111811376583552e+01;
    } else {
      s0_R[49] = 7.702696163910607e+00 * tt5 +  1.604420476782206e-02 * tt0 + -5.283322400216647e-06 * tt1 * 0.50 + 7.629859218463020e-10 * tt2 * OneThird + -3.939228244798265e-14 * tt3 * 0.25 + -1.548016361448082e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[50] = 9.343755233905280e-01 * tt5 + 2.641831188654101e-02 * tt0 + 6.122525745064917e-06 * tt1 * 0.50 + -2.199549965075941e-08 * tt2 * OneThird + 9.521730709636926e-12 * tt3 * 0.25 + 1.919828751667587e+01;
    } else {
      s0_R[50] = 7.534135421306297e+00 * tt5 +  1.887223932284164e-02 * tt0 + -6.271848861570704e-06 * tt1 * 0.50 + 9.147563902677370e-10 * tt2 * OneThird + -4.783805897099325e-14 * tt3 * 0.25 + -1.789233871267295e+01;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[51] = 3.408787019654885e+00 * tt5 + 1.074072958392421e-02 * tt0 + 1.885561770902235e-06 * tt1 * 0.50 + -7.151741540340959e-09 * tt2 * OneThird + 2.864570657787322e-12 * tt3 * 0.25 + 9.559424084839943e+00;
    } else {
      s0_R[51] = 5.975670017995165e+00 * tt5 +  8.130591556038399e-03 * tt0 + -2.743624403060617e-06 * tt1 * 0.50 + 4.070304991343674e-10 * tt2 * OneThird + -2.176017817962461e-14 * tt3 * 0.25 + -5.045252353440759e+00;
    };

    if(tt0 < 1.0000e+03) {
      s0_R[52] = 4.729459500000000e+00 * tt5 + -3.193285800000000e-03 * tt0 + 4.753492100000000e-05 * tt1 * 0.50 + -5.745861100000000e-08 * tt2 * OneThird + 2.193111200000000e-11 * tt3 * 0.25 + 4.103015900000000e+00;
    } else {
      s0_R[52] = 5.404110800000000e+00 * tt5 +  1.172305900000000e-02 * tt0 + -4.226313700000000e-06 * tt1 * 0.50 + 6.837245100000000e-10 * tt2 * OneThird + -4.098486300000000e-14 * tt3 * 0.25 + -3.480791700000000e+00;
    };

  };

  template <class Type>
  void getGibbsFunctions_RT(double& p, Type& T,vector<Type>& g0_RT) {

    vector<Type> h0_RT(kk, 0.0);
    vector<Type> s0_R(kk,  0.0);

    getEnthalpies_RT(T, h0_RT);
    getEntropies_R(T, s0_R);
    for(int k = 0; k < kk; ++k) { g0_RT[k] = h0_RT[k] - s0_R[k]; }

  };

  template <class Type>
  void getEqConstants(double& p, Type& T,vector<Type>& keqs) {

    double       p0 = OneAtm;
    Type         RT = GasConstant * T;
    Type         C0 = p0 / RT;
    vector<Type> g0_RT(kk, 0.0);

    getGibbsFunctions_RT(p, T, g0_RT);
    for(int k = 0; k < kk; ++k) { g0_RT[k] = exp(g0_RT[k]); }

    keqs[0] = (C0 * g0_RT[3]);
    keqs[1] = (C0 * g0_RT[4]);
    keqs[2] = (g0_RT[1] * g0_RT[4]);
    keqs[3] = (g0_RT[3] * g0_RT[4]);
    keqs[4] = (g0_RT[6] * g0_RT[4]);
    keqs[5] = (g0_RT[1] * g0_RT[14]);
    keqs[6] = (g0_RT[1] * g0_RT[16]);
    keqs[7] = (g0_RT[0] * g0_RT[14]);
    keqs[8] = (g0_RT[1] * g0_RT[16]);
    keqs[9] = (g0_RT[17] * g0_RT[1]);
    keqs[10] = (g0_RT[12] * g0_RT[4]);
    keqs[11] = (C0 * g0_RT[15]);
    keqs[12] = (g0_RT[14] * g0_RT[4]);
    keqs[13] = (g0_RT[1] * g0_RT[15]);
    keqs[14] = (g0_RT[16] * g0_RT[4]);
    keqs[15] = (g0_RT[17] * g0_RT[4]);
    keqs[16] = (g0_RT[17] * g0_RT[4]);
    keqs[17] = (g0_RT[18] * g0_RT[4]);
    keqs[18] = (g0_RT[19] * g0_RT[4]);
    keqs[19] = (g0_RT[9] * g0_RT[14]);
    keqs[20] = (g0_RT[1] * g0_RT[27]);
    keqs[21] = (g0_RT[21] * g0_RT[4]);
    keqs[22] = (g0_RT[10] * g0_RT[14]);
    keqs[23] = (g0_RT[1] * g0_RT[28]);
    keqs[24] = (g0_RT[12] * g0_RT[16]);
    keqs[25] = (g0_RT[17] * g0_RT[12]);
    keqs[26] = (g0_RT[25] * g0_RT[4]);
    keqs[27] = (g0_RT[1] * g0_RT[14] * g0_RT[14]);
    keqs[28] = (g0_RT[27] * g0_RT[4]);
    keqs[29] = (g0_RT[10] * g0_RT[15]);
    keqs[30] = (g0_RT[15] * g0_RT[2]);
    keqs[31] = (g0_RT[6] * g0_RT[16]);
    keqs[32] = (C0 * g0_RT[6]);
    keqs[33] = (C0 * g0_RT[6] * g0_RT[3]);
    keqs[34] = (C0 * g0_RT[5] * g0_RT[6]);
    keqs[35] = (C0 * g0_RT[47] * g0_RT[6]);
    keqs[36] = (C0 * g0_RT[48] * g0_RT[6]);
    keqs[37] = (g0_RT[2] * g0_RT[4]);
    keqs[38] = (C0 * g0_RT[0]);
    keqs[39] = (C0 * g0_RT[0] * g0_RT[0]);
    keqs[40] = (C0 * g0_RT[0] * g0_RT[5]);
    keqs[41] = (C0 * g0_RT[0] * g0_RT[15]);
    keqs[42] = (C0 * g0_RT[5]);
    keqs[43] = (g0_RT[5] * g0_RT[2]);
    keqs[44] = (g0_RT[0] * g0_RT[3]);
    keqs[45] = (g0_RT[4] * g0_RT[4]);
    keqs[46] = (g0_RT[0] * g0_RT[6]);
    keqs[47] = (g0_RT[5] * g0_RT[4]);
    keqs[48] = (g0_RT[0] * g0_RT[8]);
    keqs[49] = (C0 * g0_RT[12]);
    keqs[50] = (g0_RT[0] * g0_RT[9]);
    keqs[51] = (C0 * g0_RT[13]);
    keqs[52] = (g0_RT[0] * g0_RT[12]);
    keqs[53] = (C0 * g0_RT[17]);
    keqs[54] = (g0_RT[0] * g0_RT[14]);
    keqs[55] = (C0 * g0_RT[18]);
    keqs[56] = (C0 * g0_RT[19]);
    keqs[57] = (g0_RT[0] * g0_RT[16]);
    keqs[58] = (C0 * g0_RT[20]);
    keqs[59] = (g0_RT[0] * g0_RT[17]);
    keqs[60] = (g0_RT[12] * g0_RT[4]);
    keqs[61] = (g0_RT[11] * g0_RT[5]);
    keqs[62] = (C0 * g0_RT[20]);
    keqs[63] = (g0_RT[1] * g0_RT[18]);
    keqs[64] = (g0_RT[0] * g0_RT[17]);
    keqs[65] = (g0_RT[12] * g0_RT[4]);
    keqs[66] = (g0_RT[11] * g0_RT[5]);
    keqs[67] = (g0_RT[0] * g0_RT[18]);
    keqs[68] = (g0_RT[0] * g0_RT[19]);
    keqs[69] = (C0 * g0_RT[22]);
    keqs[70] = (C0 * g0_RT[23]);
    keqs[71] = (C0 * g0_RT[24]);
    keqs[72] = (g0_RT[0] * g0_RT[22]);
    keqs[73] = (C0 * g0_RT[25]);
    keqs[74] = (g0_RT[0] * g0_RT[23]);
    keqs[75] = (C0 * g0_RT[26]);
    keqs[76] = (g0_RT[0] * g0_RT[24]);
    keqs[77] = (g0_RT[0] * g0_RT[25]);
    keqs[78] = (g0_RT[11] * g0_RT[14]);
    keqs[79] = (g0_RT[0] * g0_RT[27]);
    keqs[80] = (g0_RT[12] * g0_RT[14]);
    keqs[81] = (g0_RT[1] * g0_RT[28]);
    keqs[82] = (C0 * g0_RT[17]);
    keqs[83] = (g0_RT[1] * g0_RT[5]);
    keqs[84] = (C0 * g0_RT[7]);
    keqs[85] = (g0_RT[5] * g0_RT[2]);
    keqs[86] = (g0_RT[5] * g0_RT[3]);
    keqs[87] = (g0_RT[5] * g0_RT[6]);
    keqs[88] = (g0_RT[5] * g0_RT[6]);
    keqs[89] = (g0_RT[1] * g0_RT[14]);
    keqs[90] = (g0_RT[1] * g0_RT[16]);
    keqs[91] = (g0_RT[17] * g0_RT[1]);
    keqs[92] = (g0_RT[5] * g0_RT[9]);
    keqs[93] = (g0_RT[17] * g0_RT[1]);
    keqs[94] = (C0 * g0_RT[20]);
    keqs[95] = (g0_RT[10] * g0_RT[5]);
    keqs[96] = (g0_RT[11] * g0_RT[5]);
    keqs[97] = (g0_RT[5] * g0_RT[12]);
    keqs[98] = (g0_RT[1] * g0_RT[15]);
    keqs[99] = (g0_RT[5] * g0_RT[14]);
    keqs[100] = (g0_RT[5] * g0_RT[16]);
    keqs[101] = (g0_RT[17] * g0_RT[5]);
    keqs[102] = (g0_RT[17] * g0_RT[5]);
    keqs[103] = (g0_RT[18] * g0_RT[5]);
    keqs[104] = (g0_RT[5] * g0_RT[19]);
    keqs[105] = (g0_RT[1] * g0_RT[27]);
    keqs[106] = (g0_RT[1] * g0_RT[28]);
    keqs[107] = (g0_RT[1] * g0_RT[29]);
    keqs[108] = (g0_RT[21] * g0_RT[5]);
    keqs[109] = (g0_RT[12] * g0_RT[14]);
    keqs[110] = (g0_RT[5] * g0_RT[22]);
    keqs[111] = (g0_RT[5] * g0_RT[23]);
    keqs[112] = (g0_RT[25] * g0_RT[5]);
    keqs[113] = (g0_RT[5] * g0_RT[27]);
    keqs[114] = (g0_RT[3] * g0_RT[7]);
    keqs[115] = (g0_RT[3] * g0_RT[7]);
    keqs[116] = (g0_RT[17] * g0_RT[4]);
    keqs[117] = (g0_RT[13] * g0_RT[3]);
    keqs[118] = (g0_RT[19] * g0_RT[4]);
    keqs[119] = (g0_RT[15] * g0_RT[4]);
    keqs[120] = (g0_RT[16] * g0_RT[7]);
    keqs[121] = (g0_RT[14] * g0_RT[2]);
    keqs[122] = (g0_RT[1] * g0_RT[21]);
    keqs[123] = (g0_RT[1] * g0_RT[22]);
    keqs[124] = (g0_RT[16] * g0_RT[2]);
    keqs[125] = (g0_RT[1] * g0_RT[10]);
    keqs[126] = (g0_RT[17] * g0_RT[1]);
    keqs[127] = (g0_RT[1] * g0_RT[22]);
    keqs[128] = (g0_RT[1] * g0_RT[23]);
    keqs[129] = (g0_RT[1] * g0_RT[24]);
    keqs[130] = (C0 * g0_RT[27]);
    keqs[131] = (g0_RT[14] * g0_RT[16]);
    keqs[132] = (g0_RT[1] * g0_RT[28]);
    keqs[133] = (g0_RT[14] * g0_RT[22]);
    keqs[135] = (g0_RT[1] * g0_RT[12]);
    keqs[136] = (g0_RT[0] * g0_RT[22]);
    keqs[137] = (g0_RT[1] * g0_RT[24]);
    keqs[138] = (g0_RT[12] * g0_RT[12]);
    keqs[139] = (C0 * g0_RT[28]);
    keqs[140] = (g0_RT[14] * g0_RT[23]);
    keqs[141] = (g0_RT[10] * g0_RT[47]);
    keqs[142] = (g0_RT[10] * g0_RT[48]);
    keqs[143] = (g0_RT[1] * g0_RT[14] * g0_RT[4]);
    keqs[144] = (g0_RT[5] * g0_RT[14]);
    keqs[145] = (g0_RT[1] * g0_RT[12]);
    keqs[146] = (C0 * g0_RT[20]);
    keqs[147] = (g0_RT[10] * g0_RT[5]);
    keqs[148] = (g0_RT[1] * g0_RT[24]);
    keqs[149] = (g0_RT[12] * g0_RT[12]);
    keqs[150] = (g0_RT[10] * g0_RT[14]);
    keqs[151] = (g0_RT[10] * g0_RT[15]);
    keqs[152] = (g0_RT[17] * g0_RT[14]);
    keqs[153] = (g0_RT[25] * g0_RT[12]);
    keqs[154] = (g0_RT[19] * g0_RT[2]);
    keqs[155] = (g0_RT[17] * g0_RT[4]);
    keqs[156] = (g0_RT[13] * g0_RT[6]);
    keqs[157] = (C0 * g0_RT[26]);
    keqs[158] = (g0_RT[1] * g0_RT[25]);
    keqs[159] = (g0_RT[14] * g0_RT[13]);
    keqs[160] = (g0_RT[13] * g0_RT[16]);
    keqs[161] = (g0_RT[18] * g0_RT[13]);
    keqs[162] = (g0_RT[19] * g0_RT[13]);
    keqs[163] = (g0_RT[13] * g0_RT[23]);
    keqs[164] = (g0_RT[25] * g0_RT[13]);
    keqs[165] = (g0_RT[1] * g0_RT[5] * g0_RT[14]);
    keqs[166] = (g0_RT[1] * g0_RT[14]);
    keqs[167] = (g0_RT[14] * g0_RT[6]);
    keqs[168] = (g0_RT[17] * g0_RT[6]);
    keqs[169] = (g0_RT[17] * g0_RT[6]);
    keqs[170] = (g0_RT[14] * g0_RT[16]);
    keqs[171] = (g0_RT[1] * g0_RT[22]);
    keqs[172] = (g0_RT[17] * g0_RT[16]);
    keqs[173] = (g0_RT[0] * g0_RT[22]);
    keqs[174] = (g0_RT[24] * g0_RT[6]);
    keqs[175] = (g0_RT[14] * g0_RT[14] * g0_RT[4]);
    keqs[176] = (g0_RT[14] * g0_RT[14] * g0_RT[22]);
    keqs[177] = (g0_RT[47] * g0_RT[2]);
    keqs[178] = (g0_RT[2] * g0_RT[35]);
    keqs[179] = (g0_RT[1] * g0_RT[35]);
    keqs[180] = (g0_RT[47] * g0_RT[3]);
    keqs[181] = (g0_RT[35] * g0_RT[35]);
    keqs[182] = (g0_RT[47] * g0_RT[4]);
    keqs[183] = (g0_RT[47] * g0_RT[6]);
    keqs[184] = (g0_RT[47] * g0_RT[2]);
    keqs[185] = (g0_RT[36] * g0_RT[4]);
    keqs[186] = (C0 * g0_RT[36]);
    keqs[187] = (g0_RT[3] * g0_RT[35]);
    keqs[188] = (g0_RT[4] * g0_RT[35]);
    keqs[189] = (g0_RT[1] * g0_RT[35]);
    keqs[190] = (g0_RT[0] * g0_RT[30]);
    keqs[191] = (g0_RT[1] * g0_RT[38]);
    keqs[192] = (g0_RT[5] * g0_RT[30]);
    keqs[193] = (g0_RT[2] * g0_RT[38]);
    keqs[194] = (g0_RT[4] * g0_RT[35]);
    keqs[195] = (g0_RT[1] * g0_RT[47]);
    keqs[196] = (g0_RT[0] * g0_RT[38]);
    keqs[197] = (g0_RT[47] * g0_RT[4]);
    keqs[198] = (g0_RT[1] * g0_RT[37]);
    keqs[199] = (g0_RT[31] * g0_RT[4]);
    keqs[200] = (g0_RT[1] * g0_RT[38]);
    keqs[201] = (g0_RT[31] * g0_RT[0]);
    keqs[202] = (g0_RT[31] * g0_RT[5]);
    keqs[203] = (g0_RT[1] * g0_RT[47]);
    keqs[204] = (g0_RT[1] * g0_RT[47]);
    keqs[205] = (g0_RT[47] * g0_RT[6]);
    keqs[206] = (g0_RT[47] * g0_RT[4]);
    keqs[207] = (g0_RT[31] * g0_RT[35]);
    keqs[208] = (g0_RT[0] * g0_RT[47]);
    keqs[209] = (g0_RT[5] * g0_RT[47]);
    keqs[210] = (g0_RT[47] * g0_RT[13]);
    keqs[211] = (C0 * g0_RT[38]);
    keqs[212] = (g0_RT[4] * g0_RT[35]);
    keqs[213] = (g0_RT[0] * g0_RT[35]);
    keqs[214] = (g0_RT[5] * g0_RT[35]);
    keqs[215] = (g0_RT[6] * g0_RT[35]);
    keqs[216] = (g0_RT[14] * g0_RT[30]);
    keqs[217] = (g0_RT[1] * g0_RT[46]);
    keqs[218] = (g0_RT[40] * g0_RT[4]);
    keqs[219] = (g0_RT[2] * g0_RT[46]);
    keqs[220] = (g0_RT[1] * g0_RT[40]);
    keqs[221] = (g0_RT[14] * g0_RT[35]);
    keqs[222] = (g0_RT[31] * g0_RT[14]);
    keqs[223] = (g0_RT[1] * g0_RT[14] * g0_RT[35]);
    keqs[224] = (g0_RT[47] * g0_RT[14]);
    keqs[225] = (g0_RT[15] * g0_RT[35]);
    keqs[226] = (g0_RT[14] * g0_RT[30]);
    keqs[227] = (g0_RT[14] * g0_RT[37]);
    keqs[228] = (g0_RT[47] * g0_RT[15]);
    keqs[229] = (g0_RT[1] * g0_RT[39]);
    keqs[230] = (g0_RT[1] * g0_RT[46]);
    keqs[231] = (g0_RT[31] * g0_RT[14]);
    keqs[232] = (g0_RT[39] * g0_RT[4]);
    keqs[233] = (g0_RT[44] * g0_RT[1]);
    keqs[234] = (g0_RT[45] * g0_RT[1]);
    keqs[235] = (g0_RT[14] * g0_RT[32]);
    keqs[236] = (C0 * g0_RT[41]);
    keqs[237] = (g0_RT[47] * g0_RT[10]);
    keqs[238] = (g0_RT[39] * g0_RT[30]);
    keqs[239] = (g0_RT[40] * g0_RT[30]);
    keqs[240] = (C0 * g0_RT[42]);
    keqs[241] = (g0_RT[31] * g0_RT[40]);
    keqs[242] = (g0_RT[31] * g0_RT[40]);
    keqs[243] = (g0_RT[39] * g0_RT[2]);
    keqs[244] = (g0_RT[14] * g0_RT[30]);
    keqs[245] = (g0_RT[40] * g0_RT[2]);
    keqs[246] = (g0_RT[1] * g0_RT[46]);
    keqs[247] = (g0_RT[16] * g0_RT[30]);
    keqs[248] = (g0_RT[45] * g0_RT[1]);
    keqs[249] = (g0_RT[40] * g0_RT[4]);
    keqs[250] = (g0_RT[1] * g0_RT[43]);
    keqs[251] = (g0_RT[45] * g0_RT[1]);
    keqs[252] = (g0_RT[40] * g0_RT[4]);
    keqs[253] = (g0_RT[1] * g0_RT[43]);
    keqs[254] = (g0_RT[5] * g0_RT[40]);
    keqs[255] = (g0_RT[41] * g0_RT[4]);
    keqs[256] = (g0_RT[1] * g0_RT[47] * g0_RT[14]);
    keqs[257] = (g0_RT[40] * g0_RT[35]);
    keqs[258] = (g0_RT[47] * g0_RT[16] * g0_RT[2]);
    keqs[259] = (g0_RT[1] * g0_RT[47] * g0_RT[16]);
    keqs[260] = (g0_RT[10] * g0_RT[47]);
    keqs[261] = (g0_RT[31] * g0_RT[15]);
    keqs[262] = (g0_RT[14] * g0_RT[38]);
    keqs[263] = (g0_RT[4] * g0_RT[46]);
    keqs[264] = (g0_RT[14] * g0_RT[32]);
    keqs[265] = (g0_RT[0] * g0_RT[46]);
    keqs[266] = (g0_RT[5] * g0_RT[46]);
    keqs[267] = (g0_RT[15] * g0_RT[32]);
    keqs[268] = (g0_RT[31] * g0_RT[14]);
    keqs[269] = (g0_RT[45] * g0_RT[1]);
    keqs[270] = (g0_RT[40] * g0_RT[4]);
    keqs[271] = (g0_RT[14] * g0_RT[32]);
    keqs[272] = (g0_RT[45] * g0_RT[1]);
    keqs[273] = (g0_RT[14] * g0_RT[43]);
    keqs[274] = (g0_RT[1] * g0_RT[41]);
    keqs[275] = (g0_RT[0] * g0_RT[40]);
    keqs[276] = (g0_RT[0] * g0_RT[32]);
    keqs[277] = (g0_RT[5] * g0_RT[32]);
    keqs[278] = (g0_RT[4] * g0_RT[32]);
    keqs[279] = (g0_RT[14] * g0_RT[38]);
    keqs[280] = (g0_RT[35] * g0_RT[46]);
    keqs[281] = (g0_RT[15] * g0_RT[37]);
    keqs[282] = (g0_RT[14] * g0_RT[35]);
    keqs[284] = (g0_RT[1] * g0_RT[51]);
    keqs[285] = (g0_RT[1] * g0_RT[52]);
    keqs[286] = (g0_RT[5] * g0_RT[3]);
    keqs[288] = (C0 * g0_RT[12]);
    keqs[290] = (g0_RT[17] * g0_RT[2]);
    keqs[293] = (g0_RT[51] * g0_RT[2]);
    keqs[294] = (g0_RT[6] * g0_RT[22]);
    keqs[295] = (g0_RT[51] * g0_RT[4]);
    keqs[298] = (g0_RT[0] * g0_RT[51]);
    keqs[303] = (C0 * g0_RT[51]);
    keqs[307] = (g0_RT[12] * g0_RT[16]);
    keqs[308] = (g0_RT[0] * g0_RT[28]);
    keqs[309] = (g0_RT[5] * g0_RT[28]);
    keqs[310] = (g0_RT[18] * g0_RT[16]);
    keqs[311] = (C0 * g0_RT[50]);
    keqs[312] = (g0_RT[49] * g0_RT[4]);
    keqs[313] = (g0_RT[0] * g0_RT[49]);
    keqs[314] = (g0_RT[49] * g0_RT[5]);
    keqs[315] = (g0_RT[6] * g0_RT[50]);
    keqs[316] = (g0_RT[49] * g0_RT[13]);
    keqs[317] = (C0 * g0_RT[49]);
    keqs[318] = (g0_RT[17] * g0_RT[25]);
    keqs[319] = (C0 * g0_RT[50]);
    keqs[320] = (g0_RT[25] * g0_RT[12]);
    keqs[321] = (g0_RT[18] * g0_RT[25]);
    keqs[322] = (g0_RT[3] * g0_RT[50]);
    keqs[324] = (g0_RT[25] * g0_RT[25]);

    keqs[0] /= (g0_RT[2] * g0_RT[2]);
    keqs[1] /= (g0_RT[1] * g0_RT[2]);
    keqs[2] /= (g0_RT[0] * g0_RT[2]);
    keqs[3] /= (g0_RT[6] * g0_RT[2]);
    keqs[4] /= (g0_RT[7] * g0_RT[2]);
    keqs[5] /= (g0_RT[9] * g0_RT[2]);
    keqs[6] /= (g0_RT[10] * g0_RT[2]);
    keqs[7] /= (g0_RT[11] * g0_RT[2]);
    keqs[8] /= (g0_RT[11] * g0_RT[2]);
    keqs[9] /= (g0_RT[12] * g0_RT[2]);
    keqs[10] /= (g0_RT[13] * g0_RT[2]);
    keqs[11] /= (g0_RT[14] * g0_RT[2]);
    keqs[12] /= (g0_RT[16] * g0_RT[2]);
    keqs[13] /= (g0_RT[16] * g0_RT[2]);
    keqs[14] /= (g0_RT[17] * g0_RT[2]);
    keqs[15] /= (g0_RT[18] * g0_RT[2]);
    keqs[16] /= (g0_RT[19] * g0_RT[2]);
    keqs[17] /= (g0_RT[20] * g0_RT[2]);
    keqs[18] /= (g0_RT[20] * g0_RT[2]);
    keqs[19] /= (g0_RT[21] * g0_RT[2]);
    keqs[20] /= (g0_RT[22] * g0_RT[2]);
    keqs[21] /= (g0_RT[22] * g0_RT[2]);
    keqs[22] /= (g0_RT[22] * g0_RT[2]);
    keqs[23] /= (g0_RT[23] * g0_RT[2]);
    keqs[24] /= (g0_RT[24] * g0_RT[2]);
    keqs[25] /= (g0_RT[25] * g0_RT[2]);
    keqs[26] /= (g0_RT[26] * g0_RT[2]);
    keqs[27] /= (C0 * g0_RT[27] * g0_RT[2]);
    keqs[28] /= (g0_RT[28] * g0_RT[2]);
    keqs[29] /= (g0_RT[28] * g0_RT[2]);
    keqs[30] /= (g0_RT[14] * g0_RT[3]);
    keqs[31] /= (g0_RT[17] * g0_RT[3]);
    keqs[32] /= (g0_RT[1] * g0_RT[3]);
    keqs[33] /= (g0_RT[1] * g0_RT[3] * g0_RT[3]);
    keqs[34] /= (g0_RT[1] * g0_RT[5] * g0_RT[3]);
    keqs[35] /= (g0_RT[1] * g0_RT[47] * g0_RT[3]);
    keqs[36] /= (g0_RT[1] * g0_RT[48] * g0_RT[3]);
    keqs[37] /= (g0_RT[1] * g0_RT[3]);
    keqs[38] /= (g0_RT[1] * g0_RT[1]);
    keqs[39] /= (g0_RT[0] * g0_RT[1] * g0_RT[1]);
    keqs[40] /= (g0_RT[1] * g0_RT[1] * g0_RT[5]);
    keqs[41] /= (g0_RT[1] * g0_RT[1] * g0_RT[15]);
    keqs[42] /= (g0_RT[1] * g0_RT[4]);
    keqs[43] /= (g0_RT[1] * g0_RT[6]);
    keqs[44] /= (g0_RT[1] * g0_RT[6]);
    keqs[45] /= (g0_RT[1] * g0_RT[6]);
    keqs[46] /= (g0_RT[1] * g0_RT[7]);
    keqs[47] /= (g0_RT[1] * g0_RT[7]);
    keqs[48] /= (g0_RT[1] * g0_RT[9]);
    keqs[49] /= (g0_RT[1] * g0_RT[10]);
    keqs[50] /= (g0_RT[1] * g0_RT[11]);
    keqs[51] /= (g0_RT[1] * g0_RT[12]);
    keqs[52] /= (g0_RT[1] * g0_RT[13]);
    keqs[53] /= (g0_RT[1] * g0_RT[16]);
    keqs[54] /= (g0_RT[1] * g0_RT[16]);
    keqs[55] /= (g0_RT[17] * g0_RT[1]);
    keqs[56] /= (g0_RT[17] * g0_RT[1]);
    keqs[57] /= (g0_RT[17] * g0_RT[1]);
    keqs[58] /= (g0_RT[1] * g0_RT[18]);
    keqs[59] /= (g0_RT[1] * g0_RT[18]);
    keqs[60] /= (g0_RT[1] * g0_RT[18]);
    keqs[61] /= (g0_RT[1] * g0_RT[18]);
    keqs[62] /= (g0_RT[1] * g0_RT[19]);
    keqs[63] /= (g0_RT[1] * g0_RT[19]);
    keqs[64] /= (g0_RT[1] * g0_RT[19]);
    keqs[65] /= (g0_RT[1] * g0_RT[19]);
    keqs[66] /= (g0_RT[1] * g0_RT[19]);
    keqs[67] /= (g0_RT[20] * g0_RT[1]);
    keqs[68] /= (g0_RT[20] * g0_RT[1]);
    keqs[69] /= (g0_RT[1] * g0_RT[21]);
    keqs[70] /= (g0_RT[1] * g0_RT[22]);
    keqs[71] /= (g0_RT[1] * g0_RT[23]);
    keqs[72] /= (g0_RT[1] * g0_RT[23]);
    keqs[73] /= (g0_RT[1] * g0_RT[24]);
    keqs[74] /= (g0_RT[1] * g0_RT[24]);
    keqs[75] /= (g0_RT[1] * g0_RT[25]);
    keqs[76] /= (g0_RT[1] * g0_RT[25]);
    keqs[77] /= (g0_RT[1] * g0_RT[26]);
    keqs[78] /= (g0_RT[1] * g0_RT[27]);
    keqs[79] /= (g0_RT[1] * g0_RT[28]);
    keqs[80] /= (g0_RT[1] * g0_RT[28]);
    keqs[81] /= (g0_RT[1] * g0_RT[29]);
    keqs[82] /= (g0_RT[0] * g0_RT[14]);
    keqs[83] /= (g0_RT[0] * g0_RT[4]);
    keqs[84] /= (g0_RT[4] * g0_RT[4]);
    keqs[85] /= (g0_RT[4] * g0_RT[4]);
    keqs[86] /= (g0_RT[6] * g0_RT[4]);
    keqs[87] /= (g0_RT[7] * g0_RT[4]);
    keqs[88] /= (g0_RT[7] * g0_RT[4]);
    keqs[89] /= (g0_RT[8] * g0_RT[4]);
    keqs[90] /= (g0_RT[9] * g0_RT[4]);
    keqs[91] /= (g0_RT[10] * g0_RT[4]);
    keqs[92] /= (g0_RT[10] * g0_RT[4]);
    keqs[93] /= (g0_RT[11] * g0_RT[4]);
    keqs[94] /= (g0_RT[12] * g0_RT[4]);
    keqs[95] /= (g0_RT[12] * g0_RT[4]);
    keqs[96] /= (g0_RT[12] * g0_RT[4]);
    keqs[97] /= (g0_RT[13] * g0_RT[4]);
    keqs[98] /= (g0_RT[14] * g0_RT[4]);
    keqs[99] /= (g0_RT[16] * g0_RT[4]);
    keqs[100] /= (g0_RT[17] * g0_RT[4]);
    keqs[101] /= (g0_RT[18] * g0_RT[4]);
    keqs[102] /= (g0_RT[19] * g0_RT[4]);
    keqs[103] /= (g0_RT[20] * g0_RT[4]);
    keqs[104] /= (g0_RT[20] * g0_RT[4]);
    keqs[105] /= (g0_RT[21] * g0_RT[4]);
    keqs[106] /= (g0_RT[22] * g0_RT[4]);
    keqs[107] /= (g0_RT[22] * g0_RT[4]);
    keqs[108] /= (g0_RT[22] * g0_RT[4]);
    keqs[109] /= (g0_RT[22] * g0_RT[4]);
    keqs[110] /= (g0_RT[23] * g0_RT[4]);
    keqs[111] /= (g0_RT[24] * g0_RT[4]);
    keqs[112] /= (g0_RT[26] * g0_RT[4]);
    keqs[113] /= (g0_RT[28] * g0_RT[4]);
    keqs[114] /= (g0_RT[6] * g0_RT[6]);
    keqs[115] /= (g0_RT[6] * g0_RT[6]);
    keqs[116] /= (g0_RT[10] * g0_RT[6]);
    keqs[117] /= (g0_RT[12] * g0_RT[6]);
    keqs[118] /= (g0_RT[12] * g0_RT[6]);
    keqs[119] /= (g0_RT[14] * g0_RT[6]);
    keqs[120] /= (g0_RT[17] * g0_RT[6]);
    keqs[121] /= (g0_RT[8] * g0_RT[3]);
    keqs[122] /= (g0_RT[8] * g0_RT[10]);
    keqs[123] /= (g0_RT[8] * g0_RT[12]);
    keqs[124] /= (g0_RT[9] * g0_RT[3]);
    keqs[125] /= (g0_RT[0] * g0_RT[9]);
    keqs[126] /= (g0_RT[5] * g0_RT[9]);
    keqs[127] /= (g0_RT[10] * g0_RT[9]);
    keqs[128] /= (g0_RT[12] * g0_RT[9]);
    keqs[129] /= (g0_RT[9] * g0_RT[13]);
    keqs[130] /= (g0_RT[9] * g0_RT[14]);
    keqs[131] /= (g0_RT[9] * g0_RT[15]);
    keqs[132] /= (g0_RT[17] * g0_RT[9]);
    keqs[133] /= (g0_RT[9] * g0_RT[27]);
    keqs[135] /= (g0_RT[0] * g0_RT[10]);
    keqs[136] /= (g0_RT[10] * g0_RT[10]);
    keqs[137] /= (g0_RT[10] * g0_RT[12]);
    keqs[138] /= (g0_RT[10] * g0_RT[13]);
    keqs[139] /= (g0_RT[10] * g0_RT[14]);
    keqs[140] /= (g0_RT[10] * g0_RT[27]);
    keqs[141] /= (g0_RT[11] * g0_RT[47]);
    keqs[142] /= (g0_RT[11] * g0_RT[48]);
    keqs[143] /= (C0 * g0_RT[11] * g0_RT[3]);
    keqs[144] /= (g0_RT[11] * g0_RT[3]);
    keqs[145] /= (g0_RT[0] * g0_RT[11]);
    keqs[146] /= (g0_RT[11] * g0_RT[5]);
    keqs[147] /= (g0_RT[11] * g0_RT[5]);
    keqs[148] /= (g0_RT[11] * g0_RT[12]);
    keqs[149] /= (g0_RT[11] * g0_RT[13]);
    keqs[150] /= (g0_RT[11] * g0_RT[14]);
    keqs[151] /= (g0_RT[11] * g0_RT[15]);
    keqs[152] /= (g0_RT[11] * g0_RT[15]);
    keqs[153] /= (g0_RT[11] * g0_RT[26]);
    keqs[154] /= (g0_RT[12] * g0_RT[3]);
    keqs[155] /= (g0_RT[12] * g0_RT[3]);
    keqs[156] /= (g0_RT[12] * g0_RT[7]);
    keqs[157] /= (g0_RT[12] * g0_RT[12]);
    keqs[158] /= (g0_RT[12] * g0_RT[12]);
    keqs[159] /= (g0_RT[12] * g0_RT[16]);
    keqs[160] /= (g0_RT[17] * g0_RT[12]);
    keqs[161] /= (g0_RT[20] * g0_RT[12]);
    keqs[162] /= (g0_RT[20] * g0_RT[12]);
    keqs[163] /= (g0_RT[12] * g0_RT[24]);
    keqs[164] /= (g0_RT[26] * g0_RT[12]);
    keqs[165] /= (C0 * g0_RT[5] * g0_RT[16]);
    keqs[166] /= (C0 * g0_RT[16]);
    keqs[167] /= (g0_RT[16] * g0_RT[3]);
    keqs[168] /= (g0_RT[18] * g0_RT[3]);
    keqs[169] /= (g0_RT[19] * g0_RT[3]);
    keqs[170] /= (g0_RT[21] * g0_RT[3]);
    keqs[171] /= (g0_RT[0] * g0_RT[21]);
    keqs[172] /= (g0_RT[23] * g0_RT[3]);
    keqs[173] /= (C0 * g0_RT[24]);
    keqs[174] /= (g0_RT[25] * g0_RT[3]);
    keqs[175] /= (C0 * g0_RT[27] * g0_RT[3]);
    keqs[176] /= (C0 * g0_RT[27] * g0_RT[27]);
    keqs[177] /= (g0_RT[35] * g0_RT[30]);
    keqs[178] /= (g0_RT[3] * g0_RT[30]);
    keqs[179] /= (g0_RT[4] * g0_RT[30]);
    keqs[180] /= (g0_RT[37] * g0_RT[2]);
    keqs[181] /= (g0_RT[37] * g0_RT[2]);
    keqs[182] /= (g0_RT[1] * g0_RT[37]);
    keqs[183] /= (g0_RT[37] * g0_RT[4]);
    keqs[184] /= (C0 * g0_RT[37]);
    keqs[185] /= (g0_RT[6] * g0_RT[35]);
    keqs[186] /= (g0_RT[2] * g0_RT[35]);
    keqs[187] /= (g0_RT[2] * g0_RT[36]);
    keqs[188] /= (g0_RT[1] * g0_RT[36]);
    keqs[189] /= (g0_RT[31] * g0_RT[2]);
    keqs[190] /= (g0_RT[31] * g0_RT[1]);
    keqs[191] /= (g0_RT[31] * g0_RT[4]);
    keqs[192] /= (g0_RT[31] * g0_RT[4]);
    keqs[193] /= (g0_RT[31] * g0_RT[3]);
    keqs[194] /= (g0_RT[31] * g0_RT[3]);
    keqs[195] /= (g0_RT[31] * g0_RT[30]);
    keqs[196] /= (g0_RT[31] * g0_RT[5]);
    keqs[197] /= (g0_RT[31] * g0_RT[35]);
    keqs[198] /= (g0_RT[31] * g0_RT[35]);
    keqs[199] /= (g0_RT[2] * g0_RT[32]);
    keqs[200] /= (g0_RT[2] * g0_RT[32]);
    keqs[201] /= (g0_RT[1] * g0_RT[32]);
    keqs[202] /= (g0_RT[4] * g0_RT[32]);
    keqs[203] /= (C0 * g0_RT[34]);
    keqs[204] /= (C0 * g0_RT[34]);
    keqs[205] /= (g0_RT[3] * g0_RT[34]);
    keqs[206] /= (g0_RT[2] * g0_RT[34]);
    keqs[207] /= (g0_RT[2] * g0_RT[34]);
    keqs[208] /= (g0_RT[1] * g0_RT[34]);
    keqs[209] /= (g0_RT[4] * g0_RT[34]);
    keqs[210] /= (g0_RT[12] * g0_RT[34]);
    keqs[211] /= (g0_RT[1] * g0_RT[35]);
    keqs[212] /= (g0_RT[2] * g0_RT[38]);
    keqs[213] /= (g0_RT[1] * g0_RT[38]);
    keqs[214] /= (g0_RT[38] * g0_RT[4]);
    keqs[215] /= (g0_RT[3] * g0_RT[38]);
    keqs[216] /= (g0_RT[39] * g0_RT[2]);
    keqs[217] /= (g0_RT[39] * g0_RT[4]);
    keqs[218] /= (g0_RT[5] * g0_RT[39]);
    keqs[219] /= (g0_RT[39] * g0_RT[3]);
    keqs[220] /= (g0_RT[0] * g0_RT[39]);
    keqs[221] /= (g0_RT[2] * g0_RT[46]);
    keqs[222] /= (g0_RT[1] * g0_RT[46]);
    keqs[223] /= (C0 * g0_RT[4] * g0_RT[46]);
    keqs[224] /= (g0_RT[30] * g0_RT[46]);
    keqs[225] /= (g0_RT[3] * g0_RT[46]);
    keqs[226] /= (C0 * g0_RT[46]);
    keqs[227] /= (g0_RT[35] * g0_RT[46]);
    keqs[228] /= (g0_RT[35] * g0_RT[46]);
    keqs[229] /= (C0 * g0_RT[40]);
    keqs[230] /= (g0_RT[40] * g0_RT[2]);
    keqs[231] /= (g0_RT[40] * g0_RT[2]);
    keqs[232] /= (g0_RT[40] * g0_RT[2]);
    keqs[233] /= (g0_RT[40] * g0_RT[4]);
    keqs[234] /= (g0_RT[40] * g0_RT[4]);
    keqs[235] /= (g0_RT[40] * g0_RT[4]);
    keqs[236] /= (g0_RT[1] * g0_RT[40]);
    keqs[237] /= (g0_RT[41] * g0_RT[30]);
    keqs[238] /= (g0_RT[8] * g0_RT[47]);
    keqs[239] /= (g0_RT[47] * g0_RT[9]);
    keqs[240] /= (g0_RT[47] * g0_RT[9]);
    keqs[241] /= (g0_RT[10] * g0_RT[47]);
    keqs[242] /= (g0_RT[11] * g0_RT[47]);
    keqs[243] /= (g0_RT[8] * g0_RT[35]);
    keqs[244] /= (g0_RT[8] * g0_RT[35]);
    keqs[245] /= (g0_RT[9] * g0_RT[35]);
    keqs[246] /= (g0_RT[9] * g0_RT[35]);
    keqs[247] /= (g0_RT[9] * g0_RT[35]);
    keqs[248] /= (g0_RT[10] * g0_RT[35]);
    keqs[249] /= (g0_RT[10] * g0_RT[35]);
    keqs[250] /= (g0_RT[10] * g0_RT[35]);
    keqs[251] /= (g0_RT[11] * g0_RT[35]);
    keqs[252] /= (g0_RT[11] * g0_RT[35]);
    keqs[253] /= (g0_RT[11] * g0_RT[35]);
    keqs[254] /= (g0_RT[12] * g0_RT[35]);
    keqs[255] /= (g0_RT[12] * g0_RT[35]);
    keqs[256] /= (C0 * g0_RT[2] * g0_RT[42]);
    keqs[257] /= (g0_RT[2] * g0_RT[42]);
    keqs[258] /= (C0 * g0_RT[3] * g0_RT[42]);
    keqs[259] /= (C0 * g0_RT[4] * g0_RT[42]);
    keqs[260] /= (g0_RT[1] * g0_RT[42]);
    keqs[261] /= (g0_RT[45] * g0_RT[2]);
    keqs[262] /= (g0_RT[45] * g0_RT[2]);
    keqs[263] /= (g0_RT[45] * g0_RT[2]);
    keqs[264] /= (g0_RT[45] * g0_RT[1]);
    keqs[265] /= (g0_RT[45] * g0_RT[1]);
    keqs[266] /= (g0_RT[45] * g0_RT[4]);
    keqs[267] /= (g0_RT[45] * g0_RT[4]);
    keqs[268] /= (C0 * g0_RT[45]);
    keqs[269] /= (g0_RT[1] * g0_RT[43]);
    keqs[270] /= (g0_RT[1] * g0_RT[43]);
    keqs[271] /= (g0_RT[1] * g0_RT[43]);
    keqs[272] /= (g0_RT[44] * g0_RT[1]);
    keqs[273] /= (g0_RT[27] * g0_RT[35]);
    keqs[274] /= (g0_RT[12] * g0_RT[30]);
    keqs[275] /= (g0_RT[12] * g0_RT[30]);
    keqs[276] /= (g0_RT[1] * g0_RT[33]);
    keqs[277] /= (g0_RT[33] * g0_RT[4]);
    keqs[278] /= (g0_RT[2] * g0_RT[33]);
    keqs[279] /= (g0_RT[31] * g0_RT[15]);
    keqs[280] /= (g0_RT[39] * g0_RT[36]);
    keqs[281] /= (g0_RT[36] * g0_RT[46]);
    keqs[282] /= (g0_RT[15] * g0_RT[30]);
    keqs[284] /= (g0_RT[24] * g0_RT[2]);
    keqs[285] /= (g0_RT[25] * g0_RT[2]);
    keqs[286] /= (g0_RT[6] * g0_RT[4]);
    keqs[288] /= (g0_RT[0] * g0_RT[9]);
    keqs[290] /= (g0_RT[10] * g0_RT[3]);
    keqs[293] /= (g0_RT[23] * g0_RT[3]);
    keqs[294] /= (g0_RT[23] * g0_RT[3]);
    keqs[295] /= (g0_RT[52] * g0_RT[2]);
    keqs[298] /= (g0_RT[1] * g0_RT[52]);
    keqs[303] /= (g0_RT[1] * g0_RT[28]);
    keqs[307] /= (g0_RT[1] * g0_RT[51]);
    keqs[308] /= (g0_RT[1] * g0_RT[51]);
    keqs[309] /= (g0_RT[51] * g0_RT[4]);
    keqs[310] /= (g0_RT[51] * g0_RT[4]);
    keqs[311] /= (g0_RT[25] * g0_RT[12]);
    keqs[312] /= (g0_RT[50] * g0_RT[2]);
    keqs[313] /= (g0_RT[1] * g0_RT[50]);
    keqs[314] /= (g0_RT[50] * g0_RT[4]);
    keqs[315] /= (g0_RT[49] * g0_RT[7]);
    keqs[316] /= (g0_RT[12] * g0_RT[50]);
    keqs[317] /= (g0_RT[12] * g0_RT[24]);
    keqs[318] /= (g0_RT[49] * g0_RT[2]);
    keqs[319] /= (g0_RT[1] * g0_RT[49]);
    keqs[320] /= (g0_RT[1] * g0_RT[49]);
    keqs[321] /= (g0_RT[49] * g0_RT[4]);
    keqs[322] /= (g0_RT[49] * g0_RT[6]);
    keqs[324] /= (g0_RT[49] * g0_RT[12]);

    keqs[134] = 0.0;
    keqs[283] = 0.0;
    keqs[287] = 0.0;
    keqs[289] = 0.0;
    keqs[291] = 0.0;
    keqs[292] = 0.0;
    keqs[296] = 0.0;
    keqs[297] = 0.0;
    keqs[299] = 0.0;
    keqs[300] = 0.0;
    keqs[301] = 0.0;
    keqs[302] = 0.0;
    keqs[304] = 0.0;
    keqs[305] = 0.0;
    keqs[306] = 0.0;
    keqs[323] = 0.0;

  };

  template <class Type>
  void getTemperature(double& h, double& Told, vector<Type>& Y, Type& T) {

    double         tol   = 1.0e-08;
    int            niter = 500;
    Type           RT;
    Type           To;
    Type           Tp;
    Type           dT = 1.0;
    Type           FY = 0.0;
    Type           JY = 0.0;
    vector<Type>   hi(kk,    0.0);
    vector<Type>   dhidT(kk, 0.0);
    vector<double> mw = getMolecularWeights();

    To = Told;
    Tp = Told;

    for(int i = 0; i < niter; ++i) { 

      RT = GasConstant * To;
      mech::getEnthalpies_RT(To, hi);
      mech::getEnthalpiesDerivatives(To, dhidT);
      for(int k = 0; k < kk; ++k) { hi[k]    = RT * hi[k] / mw[k]; }
      for(int k = 0; k < kk; ++k) { dhidT[k] = GasConstant * dhidT[k] / mw[k]; }
      for(int k = 0; k < kk; ++k) { FY -= hi[k] * Y[k]; }
      for(int k = 0; k < kk; ++k) { JY -= dhidT[k] * Y[k]; }
      FY = h + FY;
      JY = 1.0 / JY;
      dT = -FY * JY;
      Tp = To + dT;
      To = Tp;

      if( (fabs(dT) < tol)) {
	T = Tp;
	return;
      }

      FY = 0.0;
      JY = 0.0;

    }

    T = Tp;

  };

  /***********************************************************************************/
  /* kinetics                                                                        */
  /***********************************************************************************/
  template <class Type>
  void getFalloffRates(Type& T, vector<Type>& C, vector<Type>& kfwd) {

    int          nfall = 2; 
    Type         tlog  = log(T);
    Type         rt    = 1.0 / T;
    Type         lpr;
    Type         cc;
    Type         nn;
    Type         f1;
    Type         lgf;
    vector<Type> pr(nfall);
    vector<Type> khi(nfall);
    vector<Type> klo(nfall);
    vector<Type> work(nfall);

    khi[0] =  exp(1.670588231586e+01 - 1.200178662189103e+03 * rt);
    khi[1] =  exp(2.712019549216e+01);
    khi[2] =  exp(3.026290995607e+01 + -5.3400e-01 * tlog - 2.697256867645112e+02 * rt);
    khi[3] =  exp(2.080944353319e+01 + 4.8000e-01 * tlog - -1.308370868633823e+02 * rt);
    khi[4] =  exp(2.010707969752e+01 + 4.5400e-01 * tlog - 1.811590433492986e+03 * rt);
    khi[5] =  exp(2.010707969752e+01 + 4.5400e-01 * tlog - 1.308370868633823e+03 * rt);
    khi[6] =  exp(2.077680660387e+01 + 5.0000e-01 * tlog - 4.327688257788799e+01 * rt);
    khi[7] =  exp(2.161115709430e+01 + 5.1500e-01 * tlog - 2.516097824295813e+01 * rt);
    khi[8] =  exp(3.223619130192e+01 + -1.0000e+00 * tlog);
    khi[9] =  exp(2.244603243469e+01 - 1.207726955661990e+03 * rt);
    khi[10] =  exp(2.252827053292e+01 + 2.7000e-01 * tlog - 1.409014781605655e+02 * rt);
    khi[11] =  exp(2.010707969752e+01 + 4.5400e-01 * tlog - 9.158596080436761e+02 * rt);
    khi[12] =  exp(3.388677115768e+01 + -9.9000e-01 * tlog - 7.950869124774770e+02 * rt);
    khi[13] =  exp(1.066895539468e+01 + 1.5000e+00 * tlog - 4.005627736278935e+04 * rt);
    khi[14] =  exp(2.502733093015e+01 + -3.7000e-01 * tlog);
    khi[15] =  exp(3.556481799074e+01 + -1.4300e+00 * tlog - 6.692820212626863e+02 * rt);
    khi[16] =  exp(2.463528884237e+01);
    khi[17] =  exp(2.051254480563e+01 + 5.0000e-01 * tlog - 2.269520237514824e+03 * rt);
    khi[18] =  exp(3.380896522998e+01 + -1.1600e+00 * tlog - 5.761864017637413e+02 * rt);
    khi[19] =  exp(3.184610729585e+01 + -1.1800e+00 * tlog - 3.291055954178923e+02 * rt);
    khi[20] =  exp(2.971046265761e+01 + 4.4000e-01 * tlog - 4.366436164282954e+04 * rt);
    khi[21] =  exp(2.509397871172e+01 - 2.819036002341029e+04 * rt);
    khi[22] =  exp(2.421977339841e+01);
    khi[23] =  exp(2.185466794844e+01 + 1.5000e-01 * tlog);
    khi[24] =  exp(2.140129937970e+01 + 4.3000e-01 * tlog - -1.861912389978902e+02 * rt);
    khi[25] =  exp(2.000274745959e+01 + 4.2200e-01 * tlog - -8.831503363278305e+02 * rt);
    khi[26] =  exp(2.296716193359e+01);
    khi[27] =  exp(7.843848638152e+00 + 1.6000e+00 * tlog - 2.868351519697227e+03 * rt);
    khi[28] =  exp(2.431038938211e+01);

    klo[0] =  exp(2.021576800327e+01 - 1.509658694577488e+03 * rt);
    klo[1] =  exp(4.609092257303e+01 + -2.7600e+00 * tlog - 8.051513037746603e+02 * rt);
    klo[2] =  exp(6.313297182861e+01 + -4.7600e+00 * tlog - 1.227855738256357e+03 * rt);
    klo[3] =  exp(4.235074982453e+01 + -2.5700e+00 * tlog - 2.138683150651441e+02 * rt);
    klo[4] =  exp(6.010622931832e+01 + -4.8200e+00 * tlog - 3.286023758530332e+03 * rt);
    klo[5] =  exp(5.605049959222e+01 + -4.8000e+00 * tlog - 2.797900780616944e+03 * rt);
    klo[6] =  exp(5.903709938221e+01 + -4.6500e+00 * tlog - 2.556355389484546e+03 * rt);
    klo[7] =  exp(8.212949370293e+01 + -7.4400e+00 * tlog - 7.085331473217010e+03 * rt);
    klo[8] =  exp(6.349155335082e+01 + -4.8000e+00 * tlog - 9.561171732324091e+02 * rt);
    klo[9] =  exp(7.962289422853e+01 + -7.2700e+00 * tlog - 3.633245258283154e+03 * rt);
    klo[10] =  exp(5.559851446848e+01 + -3.8600e+00 * tlog - 1.670688955332420e+03 * rt);
    klo[11] =  exp(8.238223772402e+01 + -7.6200e+00 * tlog - 3.507440367068364e+03 * rt);
    klo[12] =  exp(8.127861289353e+01 + -7.0800e+00 * tlog - 3.364022791083502e+03 * rt);
    klo[13] =  exp(4.997762777048e+01 + -3.4200e+00 * tlog - 4.244657029587037e+04 * rt);
    klo[14] =  exp(2.846393023886e+01 + -9.0000e-01 * tlog - -8.554732602605765e+02 * rt);
    klo[15] =  exp(7.046384715094e+01 + -5.9200e+00 * tlog - 1.580109433657771e+03 * rt);
    klo[16] =  exp(5.164641323948e+01 + -3.7400e+00 * tlog - 9.742330775673389e+02 * rt);
    klo[17] =  exp(6.315933870445e+01 + -5.1100e+00 * tlog - 3.570342812675759e+03 * rt);
    klo[18] =  exp(7.431399475265e+01 + -6.3600e+00 * tlog - 2.536226606890180e+03 * rt);
    klo[19] =  exp(8.181425368641e+01 + -7.0300e+00 * tlog - 1.389892438141007e+03 * rt);
    klo[20] =  exp(1.109815093108e+02 + -9.3000e+00 * tlog - 4.921487344322610e+04 * rt);
    klo[21] =  exp(2.718003549252e+01 - 2.850235615362297e+04 * rt);
    klo[22] =  exp(4.638817409650e+01 + -3.4000e+00 * tlog - 9.561171732324091e+02 * rt);
    klo[23] =  exp(4.401148103135e+01 + -3.1600e+00 * tlog - 3.723824779957803e+02 * rt);
    klo[24] =  exp(4.532189069495e+01 + -2.8000e+00 * tlog - 2.968995432669059e+02 * rt);
    klo[25] =  exp(8.290499191865e+01 + -7.6300e+00 * tlog - 1.939408202967213e+03 * rt);
    klo[26] =  exp(1.575727349585e+02 + -1.6820e+01 * tlog - 6.574563614884960e+03 * rt);
    klo[27] =  exp(1.323459625893e+02 + -1.4600e+01 * tlog - 9.143499493490985e+03 * rt);
    klo[28] =  exp(1.281283198108e+02 + -1.3545e+01 * tlog - 5.715064598105510e+03 * rt);

    pr[0] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 6.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 3.5e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 5.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[0] / khi[0];
    pr[1] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[1] / khi[1];
    pr[2] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 3.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[2] / khi[2];
    pr[3] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[3] / khi[3];
    pr[4] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[4] / khi[4];
    pr[5] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[5] / khi[5];
    pr[6] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[6] / khi[6];
    pr[7] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[7] / khi[7];
    pr[8] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[8] / khi[8];
    pr[9] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[9] / khi[9];
    pr[10] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[10] / khi[10];
    pr[11] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[11] / khi[11];
    pr[12] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[12] / khi[12];
    pr[13] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[13] / khi[13];
    pr[14] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[14] / khi[14];
    pr[15] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[15] / khi[15];
    pr[16] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[16] / khi[16];
    pr[17] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[17] / khi[17];
    pr[18] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[18] / khi[18];
    pr[19] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[19] / khi[19];
    pr[20] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[20] / khi[20];
    pr[21] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 6.2e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[21] / khi[21];
    pr[22] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[22] / khi[22];
    pr[23] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 1.0e+00 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[23] / khi[23];
    pr[24] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[24] / khi[24];
    pr[25] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[25] / khi[25];
    pr[26] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[26] / khi[26];
    pr[27] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[27] / khi[27];
    pr[28] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * klo[28] / khi[28];

    // Troe Falloff
    work[0] =  1.0;
    work[1] =  (1.0 - 5.6200e-01) * exp(-T * 1.0989e-02) + 5.6200e-01 * exp(-T * 1.7135e-04) + exp(-8.5520e+03/ T);
    work[2] =  (1.0 - 7.8300e-01) * exp(-T * 1.3514e-02) + 7.8300e-01 * exp(-T * 3.4002e-04) + exp(-6.9640e+03/ T);
    work[3] =  (1.0 - 7.8240e-01) * exp(-T * 3.6900e-03) + 7.8240e-01 * exp(-T * 3.6298e-04) + exp(-6.5700e+03/ T);
    work[4] =  (1.0 - 7.1870e-01) * exp(-T * 9.7087e-03) + 7.1870e-01 * exp(-T * 7.7459e-04) + exp(-4.1600e+03/ T);
    work[5] =  (1.0 - 7.5800e-01) * exp(-T * 1.0638e-02) + 7.5800e-01 * exp(-T * 6.4309e-04) + exp(-4.2000e+03/ T);
    work[6] =  (1.0 - 6.0000e-01) * exp(-T * 1.0000e-02) + 6.0000e-01 * exp(-T * 1.1111e-05) + exp(-1.0000e+04/ T);
    work[7] =  (1.0 - 7.0000e-01) * exp(-T * 1.0000e-02) + 7.0000e-01 * exp(-T * 1.1111e-05) + exp(-1.0000e+04/ T);
    work[8] =  (1.0 - 6.4640e-01) * exp(-T * 7.5758e-03) + 6.4640e-01 * exp(-T * 7.6046e-04) + exp(-5.5660e+03/ T);
    work[9] =  (1.0 - 7.5070e-01) * exp(-T * 1.0152e-02) + 7.5070e-01 * exp(-T * 7.6805e-04) + exp(-4.1670e+03/ T);
    work[10] =  (1.0 - 7.8200e-01) * exp(-T * 4.8193e-03) + 7.8200e-01 * exp(-T * 3.7552e-04) + exp(-6.0950e+03/ T);
    work[11] =  (1.0 - 9.7530e-01) * exp(-T * 4.7619e-03) + 9.7530e-01 * exp(-T * 1.0163e-03) + exp(-4.3740e+03/ T);
    work[12] =  (1.0 - 8.4220e-01) * exp(-T * 8.0000e-03) + 8.4220e-01 * exp(-T * 4.5065e-04) + exp(-6.8820e+03/ T);
    work[13] =  (1.0 - 9.3200e-01) * exp(-T * 5.0761e-03) + 9.3200e-01 * exp(-T * 6.4935e-04) + exp(-1.0300e+04/ T);
    work[14] =  (1.0 - 7.3460e-01) * exp(-T * 1.0638e-02) + 7.3460e-01 * exp(-T * 5.6948e-04) + exp(-5.1820e+03/ T);
    work[15] =  (1.0 - 4.1200e-01) * exp(-T * 5.1282e-03) + 4.1200e-01 * exp(-T * 1.6949e-04) + exp(-6.3940e+03/ T);
    work[16] =  (1.0 - 5.7570e-01) * exp(-T * 4.2194e-03) + 5.7570e-01 * exp(-T * 6.0533e-04) + exp(-5.0690e+03/ T);
    work[17] =  (1.0 - 5.9070e-01) * exp(-T * 3.6364e-03) + 5.9070e-01 * exp(-T * 8.1566e-04) + exp(-5.1850e+03/ T);
    work[18] =  (1.0 - 6.0270e-01) * exp(-T * 4.8077e-03) + 6.0270e-01 * exp(-T * 2.5497e-04) + exp(-1.0180e+04/ T);
    work[19] =  (1.0 - 6.1900e-01) * exp(-T * 1.3661e-02) + 6.1900e-01 * exp(-T * 8.4746e-04) + exp(-9.9990e+03/ T);
    work[20] =  (1.0 - 7.3450e-01) * exp(-T * 5.5556e-03) + 7.3450e-01 * exp(-T * 9.6618e-04) + exp(-5.4170e+03/ T);
    work[21] =  1.0;
    work[22] =  1.0;
    work[23] =  (1.0 - 6.6700e-01) * exp(-T * 4.2553e-03) + 6.6700e-01 * exp(-T * 4.7237e-04) + exp(-4.5360e+03/ T);
    work[24] =  (1.0 - 5.7800e-01) * exp(-T * 8.1967e-03) + 5.7800e-01 * exp(-T * 3.9448e-04) + exp(-9.3650e+03/ T);
    work[25] =  (1.0 - 4.6500e-01) * exp(-T * 4.9751e-03) + 4.6500e-01 * exp(-T * 5.6402e-04) + exp(-5.3330e+03/ T);
    work[26] =  (1.0 - 1.5270e-01) * exp(-T * 3.4364e-03) + 1.5270e-01 * exp(-T * 3.6470e-04) + exp(-7.7480e+03/ T);
    work[27] =  (1.0 - 1.8940e-01) * exp(-T * 3.6101e-03) + 1.8940e-01 * exp(-T * 1.1431e-04) + exp(-7.8910e+03/ T);
    work[28] =  (1.0 - 3.1500e-01) * exp(-T * 2.7100e-03) + 3.1500e-01 * exp(-T * 3.0441e-04) + exp(-6.6670e+03/ T);
    
    for(int r = 0; r < nfall; ++r) {
      lpr     =  log10(pr[r]);
      cc      = -0.40 - 0.67 * log10(work[r]);
      nn      =  0.75 - 1.27 * log10(work[r]);
      f1      =  (lpr + cc)/(nn - 0.14 * (lpr + cc));
      work[r] =  log10(work[r])/(1 + f1 * f1);
      work[r] =  pow(10.0, work[r]);
      work[r] =  (pr[r] * work[r])/(1 + pr[r]);
    };

    // Lindemann falloff
    work[0]  =  pr[0] / (1.0 + pr[0]);
    work[21] = pr[21] / (1.0 + pr[21]);
    work[22] = pr[22] / (1.0 + pr[22]);

    // forward rates
    kfwd[11] = khi[0] * work[0];
    kfwd[49] = khi[1] * work[1];
    kfwd[51] = khi[2] * work[2];
    kfwd[53] = khi[3] * work[3];
    kfwd[55] = khi[4] * work[4];
    kfwd[56] = khi[5] * work[5];
    kfwd[58] = khi[6] * work[6];
    kfwd[62] = khi[7] * work[7];
    kfwd[69] = khi[8] * work[8];
    kfwd[70] = khi[9] * work[9];
    kfwd[71] = khi[10] * work[10];
    kfwd[73] = khi[11] * work[11];
    kfwd[75] = khi[12] * work[12];
    kfwd[82] = khi[13] * work[13];
    kfwd[84] = khi[14] * work[14];
    kfwd[94] = khi[15] * work[15];
    kfwd[130] = khi[16] * work[16];
    kfwd[139] = khi[17] * work[17];
    kfwd[146] = khi[18] * work[18];
    kfwd[157] = khi[19] * work[19];
    kfwd[173] = khi[20] * work[20];
    kfwd[184] = khi[21] * work[21];
    kfwd[236] = khi[22] * work[22];
    kfwd[240] = khi[23] * work[23];
    kfwd[288] = khi[24] * work[24];
    kfwd[303] = khi[25] * work[25];
    kfwd[311] = khi[26] * work[26];
    kfwd[317] = khi[27] * work[27];
    kfwd[319] = khi[28] * work[28];

  };


  template <class Type>
  void updateRateConstants(double& p, Type& T, vector<Type>& C,
			   vector<Type>& kfwd, vector<Type>& krev) {

    Type         tlog = log(T);
    Type         rt   = 1.0 / T;
    vector<Type> keqs(ii, 0.0);

    getEqConstants(p, T, keqs);

    kfwd[0] =  exp(2.551075757973e+01 + -1.0000e+00 * tlog);
    kfwd[1] =  exp(2.693787393537e+01 + -1.0000e+00 * tlog);
    kfwd[2] =  exp(3.655839600036e+00 + 2.7000e+00 * tlog - 3.150154476018358e+03 * rt);
    kfwd[3] =  exp(2.371899811050e+01);
    kfwd[4] =  exp(9.172638504792e+00 + 2.0000e+00 * tlog - 2.012878259436651e+03 * rt);
    kfwd[5] =  exp(2.476631710478e+01);
    kfwd[6] =  exp(2.510529247162e+01);
    kfwd[7] =  exp(2.343131603805e+01);
    kfwd[8] =  exp(2.343131603805e+01);
    kfwd[9] =  exp(2.464721741324e+01);
    kfwd[10] =  exp(1.383531318526e+01 + 1.5000e+00 * tlog - 4.327688257788799e+03 * rt);
    kfwd[12] =  exp(2.412446321861e+01);
    kfwd[13] =  exp(2.412446321861e+01);
    kfwd[14] =  exp(2.438682748308e+01 - 1.781397259601436e+03 * rt);
    kfwd[15] =  exp(2.302585092994e+01);
    kfwd[16] =  exp(2.302585092994e+01);
    kfwd[17] =  exp(5.961005339623e+00 + 2.5000e+00 * tlog - 1.559980651063404e+03 * rt);
    kfwd[18] =  exp(4.867534450456e+00 + 2.5000e+00 * tlog - 2.516097824295813e+03 * rt);
    kfwd[19] =  exp(2.463528884237e+01);
    kfwd[20] =  exp(9.510444964427e+00 + 2.0000e+00 * tlog - 9.561171732324091e+02 * rt);
    kfwd[21] =  exp(3.836741779140e+01 + -1.4100e+00 * tlog - 1.456820640267276e+04 * rt);
    kfwd[22] =  exp(8.845057053501e+00 + 2.0000e+00 * tlog - 9.561171732324091e+02 * rt);
    kfwd[23] =  exp(2.412446321861e+01);
    kfwd[24] =  exp(9.433483923290e+00 + 1.8300e+00 * tlog - 1.107083042690158e+02 * rt);
    kfwd[25] =  exp(2.383232679581e+01);
    kfwd[26] =  exp(1.140534025429e+01 + 1.9200e+00 * tlog - 2.863319324048635e+03 * rt);
    kfwd[27] =  exp(2.532843602293e+01);
    kfwd[28] =  exp(2.302585092994e+01 - 4.025756518873301e+03 * rt);
    kfwd[29] =  exp(2.128288162488e+01 - 6.793464125598696e+02 * rt);
    kfwd[30] =  exp(2.163955656882e+01 - 2.405389520026798e+04 * rt);
    kfwd[31] =  exp(2.532843602293e+01 - 2.012878259436650e+04 * rt);
    kfwd[32] =  exp(2.866064053311e+01 + -8.6000e-01 * tlog);
    kfwd[33] =  exp(3.066597410264e+01 + -1.2400e+00 * tlog);
    kfwd[34] =  exp(3.005227773864e+01 + -7.6000e-01 * tlog);
    kfwd[35] =  exp(3.088911765395e+01 + -1.2400e+00 * tlog);
    kfwd[36] =  exp(2.727434617199e+01 + -8.0000e-01 * tlog);
    kfwd[37] =  exp(3.090816584892e+01 + -6.7070e-01 * tlog - 8.575364604764991e+03 * rt);
    kfwd[38] =  exp(2.763102111593e+01 + -1.0000e+00 * tlog);
    kfwd[39] =  exp(2.522307550728e+01 + -6.0000e-01 * tlog);
    kfwd[40] =  exp(3.172536567815e+01 + -1.2500e+00 * tlog);
    kfwd[41] =  exp(3.394093939416e+01 + -2.0000e+00 * tlog);
    kfwd[42] =  exp(3.762981884827e+01 + -2.0000e+00 * tlog);
    kfwd[43] =  exp(2.210203193165e+01 - 3.376603280204981e+02 * rt);
    kfwd[44] =  exp(2.452547397637e+01 - 5.374384952695857e+02 * rt);
    kfwd[45] =  exp(2.515408263579e+01 - 3.195444236855683e+02 * rt);
    kfwd[46] =  exp(9.400960731585e+00 + 2.0000e+00 * tlog - 2.616741737267646e+03 * rt);
    kfwd[47] =  exp(2.302585092994e+01 - 1.811590433492986e+03 * rt);
    kfwd[48] =  exp(2.582921131085e+01);
    kfwd[50] =  exp(2.412446321861e+01);
    kfwd[52] =  exp(1.339999511400e+01 + 1.6200e+00 * tlog - 5.454900083073323e+03 * rt);
    kfwd[54] =  exp(2.501918977257e+01);
    kfwd[57] =  exp(1.095779958231e+01 + 1.9000e+00 * tlog - 1.379828046843824e+03 * rt);
    kfwd[59] =  exp(2.371899811050e+01);
    kfwd[60] =  exp(1.892145603186e+01 + 6.5000e-01 * tlog - -1.429143564200022e+02 * rt);
    kfwd[61] =  exp(2.421369435234e+01 + -9.0000e-02 * tlog - 3.069639345640892e+02 * rt);
    kfwd[63] =  exp(1.063344870622e+01 + 1.6300e+00 * tlog - 9.681944427890289e+02 * rt);
    kfwd[64] =  exp(2.371899811050e+01);
    kfwd[65] =  exp(2.112873094505e+01 + 5.0000e-01 * tlog - -5.535415213450789e+01 * rt);
    kfwd[66] =  exp(2.629161034071e+01 + -2.3000e-01 * tlog - 5.384449343993041e+02 * rt);
    kfwd[67] =  exp(9.740968623038e+00 + 2.1000e+00 * tlog - 2.450679280864122e+03 * rt);
    kfwd[68] =  exp(8.342839804271e+00 + 2.1000e+00 * tlog - 2.450679280864122e+03 * rt);
    kfwd[72] =  exp(2.412446321861e+01);
    kfwd[74] =  exp(7.189167738420e+00 + 2.5300e+00 * tlog - 6.159407473876151e+03 * rt);
    kfwd[76] =  exp(2.141641301751e+01);
    kfwd[77] =  exp(1.165268740735e+01 + 1.9000e+00 * tlog - 3.789243323389495e+03 * rt);
    kfwd[78] =  exp(2.532843602293e+01);
    kfwd[79] =  exp(2.463528884237e+01 - 4.025756518873301e+03 * rt);
    kfwd[80] =  exp(2.314806856266e+01 - 1.725036668337209e+03 * rt);
    kfwd[81] =  exp(2.302585092994e+01);
    kfwd[83] =  exp(1.228303368667e+01 + 1.5100e+00 * tlog - 1.726043107466928e+03 * rt);
    kfwd[85] =  exp(3.575150688786e+00 + 2.4000e+00 * tlog - -1.061793281852833e+03 * rt);
    kfwd[86] =  exp(2.339741448637e+01 - -2.516097824295813e+02 * rt);
    kfwd[87] =  exp(2.141641301751e+01 - 2.148747541948624e+02 * rt);
    kfwd[88] =  exp(3.506940464597e+01 - 1.479968740250797e+04 * rt);
    kfwd[89] =  exp(2.463528884237e+01);
    kfwd[90] =  exp(2.412446321861e+01);
    kfwd[91] =  exp(2.371899811050e+01);
    kfwd[92] =  exp(9.332558004700e+00 + 2.0000e+00 * tlog - 1.509658694577488e+03 * rt);
    kfwd[93] =  exp(2.412446321861e+01);
    kfwd[95] =  exp(1.093310696972e+01 + 1.6000e+00 * tlog - 2.727450041536662e+03 * rt);
    kfwd[96] =  exp(3.409871984203e+01 + -1.3400e+00 * tlog - 7.130621234054335e+02 * rt);
    kfwd[97] =  exp(1.151292546497e+01 + 1.6000e+00 * tlog - 1.570045042360588e+03 * rt);
    kfwd[98] =  exp(1.077058804022e+01 + 1.2280e+00 * tlog - 3.522536954014139e+01 * rt);
    kfwd[99] =  exp(2.463528884237e+01);
    kfwd[100] =  exp(1.504807081914e+01 + 1.1800e+00 * tlog - -2.249391454920457e+02 * rt);
    kfwd[101] =  exp(2.233270374938e+01);
    kfwd[102] =  exp(2.233270374938e+01);
    kfwd[103] =  exp(7.272398392570e+00 + 2.0000e+00 * tlog - -4.227044344816966e+02 * rt);
    kfwd[104] =  exp(8.748304912380e+00 + 2.0000e+00 * tlog - 7.548293472887440e+02 * rt);
    kfwd[105] =  exp(2.371899811050e+01);
    kfwd[106] =  exp(-1.533877077416e+01 + 4.5000e+00 * tlog - -5.032195648591626e+02 * rt);
    kfwd[107] =  exp(6.222576268071e+00 + 2.3000e+00 * tlog - 6.793464125598695e+03 * rt);
    kfwd[108] =  exp(1.042525311634e+01 + 2.0000e+00 * tlog - 7.045073908028277e+03 * rt);
    kfwd[109] =  exp(-1.454324918329e+01 + 4.0000e+00 * tlog - -1.006439129718325e+03 * rt);
    kfwd[110] =  exp(2.233270374938e+01);
    kfwd[111] =  exp(8.188689124444e+00 + 2.0000e+00 * tlog - 1.258048912147907e+03 * rt);
    kfwd[112] =  exp(8.171882006128e+00 + 2.1200e+00 * tlog - 4.378010214274715e+02 * rt);
    kfwd[113] =  exp(2.273816885749e+01 - 1.006439129718325e+03 * rt);
    kfwd[114] =  exp(1.868304500842e+01 - -8.202478907204351e+02 * rt);
    kfwd[115] =  exp(2.676352054822e+01 - 6.038634778309952e+03 * rt);
    kfwd[116] =  exp(2.371899811050e+01);
    kfwd[117] =  exp(2.072326583695e+01);
    kfwd[118] =  exp(2.435557493957e+01);
    kfwd[119] =  exp(2.573390113104e+01 - 1.187598173067624e+04 * rt);
    kfwd[120] =  exp(8.630521876723e+00 + 2.0000e+00 * tlog - 6.038634778309952e+03 * rt);
    kfwd[121] =  exp(2.478370884749e+01 - 2.898544693588777e+02 * rt);
    kfwd[122] =  exp(2.463528884237e+01);
    kfwd[123] =  exp(2.463528884237e+01);
    kfwd[124] =  exp(2.492944988092e+01);
    kfwd[125] =  exp(2.540539706407e+01 - 1.565012846711996e+03 * rt);
    kfwd[126] =  exp(2.246548486061e+01 - -3.799307714686678e+02 * rt);
    kfwd[127] =  exp(2.441214529106e+01);
    kfwd[128] =  exp(2.412446321861e+01);
    kfwd[129] =  exp(2.481761039917e+01);
    kfwd[131] =  exp(2.597028990911e+01 - 7.946843368255896e+03 * rt);
    kfwd[132] =  exp(2.527292331300e+01 - -2.591580759024687e+02 * rt);
    kfwd[133] =  exp(2.463528884237e+01);
    kfwd[134] =  exp(2.233270374938e+01 - 7.548293472887440e+02 * rt);
    kfwd[135] =  exp(6.214608098422e+00 + 2.0000e+00 * tlog - 3.638277453931746e+03 * rt);
    kfwd[136] =  exp(2.810102474517e+01 - 6.010454482677838e+03 * rt);
    kfwd[137] =  exp(2.441214529106e+01);
    kfwd[138] =  exp(7.807916628926e+00 + 2.0000e+00 * tlog - 4.161625801385275e+03 * rt);
    kfwd[140] =  exp(2.412446321861e+01);
    kfwd[141] =  exp(2.343131603805e+01 - 3.019317389154976e+02 * rt);
    kfwd[142] =  exp(2.292049041428e+01 - 3.019317389154976e+02 * rt);
    kfwd[143] =  exp(2.405547034712e+01);
    kfwd[144] =  exp(2.320817248673e+01);
    kfwd[145] =  exp(2.497176107900e+01);
    kfwd[147] =  exp(2.412446321861e+01);
    kfwd[148] =  exp(2.320817248673e+01 - -2.868351519697227e+02 * rt);
    kfwd[149] =  exp(2.349585455919e+01 - -2.868351519697227e+02 * rt);
    kfwd[150] =  exp(2.292049041428e+01);
    kfwd[151] =  exp(2.266917598600e+01);
    kfwd[152] =  exp(2.336232316656e+01);
    kfwd[153] =  exp(2.441214529106e+01 - -2.767707606725394e+02 * rt);
    kfwd[154] =  exp(2.429561147480e+01 - 1.533813233690728e+04 * rt);
    kfwd[155] =  exp(2.156051336148e+01 - 1.022290546011389e+04 * rt);
    kfwd[156] =  exp(3.198673117551e+00 + 2.4700e+00 * tlog - 2.606677345970463e+03 * rt);
    kfwd[158] =  exp(2.264605356858e+01 + 1.0000e-01 * tlog - 5.334127387507124e+03 * rt);
    kfwd[159] =  exp(2.399965556802e+01);
    kfwd[160] =  exp(1.199964782928e+00 + 2.8100e+00 * tlog - 2.948866650074693e+03 * rt);
    kfwd[161] =  exp(1.030895266064e+01 + 1.5000e+00 * tlog - 5.002002474700077e+03 * rt);
    kfwd[162] =  exp(9.210340371976e+00 + 1.5000e+00 * tlog - 5.002002474700077e+03 * rt);
    kfwd[163] =  exp(5.424950017481e+00 + 2.0000e+00 * tlog - 4.629619996704297e+03 * rt);
    kfwd[164] =  exp(8.722580021141e+00 + 1.7400e+00 * tlog - 5.258644452778250e+03 * rt);
    kfwd[165] =  exp(3.494424150302e+01 + -1.0000e+00 * tlog - 8.554732602605765e+03 * rt);
    kfwd[166] =  exp(3.286212973278e+01 + -1.0000e+00 * tlog - 8.554732602605765e+03 * rt);
    kfwd[167] =  exp(2.332224494299e+01 - 2.012878259436651e+02 * rt);
    kfwd[168] =  exp(2.361363759484e+01 - 4.528976083732464e+02 * rt);
    kfwd[169] =  exp(-3.538740847831e+01 + 7.6000e+00 * tlog - -1.776365063952844e+03 * rt);
    kfwd[170] =  exp(2.302585092994e+01 - -3.799307714686678e+02 * rt);
    kfwd[171] =  exp(1.785504688369e+01 + 9.0000e-01 * tlog - 1.002916592764311e+03 * rt);
    kfwd[172] =  exp(3.145530520705e+01 + -1.3900e+00 * tlog - 5.107678583320501e+02 * rt);
    kfwd[174] =  exp(2.054891244980e+01 - 1.949975813829255e+03 * rt);
    kfwd[175] =  exp(2.188641664675e+01 - 4.297495083897249e+02 * rt);
    kfwd[176] =  exp(2.302585092994e+01);
    kfwd[177] =  exp(2.401910270295e+01 - 1.786429455250027e+02 * rt);
    kfwd[178] =  exp(1.601273513530e+01 + 1.0000e+00 * tlog - 3.270927171584557e+03 * rt);
    kfwd[179] =  exp(2.423779190392e+01 - 1.937395324707776e+02 * rt);
    kfwd[180] =  exp(2.105973807357e+01 - 5.439803496127548e+03 * rt);
    kfwd[181] =  exp(2.409056166693e+01 - 1.164953292648962e+04 * rt);
    kfwd[182] =  exp(2.668169052998e+01 - 9.500785384540990e+03 * rt);
    kfwd[183] =  exp(2.141641301751e+01 - 1.059780403593396e+04 * rt);
    kfwd[185] =  exp(2.146995378443e+01 - -2.415453911323981e+02 * rt);
    kfwd[186] =  exp(3.229446021004e+01 + -1.4100e+00 * tlog);
    kfwd[187] =  exp(2.208424239008e+01 - -1.207726955661990e+02 * rt);
    kfwd[188] =  exp(2.560606775953e+01 - 1.811590433492985e+02 * rt);
    kfwd[189] =  exp(2.441214529106e+01);
    kfwd[190] =  exp(2.418900173975e+01 - 1.660624564035237e+02 * rt);
    kfwd[191] =  exp(2.371899811050e+01);
    kfwd[192] =  exp(1.450865773852e+01 + 1.2000e+00 * tlog);
    kfwd[193] =  exp(6.133398042997e+00 + 2.0000e+00 * tlog - 3.270927171584557e+03 * rt);
    kfwd[194] =  exp(7.154615356914e+00 + 1.5000e+00 * tlog - 5.032195648591627e+01 * rt);
    kfwd[195] =  exp(2.343131603805e+01);
    kfwd[196] =  exp(2.371899811050e+01 - 6.969590973299402e+03 * rt);
    kfwd[197] =  exp(2.379595915164e+01 + -2.3000e-01 * tlog);
    kfwd[198] =  exp(2.662316319053e+01 + -4.5000e-01 * tlog);
    kfwd[199] =  exp(2.182187812561e+01);
    kfwd[200] =  exp(2.438682748308e+01);
    kfwd[201] =  exp(2.441214529106e+01 - 1.836751411735944e+03 * rt);
    kfwd[202] =  exp(1.140756494931e+01 + 1.5000e+00 * tlog - -2.314809998352148e+02 * rt);
    kfwd[203] =  exp(1.961460321242e+01);
    kfwd[204] =  exp(2.559080028740e+01 + -1.1000e-01 * tlog - 2.506033432998630e+03 * rt);
    kfwd[205] =  exp(2.233270374938e+01);
    kfwd[206] =  exp(2.394214166181e+01);
    kfwd[207] =  exp(2.497176107900e+01);
    kfwd[208] =  exp(2.463528884237e+01);
    kfwd[209] =  exp(2.371899811050e+01);
    kfwd[210] =  exp(2.394214166181e+01);
    kfwd[211] =  exp(3.143322925535e+01 + -1.3200e+00 * tlog - 3.723824779957803e+02 * rt);
    kfwd[212] =  exp(2.394214166181e+01);
    kfwd[213] =  exp(2.061790532129e+01 + 7.2000e-01 * tlog - 3.321249128070473e+02 * rt);
    kfwd[214] =  exp(9.472704636444e+00 + 1.9000e+00 * tlog - -4.780585866162045e+02 * rt);
    kfwd[215] =  exp(2.302585092994e+01 - 6.541854343169114e+03 * rt);
    kfwd[216] =  exp(2.506707125880e+01);
    kfwd[217] =  exp(2.441214529106e+01);
    kfwd[218] =  exp(2.280270737863e+01 - 3.754017953849353e+03 * rt);
    kfwd[219] =  exp(2.253809057911e+01 - -2.214166085380316e+02 * rt);
    kfwd[220] =  exp(5.686975356340e+00 + 2.4500e+00 * tlog - 1.127211825284524e+03 * rt);
    kfwd[221] =  exp(2.388026625810e+01);
    kfwd[222] =  exp(2.471224988351e+01);
    kfwd[223] =  exp(2.163955656882e+01);
    kfwd[224] =  exp(2.371899811050e+01);
    kfwd[225] =  exp(2.141641301751e+01 - 1.006439129718325e+04 * rt);
    kfwd[226] =  exp(2.645983813443e+01 - 2.719901748063774e+04 * rt);
    kfwd[227] =  exp(3.287804518809e+01 + -1.5200e+00 * tlog - 3.723824779957803e+02 * rt);
    kfwd[228] =  exp(3.587377746164e+01 + -2.0000e+00 * tlog - 4.025756518873301e+02 * rt);
    kfwd[229] =  exp(5.990643313100e+01 + -3.3000e+00 * tlog - 6.370759691116999e+04 * rt);
    kfwd[230] =  exp(3.010620886048e+00 + 2.6400e+00 * tlog - 2.506033432998630e+03 * rt);
    kfwd[231] =  exp(1.623340817603e+00 + 2.6400e+00 * tlog - 2.506033432998630e+03 * rt);
    kfwd[232] =  exp(1.517904793196e+01 + 1.5800e+00 * tlog - 1.338564042525373e+04 * rt);
    kfwd[233] =  exp(7.003065458786e+00 + 2.0300e+00 * tlog - 6.728045582167005e+03 * rt);
    kfwd[234] =  exp(1.481604540924e+00 + 2.2600e+00 * tlog - 3.220605215098641e+03 * rt);
    kfwd[235] =  exp(-1.832581463748e+00 + 2.5600e+00 * tlog - 4.528976083732464e+03 * rt);
    kfwd[237] =  exp(2.481761039917e+01 - 2.012878259436651e+02 * rt);
    kfwd[238] =  exp(2.486640056334e+01 - 2.315816437481867e+04 * rt);
    kfwd[239] =  exp(1.495334355979e+01 + 8.8000e-01 * tlog - 1.012980984061494e+04 * rt);
    kfwd[241] =  exp(2.302585092994e+01 - 3.723824779957804e+04 * rt);
    kfwd[242] =  exp(1.842068074395e+01 - 3.270927171584557e+04 * rt);
    kfwd[243] =  exp(2.366770481611e+01);
    kfwd[244] =  exp(2.409056166693e+01);
    kfwd[245] =  exp(2.443683790365e+01);
    kfwd[246] =  exp(2.350827707918e+01);
    kfwd[247] =  exp(2.392601227988e+01);
    kfwd[248] =  exp(3.336759341341e+01 + -1.3800e+00 * tlog - 6.390888473711366e+02 * rt);
    kfwd[249] =  exp(2.639314675993e+01 + -6.9000e-01 * tlog - 3.824468692929636e+02 * rt);
    kfwd[250] =  exp(2.436085199667e+01 + -3.6000e-01 * tlog - 2.918673476183143e+02 * rt);
    kfwd[251] =  exp(3.336759341341e+01 + -1.3800e+00 * tlog - 6.390888473711366e+02 * rt);
    kfwd[252] =  exp(2.639314675993e+01 + -6.9000e-01 * tlog - 3.824468692929636e+02 * rt);
    kfwd[253] =  exp(2.436085199667e+01 + -3.6000e-01 * tlog - 2.918673476183143e+02 * rt);
    kfwd[254] =  exp(2.528761402841e+01 - 1.449272346794388e+04 * rt);
    kfwd[255] =  exp(2.072326583695e+01 - 1.094502553568679e+04 * rt);
    kfwd[256] =  exp(2.381430829030e+01);
    kfwd[257] =  exp(2.141641301751e+01);
    kfwd[258] =  exp(2.320817248673e+01);
    kfwd[259] =  exp(2.320817248673e+01);
    kfwd[260] =  exp(2.532843602293e+01);
    kfwd[261] =  exp(1.149272275765e+01 + 1.4100e+00 * tlog - 4.277366301302883e+03 * rt);
    kfwd[262] =  exp(1.191839057308e+01 + 1.5700e+00 * tlog - 2.214166085380316e+04 * rt);
    kfwd[263] =  exp(7.696212639346e+00 + 2.1100e+00 * tlog - 5.736703039394454e+03 * rt);
    kfwd[264] =  exp(1.002127058819e+01 + 1.7000e+00 * tlog - 1.912234346464818e+03 * rt);
    kfwd[265] =  exp(4.653960350158e+00 + 2.5000e+00 * tlog - 6.692820212626863e+03 * rt);
    kfwd[266] =  exp(1.040426284045e+01 + 1.5000e+00 * tlog - 1.811590433492986e+03 * rt);
    kfwd[267] =  exp(8.101677747455e+00 + 1.5000e+00 * tlog - 1.811590433492986e+03 * rt);
    kfwd[268] =  exp(3.009912064740e+01 - 4.263276153486826e+04 * rt);
    kfwd[269] =  exp(2.837295846066e+01 + -6.9000e-01 * tlog - 1.434175759848614e+03 * rt);
    kfwd[270] =  exp(1.941393251696e+01 + 1.8000e-01 * tlog - 1.066825477501425e+03 * rt);
    kfwd[271] =  exp(2.585906427400e+01 + -7.5000e-01 * tlog - 1.454304542442980e+03 * rt);
    kfwd[272] =  exp(9.903487552536e+00 + 2.0000e+00 * tlog - 1.006439129718325e+03 * rt);
    kfwd[273] =  exp(2.292049041428e+01);
    kfwd[274] =  exp(2.713672479411e+01 + -3.1000e-01 * tlog - 1.459336738091572e+02 * rt);
    kfwd[275] =  exp(2.203159865660e+01 + 1.5000e-01 * tlog - -4.528976083732464e+01 * rt);
    kfwd[276] =  exp(6.291569139558e+00 + 2.4000e+00 * tlog - 4.989421985578598e+03 * rt);
    kfwd[277] =  exp(1.081977828441e+01 + 1.6000e+00 * tlog - 4.805746844405003e+02 * rt);
    kfwd[278] =  exp(9.148464968258e+00 + 1.9400e+00 * tlog - 3.250798388990191e+03 * rt);
    kfwd[279] =  exp(2.302585092994e+01 - 7.221200755728984e+03 * rt);
    kfwd[280] =  exp(2.944909789347e+01 + -7.5200e-01 * tlog - 1.736107498764111e+02 * rt);
    kfwd[281] =  exp(2.190192083329e+01 - -3.547697932257097e+02 * rt);
    kfwd[282] =  exp(2.182187812561e+01 - 5.686381082908538e+03 * rt);
    kfwd[283] =  exp(2.424076367430e+01);
    kfwd[284] =  exp(8.809862805379e+00 + 1.8300e+00 * tlog - 1.107083042690158e+02 * rt);
    kfwd[285] =  exp(2.542010321146e+01);
    kfwd[286] =  exp(2.924045902836e+01 - 8.720795059009288e+03 * rt);
    kfwd[287] =  exp(1.589495209964e+01 + 5.0000e-01 * tlog - -8.831503363278305e+02 * rt);
    kfwd[289] =  exp(2.248112375450e+01 - 7.548293472887440e+02 * rt);
    kfwd[290] =  exp(2.159873457430e+01 - 7.548293472887440e+02 * rt);
    kfwd[291] =  exp(2.602158320349e+01 - 5.529879798237338e+03 * rt);
    kfwd[292] =  exp(1.803795512281e+01 + 2.5000e-01 * tlog - -4.705102931433171e+02 * rt);
    kfwd[293] =  exp(1.952924336347e+01 + 2.9000e-01 * tlog - 5.535415213450789e+00 * rt);
    kfwd[294] =  exp(7.198183577102e+00 + 1.6100e+00 * tlog - -1.932363129059185e+02 * rt);
    kfwd[295] =  exp(2.248799663379e+01 - 9.098209732653661e+02 * rt);
    kfwd[296] =  exp(2.248799663379e+01 - 9.098209732653661e+02 * rt);
    kfwd[297] =  exp(2.412779100870e+01 - 1.970104596423622e+04 * rt);
    kfwd[298] =  exp(1.453335035111e+01 + 1.1600e+00 * tlog - 1.210243053486286e+03 * rt);
    kfwd[299] =  exp(1.453335035111e+01 + 1.1600e+00 * tlog - 1.210243053486286e+03 * rt);
    kfwd[300] =  exp(1.696952781048e+01 + 7.3000e-01 * tlog - -5.600833756882480e+02 * rt);
    kfwd[301] =  exp(2.182520591571e+01 - 5.999886871815796e+03 * rt);
    kfwd[302] =  exp(7.908387159290e+00 + 1.7700e+00 * tlog - 2.979059823966243e+03 * rt);
    kfwd[304] =  exp(2.573390113104e+01);
    kfwd[305] =  exp(1.671142249624e+01);
    kfwd[306] =  exp(1.697251097911e+01);
    kfwd[307] =  exp(2.381430829030e+01);
    kfwd[308] =  exp(2.312116110974e+01);
    kfwd[309] =  exp(2.320817248673e+01);
    kfwd[310] =  exp(2.412779100870e+01);
    kfwd[312] =  exp(5.262690188905e+00 + 2.6800e+00 * tlog - 1.869963903016648e+03 * rt);
    kfwd[313] =  exp(7.185387015580e+00 + 2.5400e+00 * tlog - 3.399751380188503e+03 * rt);
    kfwd[314] =  exp(1.036091239958e+01 + 1.8000e+00 * tlog - 4.700070735784579e+02 * rt);
    kfwd[315] =  exp(-9.728610833625e-01 + 2.7200e+00 * tlog - 7.548293472887440e+02 * rt);
    kfwd[316] =  exp(-7.009788004547e+00 + 3.6500e+00 * tlog - 3.600032767002449e+03 * rt);
    kfwd[318] =  exp(2.529177203856e+01);
    kfwd[320] =  exp(8.308938252596e+00 + 2.1900e+00 * tlog - 4.478654127246547e+02 * rt);
    kfwd[321] =  exp(2.390547767744e+01);
    kfwd[322] =  exp(1.705418901013e+01 + 2.5500e-01 * tlog - -4.745360496621904e+02 * rt);
    kfwd[323] =  exp(2.390547767744e+01);
    kfwd[324] =  exp(2.368181531937e+01 + -3.2000e-01 * tlog);

    getFalloffRates(T, C, kfwd);

    kfwd[0] = (2.4e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 1.5e+01 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.8e+00 * C[14] + 3.6e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 8.3e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[0];
    kfwd[1] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[1];
    kfwd[32] = (1.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 0.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 1.0e+00 * C[13] + 7.5e-01 * C[14] + 1.5e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 1.5e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 0.0e+00 * C[47] + 0.0e+00 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[32];
    kfwd[38] = (0.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 0.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.0e+00 * C[14] + 0.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 6.3e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[38];
    kfwd[42] = (7.3e-01 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 3.6e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.0e+00 * C[14] + 1.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 3.8e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[42];
    kfwd[166] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 0.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 3.8e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[166];
    kfwd[186] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[186];
    kfwd[204] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[204];
    kfwd[211] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[211];
    kfwd[226] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[226];
    kfwd[229] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[229];
    kfwd[268] = (2.0e+00 * C[0] + 1.0e+00 * C[1] + 1.0e+00 * C[2] + 1.0e+00 * C[3] + 1.0e+00 * C[4] + 6.0e+00 * C[5] + 1.0e+00 * C[6] + 1.0e+00 * C[7] + 1.0e+00 * C[8] + 1.0e+00 * C[9] + 1.0e+00 * C[10] + 1.0e+00 * C[11] + 1.0e+00 * C[12] + 2.0e+00 * C[13] + 1.5e+00 * C[14] + 2.0e+00 * C[15] + 1.0e+00 * C[16] + 1.0e+00 * C[17] + 1.0e+00 * C[18] + 1.0e+00 * C[19] + 1.0e+00 * C[20] + 1.0e+00 * C[21] + 1.0e+00 * C[22] + 1.0e+00 * C[23] + 1.0e+00 * C[24] + 1.0e+00 * C[25] + 3.0e+00 * C[26] + 1.0e+00 * C[27] + 1.0e+00 * C[28] + 1.0e+00 * C[29] + 1.0e+00 * C[30] + 1.0e+00 * C[31] + 1.0e+00 * C[32] + 1.0e+00 * C[33] + 1.0e+00 * C[34] + 1.0e+00 * C[35] + 1.0e+00 * C[36] + 1.0e+00 * C[37] + 1.0e+00 * C[38] + 1.0e+00 * C[39] + 1.0e+00 * C[40] + 1.0e+00 * C[41] + 1.0e+00 * C[42] + 1.0e+00 * C[43] + 1.0e+00 * C[44] + 1.0e+00 * C[45] + 1.0e+00 * C[46] + 1.0e+00 * C[47] + 7.0e-01 * C[48] + 1.0e+00 * C[49] + 1.0e+00 * C[50] + 1.0e+00 * C[51] + 1.0e+00 * C[52]) * kfwd[268];

    for(int i = 0; i < ii; ++i) { krev[i] = kfwd[i] * keqs[i]; }

  }

  template <class Type>
  void updateSpeciesSourceTerm(double& p, double& h, double& Told,
			       vector<Type>& Y,vector<Type>& FY) {


    Type           rho;
    Type           W;
    Type           T;
    vector<Type>   C(kk,    0.0);
    vector<Type>   kfwd(ii, 0.0);
    vector<Type>   krev(ii, 0.0);
    vector<Type>   Rfwd(ii, 0.0);
    vector<Type>   Rrev(ii, 0.0);
    vector<Type>   Rnet(ii, 0.0);
    vector<Type>   omega(kk,0.0);
    vector<double> mw = getMolecularWeights();

    mech::getTemperature(h, Told, Y, T);

    W   = 0.0;
    for(int k = 0; k < kk; ++k) { W += Y[k] / mw[k]; }
    W   = 1.0/W;
    rho = (p * W)/(GasConstant * T);
    for(int k = 0; k < kk; ++k) { C[k] = rho * Y[k] / mw[k]; }
    mech::updateRateConstants(p, T, C, kfwd, krev);

    Rfwd[0] = kfwd[0] * C[2] * C[2];
    Rfwd[1] = kfwd[1] * C[1] * C[2];
    Rfwd[2] = kfwd[2] * C[0] * C[2];
    Rfwd[3] = kfwd[3] * C[6] * C[2];
    Rfwd[4] = kfwd[4] * C[7] * C[2];
    Rfwd[5] = kfwd[5] * C[9] * C[2];
    Rfwd[6] = kfwd[6] * C[10] * C[2];
    Rfwd[7] = kfwd[7] * C[11] * C[2];
    Rfwd[8] = kfwd[8] * C[11] * C[2];
    Rfwd[9] = kfwd[9] * C[12] * C[2];
    Rfwd[10] = kfwd[10] * C[13] * C[2];
    Rfwd[11] = kfwd[11] * C[14] * C[2];
    Rfwd[12] = kfwd[12] * C[16] * C[2];
    Rfwd[13] = kfwd[13] * C[16] * C[2];
    Rfwd[14] = kfwd[14] * C[17] * C[2];
    Rfwd[15] = kfwd[15] * C[18] * C[2];
    Rfwd[16] = kfwd[16] * C[19] * C[2];
    Rfwd[17] = kfwd[17] * C[20] * C[2];
    Rfwd[18] = kfwd[18] * C[20] * C[2];
    Rfwd[19] = kfwd[19] * C[21] * C[2];
    Rfwd[20] = kfwd[20] * C[22] * C[2];
    Rfwd[21] = kfwd[21] * C[22] * C[2];
    Rfwd[22] = kfwd[22] * C[22] * C[2];
    Rfwd[23] = kfwd[23] * C[23] * C[2];
    Rfwd[24] = kfwd[24] * C[24] * C[2];
    Rfwd[25] = kfwd[25] * C[25] * C[2];
    Rfwd[26] = kfwd[26] * C[26] * C[2];
    Rfwd[27] = kfwd[27] * C[27] * C[2];
    Rfwd[28] = kfwd[28] * C[28] * C[2];
    Rfwd[29] = kfwd[29] * C[28] * C[2];
    Rfwd[30] = kfwd[30] * C[14] * C[3];
    Rfwd[31] = kfwd[31] * C[17] * C[3];
    Rfwd[32] = kfwd[32] * C[1] * C[3];
    Rfwd[33] = kfwd[33] * C[1] * C[3] * C[3];
    Rfwd[34] = kfwd[34] * C[1] * C[5] * C[3];
    Rfwd[35] = kfwd[35] * C[1] * C[47] * C[3];
    Rfwd[36] = kfwd[36] * C[1] * C[48] * C[3];
    Rfwd[37] = kfwd[37] * C[1] * C[3];
    Rfwd[38] = kfwd[38] * C[1] * C[1];
    Rfwd[39] = kfwd[39] * C[0] * C[1] * C[1];
    Rfwd[40] = kfwd[40] * C[1] * C[1] * C[5];
    Rfwd[41] = kfwd[41] * C[1] * C[1] * C[15];
    Rfwd[42] = kfwd[42] * C[1] * C[4];
    Rfwd[43] = kfwd[43] * C[1] * C[6];
    Rfwd[44] = kfwd[44] * C[1] * C[6];
    Rfwd[45] = kfwd[45] * C[1] * C[6];
    Rfwd[46] = kfwd[46] * C[1] * C[7];
    Rfwd[47] = kfwd[47] * C[1] * C[7];
    Rfwd[48] = kfwd[48] * C[1] * C[9];
    Rfwd[49] = kfwd[49] * C[1] * C[10];
    Rfwd[50] = kfwd[50] * C[1] * C[11];
    Rfwd[51] = kfwd[51] * C[1] * C[12];
    Rfwd[52] = kfwd[52] * C[1] * C[13];
    Rfwd[53] = kfwd[53] * C[1] * C[16];
    Rfwd[54] = kfwd[54] * C[1] * C[16];
    Rfwd[55] = kfwd[55] * C[17] * C[1];
    Rfwd[56] = kfwd[56] * C[17] * C[1];
    Rfwd[57] = kfwd[57] * C[17] * C[1];
    Rfwd[58] = kfwd[58] * C[1] * C[18];
    Rfwd[59] = kfwd[59] * C[1] * C[18];
    Rfwd[60] = kfwd[60] * C[1] * C[18];
    Rfwd[61] = kfwd[61] * C[1] * C[18];
    Rfwd[62] = kfwd[62] * C[1] * C[19];
    Rfwd[63] = kfwd[63] * C[1] * C[19];
    Rfwd[64] = kfwd[64] * C[1] * C[19];
    Rfwd[65] = kfwd[65] * C[1] * C[19];
    Rfwd[66] = kfwd[66] * C[1] * C[19];
    Rfwd[67] = kfwd[67] * C[20] * C[1];
    Rfwd[68] = kfwd[68] * C[20] * C[1];
    Rfwd[69] = kfwd[69] * C[1] * C[21];
    Rfwd[70] = kfwd[70] * C[1] * C[22];
    Rfwd[71] = kfwd[71] * C[1] * C[23];
    Rfwd[72] = kfwd[72] * C[1] * C[23];
    Rfwd[73] = kfwd[73] * C[1] * C[24];
    Rfwd[74] = kfwd[74] * C[1] * C[24];
    Rfwd[75] = kfwd[75] * C[1] * C[25];
    Rfwd[76] = kfwd[76] * C[1] * C[25];
    Rfwd[77] = kfwd[77] * C[1] * C[26];
    Rfwd[78] = kfwd[78] * C[1] * C[27];
    Rfwd[79] = kfwd[79] * C[1] * C[28];
    Rfwd[80] = kfwd[80] * C[1] * C[28];
    Rfwd[81] = kfwd[81] * C[1] * C[29];
    Rfwd[82] = kfwd[82] * C[0] * C[14];
    Rfwd[83] = kfwd[83] * C[0] * C[4];
    Rfwd[84] = kfwd[84] * C[4] * C[4];
    Rfwd[85] = kfwd[85] * C[4] * C[4];
    Rfwd[86] = kfwd[86] * C[6] * C[4];
    Rfwd[87] = kfwd[87] * C[7] * C[4];
    Rfwd[88] = kfwd[88] * C[7] * C[4];
    Rfwd[89] = kfwd[89] * C[8] * C[4];
    Rfwd[90] = kfwd[90] * C[9] * C[4];
    Rfwd[91] = kfwd[91] * C[10] * C[4];
    Rfwd[92] = kfwd[92] * C[10] * C[4];
    Rfwd[93] = kfwd[93] * C[11] * C[4];
    Rfwd[94] = kfwd[94] * C[12] * C[4];
    Rfwd[95] = kfwd[95] * C[12] * C[4];
    Rfwd[96] = kfwd[96] * C[12] * C[4];
    Rfwd[97] = kfwd[97] * C[13] * C[4];
    Rfwd[98] = kfwd[98] * C[14] * C[4];
    Rfwd[99] = kfwd[99] * C[16] * C[4];
    Rfwd[100] = kfwd[100] * C[17] * C[4];
    Rfwd[101] = kfwd[101] * C[18] * C[4];
    Rfwd[102] = kfwd[102] * C[19] * C[4];
    Rfwd[103] = kfwd[103] * C[20] * C[4];
    Rfwd[104] = kfwd[104] * C[20] * C[4];
    Rfwd[105] = kfwd[105] * C[21] * C[4];
    Rfwd[106] = kfwd[106] * C[22] * C[4];
    Rfwd[107] = kfwd[107] * C[22] * C[4];
    Rfwd[108] = kfwd[108] * C[22] * C[4];
    Rfwd[109] = kfwd[109] * C[22] * C[4];
    Rfwd[110] = kfwd[110] * C[23] * C[4];
    Rfwd[111] = kfwd[111] * C[24] * C[4];
    Rfwd[112] = kfwd[112] * C[26] * C[4];
    Rfwd[113] = kfwd[113] * C[28] * C[4];
    Rfwd[114] = kfwd[114] * C[6] * C[6];
    Rfwd[115] = kfwd[115] * C[6] * C[6];
    Rfwd[116] = kfwd[116] * C[10] * C[6];
    Rfwd[117] = kfwd[117] * C[12] * C[6];
    Rfwd[118] = kfwd[118] * C[12] * C[6];
    Rfwd[119] = kfwd[119] * C[14] * C[6];
    Rfwd[120] = kfwd[120] * C[17] * C[6];
    Rfwd[121] = kfwd[121] * C[8] * C[3];
    Rfwd[122] = kfwd[122] * C[8] * C[10];
    Rfwd[123] = kfwd[123] * C[8] * C[12];
    Rfwd[124] = kfwd[124] * C[9] * C[3];
    Rfwd[125] = kfwd[125] * C[0] * C[9];
    Rfwd[126] = kfwd[126] * C[5] * C[9];
    Rfwd[127] = kfwd[127] * C[10] * C[9];
    Rfwd[128] = kfwd[128] * C[12] * C[9];
    Rfwd[129] = kfwd[129] * C[9] * C[13];
    Rfwd[130] = kfwd[130] * C[9] * C[14];
    Rfwd[131] = kfwd[131] * C[9] * C[15];
    Rfwd[132] = kfwd[132] * C[17] * C[9];
    Rfwd[133] = kfwd[133] * C[9] * C[27];
    Rfwd[134] = kfwd[134] * C[10] * C[3];
    Rfwd[135] = kfwd[135] * C[0] * C[10];
    Rfwd[136] = kfwd[136] * C[10] * C[10];
    Rfwd[137] = kfwd[137] * C[10] * C[12];
    Rfwd[138] = kfwd[138] * C[10] * C[13];
    Rfwd[139] = kfwd[139] * C[10] * C[14];
    Rfwd[140] = kfwd[140] * C[10] * C[27];
    Rfwd[141] = kfwd[141] * C[11] * C[47];
    Rfwd[142] = kfwd[142] * C[11] * C[48];
    Rfwd[143] = kfwd[143] * C[11] * C[3];
    Rfwd[144] = kfwd[144] * C[11] * C[3];
    Rfwd[145] = kfwd[145] * C[0] * C[11];
    Rfwd[146] = kfwd[146] * C[11] * C[5];
    Rfwd[147] = kfwd[147] * C[11] * C[5];
    Rfwd[148] = kfwd[148] * C[11] * C[12];
    Rfwd[149] = kfwd[149] * C[11] * C[13];
    Rfwd[150] = kfwd[150] * C[11] * C[14];
    Rfwd[151] = kfwd[151] * C[11] * C[15];
    Rfwd[152] = kfwd[152] * C[11] * C[15];
    Rfwd[153] = kfwd[153] * C[11] * C[26];
    Rfwd[154] = kfwd[154] * C[12] * C[3];
    Rfwd[155] = kfwd[155] * C[12] * C[3];
    Rfwd[156] = kfwd[156] * C[12] * C[7];
    Rfwd[157] = kfwd[157] * C[12] * C[12];
    Rfwd[158] = kfwd[158] * C[12] * C[12];
    Rfwd[159] = kfwd[159] * C[12] * C[16];
    Rfwd[160] = kfwd[160] * C[17] * C[12];
    Rfwd[161] = kfwd[161] * C[20] * C[12];
    Rfwd[162] = kfwd[162] * C[20] * C[12];
    Rfwd[163] = kfwd[163] * C[12] * C[24];
    Rfwd[164] = kfwd[164] * C[26] * C[12];
    Rfwd[165] = kfwd[165] * C[5] * C[16];
    Rfwd[166] = kfwd[166] * C[16];
    Rfwd[167] = kfwd[167] * C[16] * C[3];
    Rfwd[168] = kfwd[168] * C[18] * C[3];
    Rfwd[169] = kfwd[169] * C[19] * C[3];
    Rfwd[170] = kfwd[170] * C[21] * C[3];
    Rfwd[171] = kfwd[171] * C[0] * C[21];
    Rfwd[172] = kfwd[172] * C[23] * C[3];
    Rfwd[173] = kfwd[173] * C[24];
    Rfwd[174] = kfwd[174] * C[25] * C[3];
    Rfwd[175] = kfwd[175] * C[27] * C[3];
    Rfwd[176] = kfwd[176] * C[27] * C[27];
    Rfwd[177] = kfwd[177] * C[35] * C[30];
    Rfwd[178] = kfwd[178] * C[3] * C[30];
    Rfwd[179] = kfwd[179] * C[4] * C[30];
    Rfwd[180] = kfwd[180] * C[37] * C[2];
    Rfwd[181] = kfwd[181] * C[37] * C[2];
    Rfwd[182] = kfwd[182] * C[1] * C[37];
    Rfwd[183] = kfwd[183] * C[37] * C[4];
    Rfwd[184] = kfwd[184] * C[37];
    Rfwd[185] = kfwd[185] * C[6] * C[35];
    Rfwd[186] = kfwd[186] * C[2] * C[35];
    Rfwd[187] = kfwd[187] * C[2] * C[36];
    Rfwd[188] = kfwd[188] * C[1] * C[36];
    Rfwd[189] = kfwd[189] * C[31] * C[2];
    Rfwd[190] = kfwd[190] * C[31] * C[1];
    Rfwd[191] = kfwd[191] * C[31] * C[4];
    Rfwd[192] = kfwd[192] * C[31] * C[4];
    Rfwd[193] = kfwd[193] * C[31] * C[3];
    Rfwd[194] = kfwd[194] * C[31] * C[3];
    Rfwd[195] = kfwd[195] * C[31] * C[30];
    Rfwd[196] = kfwd[196] * C[31] * C[5];
    Rfwd[197] = kfwd[197] * C[31] * C[35];
    Rfwd[198] = kfwd[198] * C[31] * C[35];
    Rfwd[199] = kfwd[199] * C[2] * C[32];
    Rfwd[200] = kfwd[200] * C[2] * C[32];
    Rfwd[201] = kfwd[201] * C[1] * C[32];
    Rfwd[202] = kfwd[202] * C[4] * C[32];
    Rfwd[203] = kfwd[203] * C[34];
    Rfwd[204] = kfwd[204] * C[34];
    Rfwd[205] = kfwd[205] * C[3] * C[34];
    Rfwd[206] = kfwd[206] * C[2] * C[34];
    Rfwd[207] = kfwd[207] * C[2] * C[34];
    Rfwd[208] = kfwd[208] * C[1] * C[34];
    Rfwd[209] = kfwd[209] * C[4] * C[34];
    Rfwd[210] = kfwd[210] * C[12] * C[34];
    Rfwd[211] = kfwd[211] * C[1] * C[35];
    Rfwd[212] = kfwd[212] * C[2] * C[38];
    Rfwd[213] = kfwd[213] * C[1] * C[38];
    Rfwd[214] = kfwd[214] * C[38] * C[4];
    Rfwd[215] = kfwd[215] * C[3] * C[38];
    Rfwd[216] = kfwd[216] * C[39] * C[2];
    Rfwd[217] = kfwd[217] * C[39] * C[4];
    Rfwd[218] = kfwd[218] * C[5] * C[39];
    Rfwd[219] = kfwd[219] * C[39] * C[3];
    Rfwd[220] = kfwd[220] * C[0] * C[39];
    Rfwd[221] = kfwd[221] * C[2] * C[46];
    Rfwd[222] = kfwd[222] * C[1] * C[46];
    Rfwd[223] = kfwd[223] * C[4] * C[46];
    Rfwd[224] = kfwd[224] * C[30] * C[46];
    Rfwd[225] = kfwd[225] * C[3] * C[46];
    Rfwd[226] = kfwd[226] * C[46];
    Rfwd[227] = kfwd[227] * C[35] * C[46];
    Rfwd[228] = kfwd[228] * C[35] * C[46];
    Rfwd[229] = kfwd[229] * C[40];
    Rfwd[230] = kfwd[230] * C[40] * C[2];
    Rfwd[231] = kfwd[231] * C[40] * C[2];
    Rfwd[232] = kfwd[232] * C[40] * C[2];
    Rfwd[233] = kfwd[233] * C[40] * C[4];
    Rfwd[234] = kfwd[234] * C[40] * C[4];
    Rfwd[235] = kfwd[235] * C[40] * C[4];
    Rfwd[236] = kfwd[236] * C[1] * C[40];
    Rfwd[237] = kfwd[237] * C[41] * C[30];
    Rfwd[238] = kfwd[238] * C[8] * C[47];
    Rfwd[239] = kfwd[239] * C[47] * C[9];
    Rfwd[240] = kfwd[240] * C[47] * C[9];
    Rfwd[241] = kfwd[241] * C[10] * C[47];
    Rfwd[242] = kfwd[242] * C[11] * C[47];
    Rfwd[243] = kfwd[243] * C[8] * C[35];
    Rfwd[244] = kfwd[244] * C[8] * C[35];
    Rfwd[245] = kfwd[245] * C[9] * C[35];
    Rfwd[246] = kfwd[246] * C[9] * C[35];
    Rfwd[247] = kfwd[247] * C[9] * C[35];
    Rfwd[248] = kfwd[248] * C[10] * C[35];
    Rfwd[249] = kfwd[249] * C[10] * C[35];
    Rfwd[250] = kfwd[250] * C[10] * C[35];
    Rfwd[251] = kfwd[251] * C[11] * C[35];
    Rfwd[252] = kfwd[252] * C[11] * C[35];
    Rfwd[253] = kfwd[253] * C[11] * C[35];
    Rfwd[254] = kfwd[254] * C[12] * C[35];
    Rfwd[255] = kfwd[255] * C[12] * C[35];
    Rfwd[256] = kfwd[256] * C[2] * C[42];
    Rfwd[257] = kfwd[257] * C[2] * C[42];
    Rfwd[258] = kfwd[258] * C[3] * C[42];
    Rfwd[259] = kfwd[259] * C[4] * C[42];
    Rfwd[260] = kfwd[260] * C[1] * C[42];
    Rfwd[261] = kfwd[261] * C[45] * C[2];
    Rfwd[262] = kfwd[262] * C[45] * C[2];
    Rfwd[263] = kfwd[263] * C[45] * C[2];
    Rfwd[264] = kfwd[264] * C[45] * C[1];
    Rfwd[265] = kfwd[265] * C[45] * C[1];
    Rfwd[266] = kfwd[266] * C[45] * C[4];
    Rfwd[267] = kfwd[267] * C[45] * C[4];
    Rfwd[268] = kfwd[268] * C[45];
    Rfwd[269] = kfwd[269] * C[1] * C[43];
    Rfwd[270] = kfwd[270] * C[1] * C[43];
    Rfwd[271] = kfwd[271] * C[1] * C[43];
    Rfwd[272] = kfwd[272] * C[44] * C[1];
    Rfwd[273] = kfwd[273] * C[27] * C[35];
    Rfwd[274] = kfwd[274] * C[12] * C[30];
    Rfwd[275] = kfwd[275] * C[12] * C[30];
    Rfwd[276] = kfwd[276] * C[1] * C[33];
    Rfwd[277] = kfwd[277] * C[33] * C[4];
    Rfwd[278] = kfwd[278] * C[2] * C[33];
    Rfwd[279] = kfwd[279] * C[31] * C[15];
    Rfwd[280] = kfwd[280] * C[39] * C[36];
    Rfwd[281] = kfwd[281] * C[36] * C[46];
    Rfwd[282] = kfwd[282] * C[15] * C[30];
    Rfwd[283] = kfwd[283] * C[12] * C[2];
    Rfwd[284] = kfwd[284] * C[24] * C[2];
    Rfwd[285] = kfwd[285] * C[25] * C[2];
    Rfwd[286] = kfwd[286] * C[6] * C[4];
    Rfwd[287] = kfwd[287] * C[12] * C[4];
    Rfwd[288] = kfwd[288] * C[0] * C[9];
    Rfwd[289] = kfwd[289] * C[10] * C[3];
    Rfwd[290] = kfwd[290] * C[10] * C[3];
    Rfwd[291] = kfwd[291] * C[10] * C[10];
    Rfwd[292] = kfwd[292] * C[11] * C[5];
    Rfwd[293] = kfwd[293] * C[23] * C[3];
    Rfwd[294] = kfwd[294] * C[23] * C[3];
    Rfwd[295] = kfwd[295] * C[52] * C[2];
    Rfwd[296] = kfwd[296] * C[52] * C[2];
    Rfwd[297] = kfwd[297] * C[52] * C[3];
    Rfwd[298] = kfwd[298] * C[1] * C[52];
    Rfwd[299] = kfwd[299] * C[1] * C[52];
    Rfwd[300] = kfwd[300] * C[52] * C[4];
    Rfwd[301] = kfwd[301] * C[52] * C[6];
    Rfwd[302] = kfwd[302] * C[52] * C[12];
    Rfwd[303] = kfwd[303] * C[1] * C[28];
    Rfwd[304] = kfwd[304] * C[51] * C[2];
    Rfwd[305] = kfwd[305] * C[51] * C[3];
    Rfwd[306] = kfwd[306] * C[51] * C[3];
    Rfwd[307] = kfwd[307] * C[1] * C[51];
    Rfwd[308] = kfwd[308] * C[1] * C[51];
    Rfwd[309] = kfwd[309] * C[51] * C[4];
    Rfwd[310] = kfwd[310] * C[51] * C[4];
    Rfwd[311] = kfwd[311] * C[25] * C[12];
    Rfwd[312] = kfwd[312] * C[50] * C[2];
    Rfwd[313] = kfwd[313] * C[1] * C[50];
    Rfwd[314] = kfwd[314] * C[50] * C[4];
    Rfwd[315] = kfwd[315] * C[49] * C[7];
    Rfwd[316] = kfwd[316] * C[12] * C[50];
    Rfwd[317] = kfwd[317] * C[12] * C[24];
    Rfwd[318] = kfwd[318] * C[49] * C[2];
    Rfwd[319] = kfwd[319] * C[1] * C[49];
    Rfwd[320] = kfwd[320] * C[1] * C[49];
    Rfwd[321] = kfwd[321] * C[49] * C[4];
    Rfwd[322] = kfwd[322] * C[49] * C[6];
    Rfwd[323] = kfwd[323] * C[49] * C[6];
    Rfwd[324] = kfwd[324] * C[49] * C[12];

    Rrev[0] = krev[0] * C[3];
    Rrev[1] = krev[1] * C[4];
    Rrev[2] = krev[2] * C[1] * C[4];
    Rrev[3] = krev[3] * C[3] * C[4];
    Rrev[4] = krev[4] * C[6] * C[4];
    Rrev[5] = krev[5] * C[1] * C[14];
    Rrev[6] = krev[6] * C[1] * C[16];
    Rrev[7] = krev[7] * C[0] * C[14];
    Rrev[8] = krev[8] * C[1] * C[16];
    Rrev[9] = krev[9] * C[17] * C[1];
    Rrev[10] = krev[10] * C[12] * C[4];
    Rrev[11] = krev[11] * C[15];
    Rrev[12] = krev[12] * C[14] * C[4];
    Rrev[13] = krev[13] * C[1] * C[15];
    Rrev[14] = krev[14] * C[16] * C[4];
    Rrev[15] = krev[15] * C[17] * C[4];
    Rrev[16] = krev[16] * C[17] * C[4];
    Rrev[17] = krev[17] * C[18] * C[4];
    Rrev[18] = krev[18] * C[19] * C[4];
    Rrev[19] = krev[19] * C[9] * C[14];
    Rrev[20] = krev[20] * C[1] * C[27];
    Rrev[21] = krev[21] * C[21] * C[4];
    Rrev[22] = krev[22] * C[10] * C[14];
    Rrev[23] = krev[23] * C[1] * C[28];
    Rrev[24] = krev[24] * C[12] * C[16];
    Rrev[25] = krev[25] * C[17] * C[12];
    Rrev[26] = krev[26] * C[25] * C[4];
    Rrev[27] = krev[27] * C[1] * C[14] * C[14];
    Rrev[28] = krev[28] * C[27] * C[4];
    Rrev[29] = krev[29] * C[10] * C[15];
    Rrev[30] = krev[30] * C[15] * C[2];
    Rrev[31] = krev[31] * C[6] * C[16];
    Rrev[32] = krev[32] * C[6];
    Rrev[33] = krev[33] * C[6] * C[3];
    Rrev[34] = krev[34] * C[5] * C[6];
    Rrev[35] = krev[35] * C[47] * C[6];
    Rrev[36] = krev[36] * C[48] * C[6];
    Rrev[37] = krev[37] * C[2] * C[4];
    Rrev[38] = krev[38] * C[0];
    Rrev[39] = krev[39] * C[0] * C[0];
    Rrev[40] = krev[40] * C[0] * C[5];
    Rrev[41] = krev[41] * C[0] * C[15];
    Rrev[42] = krev[42] * C[5];
    Rrev[43] = krev[43] * C[5] * C[2];
    Rrev[44] = krev[44] * C[0] * C[3];
    Rrev[45] = krev[45] * C[4] * C[4];
    Rrev[46] = krev[46] * C[0] * C[6];
    Rrev[47] = krev[47] * C[5] * C[4];
    Rrev[48] = krev[48] * C[0] * C[8];
    Rrev[49] = krev[49] * C[12];
    Rrev[50] = krev[50] * C[0] * C[9];
    Rrev[51] = krev[51] * C[13];
    Rrev[52] = krev[52] * C[0] * C[12];
    Rrev[53] = krev[53] * C[17];
    Rrev[54] = krev[54] * C[0] * C[14];
    Rrev[55] = krev[55] * C[18];
    Rrev[56] = krev[56] * C[19];
    Rrev[57] = krev[57] * C[0] * C[16];
    Rrev[58] = krev[58] * C[20];
    Rrev[59] = krev[59] * C[0] * C[17];
    Rrev[60] = krev[60] * C[12] * C[4];
    Rrev[61] = krev[61] * C[11] * C[5];
    Rrev[62] = krev[62] * C[20];
    Rrev[63] = krev[63] * C[1] * C[18];
    Rrev[64] = krev[64] * C[0] * C[17];
    Rrev[65] = krev[65] * C[12] * C[4];
    Rrev[66] = krev[66] * C[11] * C[5];
    Rrev[67] = krev[67] * C[0] * C[18];
    Rrev[68] = krev[68] * C[0] * C[19];
    Rrev[69] = krev[69] * C[22];
    Rrev[70] = krev[70] * C[23];
    Rrev[71] = krev[71] * C[24];
    Rrev[72] = krev[72] * C[0] * C[22];
    Rrev[73] = krev[73] * C[25];
    Rrev[74] = krev[74] * C[0] * C[23];
    Rrev[75] = krev[75] * C[26];
    Rrev[76] = krev[76] * C[0] * C[24];
    Rrev[77] = krev[77] * C[0] * C[25];
    Rrev[78] = krev[78] * C[11] * C[14];
    Rrev[79] = krev[79] * C[0] * C[27];
    Rrev[80] = krev[80] * C[12] * C[14];
    Rrev[81] = krev[81] * C[1] * C[28];
    Rrev[82] = krev[82] * C[17];
    Rrev[83] = krev[83] * C[1] * C[5];
    Rrev[84] = krev[84] * C[7];
    Rrev[85] = krev[85] * C[5] * C[2];
    Rrev[86] = krev[86] * C[5] * C[3];
    Rrev[87] = krev[87] * C[5] * C[6];
    Rrev[88] = krev[88] * C[5] * C[6];
    Rrev[89] = krev[89] * C[1] * C[14];
    Rrev[90] = krev[90] * C[1] * C[16];
    Rrev[91] = krev[91] * C[17] * C[1];
    Rrev[92] = krev[92] * C[5] * C[9];
    Rrev[93] = krev[93] * C[17] * C[1];
    Rrev[94] = krev[94] * C[20];
    Rrev[95] = krev[95] * C[10] * C[5];
    Rrev[96] = krev[96] * C[11] * C[5];
    Rrev[97] = krev[97] * C[5] * C[12];
    Rrev[98] = krev[98] * C[1] * C[15];
    Rrev[99] = krev[99] * C[5] * C[14];
    Rrev[100] = krev[100] * C[5] * C[16];
    Rrev[101] = krev[101] * C[17] * C[5];
    Rrev[102] = krev[102] * C[17] * C[5];
    Rrev[103] = krev[103] * C[18] * C[5];
    Rrev[104] = krev[104] * C[5] * C[19];
    Rrev[105] = krev[105] * C[1] * C[27];
    Rrev[106] = krev[106] * C[1] * C[28];
    Rrev[107] = krev[107] * C[1] * C[29];
    Rrev[108] = krev[108] * C[21] * C[5];
    Rrev[109] = krev[109] * C[12] * C[14];
    Rrev[110] = krev[110] * C[5] * C[22];
    Rrev[111] = krev[111] * C[5] * C[23];
    Rrev[112] = krev[112] * C[25] * C[5];
    Rrev[113] = krev[113] * C[5] * C[27];
    Rrev[114] = krev[114] * C[3] * C[7];
    Rrev[115] = krev[115] * C[3] * C[7];
    Rrev[116] = krev[116] * C[17] * C[4];
    Rrev[117] = krev[117] * C[13] * C[3];
    Rrev[118] = krev[118] * C[19] * C[4];
    Rrev[119] = krev[119] * C[15] * C[4];
    Rrev[120] = krev[120] * C[16] * C[7];
    Rrev[121] = krev[121] * C[14] * C[2];
    Rrev[122] = krev[122] * C[1] * C[21];
    Rrev[123] = krev[123] * C[1] * C[22];
    Rrev[124] = krev[124] * C[16] * C[2];
    Rrev[125] = krev[125] * C[1] * C[10];
    Rrev[126] = krev[126] * C[17] * C[1];
    Rrev[127] = krev[127] * C[1] * C[22];
    Rrev[128] = krev[128] * C[1] * C[23];
    Rrev[129] = krev[129] * C[1] * C[24];
    Rrev[130] = krev[130] * C[27];
    Rrev[131] = krev[131] * C[14] * C[16];
    Rrev[132] = krev[132] * C[1] * C[28];
    Rrev[133] = krev[133] * C[14] * C[22];
    Rrev[135] = krev[135] * C[1] * C[12];
    Rrev[136] = krev[136] * C[0] * C[22];
    Rrev[137] = krev[137] * C[1] * C[24];
    Rrev[138] = krev[138] * C[12] * C[12];
    Rrev[139] = krev[139] * C[28];
    Rrev[140] = krev[140] * C[14] * C[23];
    Rrev[141] = krev[141] * C[10] * C[47];
    Rrev[142] = krev[142] * C[10] * C[48];
    Rrev[143] = krev[143] * C[1] * C[14] * C[4];
    Rrev[144] = krev[144] * C[5] * C[14];
    Rrev[145] = krev[145] * C[1] * C[12];
    Rrev[146] = krev[146] * C[20];
    Rrev[147] = krev[147] * C[10] * C[5];
    Rrev[148] = krev[148] * C[1] * C[24];
    Rrev[149] = krev[149] * C[12] * C[12];
    Rrev[150] = krev[150] * C[10] * C[14];
    Rrev[151] = krev[151] * C[10] * C[15];
    Rrev[152] = krev[152] * C[17] * C[14];
    Rrev[153] = krev[153] * C[25] * C[12];
    Rrev[154] = krev[154] * C[19] * C[2];
    Rrev[155] = krev[155] * C[17] * C[4];
    Rrev[156] = krev[156] * C[13] * C[6];
    Rrev[157] = krev[157] * C[26];
    Rrev[158] = krev[158] * C[1] * C[25];
    Rrev[159] = krev[159] * C[14] * C[13];
    Rrev[160] = krev[160] * C[13] * C[16];
    Rrev[161] = krev[161] * C[18] * C[13];
    Rrev[162] = krev[162] * C[19] * C[13];
    Rrev[163] = krev[163] * C[13] * C[23];
    Rrev[164] = krev[164] * C[25] * C[13];
    Rrev[165] = krev[165] * C[1] * C[5] * C[14];
    Rrev[166] = krev[166] * C[1] * C[14];
    Rrev[167] = krev[167] * C[14] * C[6];
    Rrev[168] = krev[168] * C[17] * C[6];
    Rrev[169] = krev[169] * C[17] * C[6];
    Rrev[170] = krev[170] * C[14] * C[16];
    Rrev[171] = krev[171] * C[1] * C[22];
    Rrev[172] = krev[172] * C[17] * C[16];
    Rrev[173] = krev[173] * C[0] * C[22];
    Rrev[174] = krev[174] * C[24] * C[6];
    Rrev[175] = krev[175] * C[14] * C[14] * C[4];
    Rrev[176] = krev[176] * C[14] * C[14] * C[22];
    Rrev[177] = krev[177] * C[47] * C[2];
    Rrev[178] = krev[178] * C[2] * C[35];
    Rrev[179] = krev[179] * C[1] * C[35];
    Rrev[180] = krev[180] * C[47] * C[3];
    Rrev[181] = krev[181] * C[35] * C[35];
    Rrev[182] = krev[182] * C[47] * C[4];
    Rrev[183] = krev[183] * C[47] * C[6];
    Rrev[184] = krev[184] * C[47] * C[2];
    Rrev[185] = krev[185] * C[36] * C[4];
    Rrev[186] = krev[186] * C[36];
    Rrev[187] = krev[187] * C[3] * C[35];
    Rrev[188] = krev[188] * C[4] * C[35];
    Rrev[189] = krev[189] * C[1] * C[35];
    Rrev[190] = krev[190] * C[0] * C[30];
    Rrev[191] = krev[191] * C[1] * C[38];
    Rrev[192] = krev[192] * C[5] * C[30];
    Rrev[193] = krev[193] * C[2] * C[38];
    Rrev[194] = krev[194] * C[4] * C[35];
    Rrev[195] = krev[195] * C[1] * C[47];
    Rrev[196] = krev[196] * C[0] * C[38];
    Rrev[197] = krev[197] * C[47] * C[4];
    Rrev[198] = krev[198] * C[1] * C[37];
    Rrev[199] = krev[199] * C[31] * C[4];
    Rrev[200] = krev[200] * C[1] * C[38];
    Rrev[201] = krev[201] * C[31] * C[0];
    Rrev[202] = krev[202] * C[31] * C[5];
    Rrev[203] = krev[203] * C[1] * C[47];
    Rrev[204] = krev[204] * C[1] * C[47];
    Rrev[205] = krev[205] * C[47] * C[6];
    Rrev[206] = krev[206] * C[47] * C[4];
    Rrev[207] = krev[207] * C[31] * C[35];
    Rrev[208] = krev[208] * C[0] * C[47];
    Rrev[209] = krev[209] * C[5] * C[47];
    Rrev[210] = krev[210] * C[47] * C[13];
    Rrev[211] = krev[211] * C[38];
    Rrev[212] = krev[212] * C[4] * C[35];
    Rrev[213] = krev[213] * C[0] * C[35];
    Rrev[214] = krev[214] * C[5] * C[35];
    Rrev[215] = krev[215] * C[6] * C[35];
    Rrev[216] = krev[216] * C[14] * C[30];
    Rrev[217] = krev[217] * C[1] * C[46];
    Rrev[218] = krev[218] * C[40] * C[4];
    Rrev[219] = krev[219] * C[2] * C[46];
    Rrev[220] = krev[220] * C[1] * C[40];
    Rrev[221] = krev[221] * C[14] * C[35];
    Rrev[222] = krev[222] * C[31] * C[14];
    Rrev[223] = krev[223] * C[1] * C[14] * C[35];
    Rrev[224] = krev[224] * C[47] * C[14];
    Rrev[225] = krev[225] * C[15] * C[35];
    Rrev[226] = krev[226] * C[14] * C[30];
    Rrev[227] = krev[227] * C[14] * C[37];
    Rrev[228] = krev[228] * C[47] * C[15];
    Rrev[229] = krev[229] * C[1] * C[39];
    Rrev[230] = krev[230] * C[1] * C[46];
    Rrev[231] = krev[231] * C[31] * C[14];
    Rrev[232] = krev[232] * C[39] * C[4];
    Rrev[233] = krev[233] * C[44] * C[1];
    Rrev[234] = krev[234] * C[45] * C[1];
    Rrev[235] = krev[235] * C[14] * C[32];
    Rrev[236] = krev[236] * C[41];
    Rrev[237] = krev[237] * C[47] * C[10];
    Rrev[238] = krev[238] * C[39] * C[30];
    Rrev[239] = krev[239] * C[40] * C[30];
    Rrev[240] = krev[240] * C[42];
    Rrev[241] = krev[241] * C[31] * C[40];
    Rrev[242] = krev[242] * C[31] * C[40];
    Rrev[243] = krev[243] * C[39] * C[2];
    Rrev[244] = krev[244] * C[14] * C[30];
    Rrev[245] = krev[245] * C[40] * C[2];
    Rrev[246] = krev[246] * C[1] * C[46];
    Rrev[247] = krev[247] * C[16] * C[30];
    Rrev[248] = krev[248] * C[45] * C[1];
    Rrev[249] = krev[249] * C[40] * C[4];
    Rrev[250] = krev[250] * C[1] * C[43];
    Rrev[251] = krev[251] * C[45] * C[1];
    Rrev[252] = krev[252] * C[40] * C[4];
    Rrev[253] = krev[253] * C[1] * C[43];
    Rrev[254] = krev[254] * C[5] * C[40];
    Rrev[255] = krev[255] * C[41] * C[4];
    Rrev[256] = krev[256] * C[1] * C[47] * C[14];
    Rrev[257] = krev[257] * C[40] * C[35];
    Rrev[258] = krev[258] * C[47] * C[16] * C[2];
    Rrev[259] = krev[259] * C[1] * C[47] * C[16];
    Rrev[260] = krev[260] * C[10] * C[47];
    Rrev[261] = krev[261] * C[31] * C[15];
    Rrev[262] = krev[262] * C[14] * C[38];
    Rrev[263] = krev[263] * C[4] * C[46];
    Rrev[264] = krev[264] * C[14] * C[32];
    Rrev[265] = krev[265] * C[0] * C[46];
    Rrev[266] = krev[266] * C[5] * C[46];
    Rrev[267] = krev[267] * C[15] * C[32];
    Rrev[268] = krev[268] * C[31] * C[14];
    Rrev[269] = krev[269] * C[45] * C[1];
    Rrev[270] = krev[270] * C[40] * C[4];
    Rrev[271] = krev[271] * C[14] * C[32];
    Rrev[272] = krev[272] * C[45] * C[1];
    Rrev[273] = krev[273] * C[14] * C[43];
    Rrev[274] = krev[274] * C[1] * C[41];
    Rrev[275] = krev[275] * C[0] * C[40];
    Rrev[276] = krev[276] * C[0] * C[32];
    Rrev[277] = krev[277] * C[5] * C[32];
    Rrev[278] = krev[278] * C[4] * C[32];
    Rrev[279] = krev[279] * C[14] * C[38];
    Rrev[280] = krev[280] * C[35] * C[46];
    Rrev[281] = krev[281] * C[15] * C[37];
    Rrev[282] = krev[282] * C[14] * C[35];
    Rrev[284] = krev[284] * C[1] * C[51];
    Rrev[285] = krev[285] * C[1] * C[52];
    Rrev[286] = krev[286] * C[5] * C[3];
    Rrev[288] = krev[288] * C[12];
    Rrev[290] = krev[290] * C[17] * C[2];
    Rrev[293] = krev[293] * C[51] * C[2];
    Rrev[294] = krev[294] * C[6] * C[22];
    Rrev[295] = krev[295] * C[51] * C[4];
    Rrev[298] = krev[298] * C[0] * C[51];
    Rrev[303] = krev[303] * C[51];
    Rrev[307] = krev[307] * C[12] * C[16];
    Rrev[308] = krev[308] * C[0] * C[28];
    Rrev[309] = krev[309] * C[5] * C[28];
    Rrev[310] = krev[310] * C[18] * C[16];
    Rrev[311] = krev[311] * C[50];
    Rrev[312] = krev[312] * C[49] * C[4];
    Rrev[313] = krev[313] * C[0] * C[49];
    Rrev[314] = krev[314] * C[49] * C[5];
    Rrev[315] = krev[315] * C[6] * C[50];
    Rrev[316] = krev[316] * C[49] * C[13];
    Rrev[317] = krev[317] * C[49];
    Rrev[318] = krev[318] * C[17] * C[25];
    Rrev[319] = krev[319] * C[50];
    Rrev[320] = krev[320] * C[25] * C[12];
    Rrev[321] = krev[321] * C[18] * C[25];
    Rrev[322] = krev[322] * C[3] * C[50];
    Rrev[324] = krev[324] * C[25] * C[25];

    for(int i = 0; i < ii; ++i) { Rnet[i] = Rfwd[i] - Rrev[i]; }

    omega[0] =  + Rnet[38] + Rnet[7] + Rnet[39] + Rnet[39] + Rnet[40] + Rnet[41] + Rnet[44]
      + Rnet[46] + Rnet[48] + Rnet[50] + Rnet[52] + Rnet[54] + Rnet[57] + Rnet[59]
      + Rnet[64] + Rnet[67] + Rnet[68] + Rnet[72] + Rnet[74] + Rnet[76] + Rnet[77]
      + Rnet[79] + Rnet[136] + Rnet[173] + Rnet[190] + Rnet[196] + Rnet[201]
      + Rnet[208] + Rnet[213] + Rnet[265] + Rnet[275] + Rnet[276] + Rnet[298]
      + Rnet[308] + Rnet[313] + Rnet[287] + Rnet[292] + Rnet[283] + Rnet[299]
      - Rnet[2] - Rnet[82] - Rnet[83] - Rnet[125] - Rnet[135] - Rnet[145] - Rnet[171]
      - Rnet[220] - Rnet[288] - Rnet[39] ;
    omega[1] =  + Rnet[2] + Rnet[5] + Rnet[6] + Rnet[8] + Rnet[9] + Rnet[13] + Rnet[20]
      + Rnet[23] + Rnet[63] + Rnet[81] + Rnet[83] + Rnet[89] + Rnet[90] + Rnet[91]
      + Rnet[93] + Rnet[98] + Rnet[105] + Rnet[106] + Rnet[107] + Rnet[122] +
      Rnet[123] + Rnet[125] + Rnet[126] + Rnet[127] + Rnet[128] + Rnet[129] +
      Rnet[132] + Rnet[135] + Rnet[137] + Rnet[145] + Rnet[148] + Rnet[158] +
      Rnet[166] + Rnet[171] + Rnet[179] + Rnet[189] + Rnet[191] + Rnet[195] +
      Rnet[198] + Rnet[200] + Rnet[203] + Rnet[204] + Rnet[217] + Rnet[220] +
      Rnet[229] + Rnet[230] + Rnet[233] + Rnet[234] + Rnet[246] + Rnet[248] +
      Rnet[250] + Rnet[251] + Rnet[253] + Rnet[269] + Rnet[272] + Rnet[274] +
      Rnet[284] + Rnet[285] + Rnet[27] + Rnet[143] + Rnet[165] + Rnet[223] +
      Rnet[256] + Rnet[259] + Rnet[134] + Rnet[283] + Rnet[289] + Rnet[289] +
      Rnet[291] + Rnet[291] + Rnet[304] - Rnet[1] - Rnet[32] - Rnet[37] - Rnet[38]
      - Rnet[38] - Rnet[42] - Rnet[43] - Rnet[44] - Rnet[45] - Rnet[46] - Rnet[47]
      - Rnet[48] - Rnet[49] - Rnet[50] - Rnet[51] - Rnet[52] - Rnet[53] - Rnet[54]
      - Rnet[55] - Rnet[56] - Rnet[57] - Rnet[58] - Rnet[59] - Rnet[60] - Rnet[61]
      - Rnet[62] - Rnet[63] - Rnet[64] - Rnet[65] - Rnet[66] - Rnet[67] - Rnet[68]
      - Rnet[69] - Rnet[70] - Rnet[71] - Rnet[72] - Rnet[73] - Rnet[74] - Rnet[75]
      - Rnet[76] - Rnet[77] - Rnet[78] - Rnet[79] - Rnet[80] - Rnet[81] - Rnet[182]
      - Rnet[188] - Rnet[190] - Rnet[201] - Rnet[208] - Rnet[211] - Rnet[213]
      - Rnet[222] - Rnet[236] - Rnet[260] - Rnet[264] - Rnet[265] - Rnet[269]
      - Rnet[270] - Rnet[271] - Rnet[272] - Rnet[276] - Rnet[298] - Rnet[299]
      - Rnet[303] - Rnet[307] - Rnet[308] - Rnet[313] - Rnet[319] - Rnet[320]
      - Rnet[33] - Rnet[34] - Rnet[35] - Rnet[36] - Rnet[39] - Rnet[39] - Rnet[40]
      - Rnet[40] - Rnet[41] - Rnet[41] ;
    omega[2] =  + Rnet[30] + Rnet[37] + Rnet[43] + Rnet[85] + Rnet[121] + Rnet[124] +
      Rnet[154] + Rnet[177] + Rnet[178] + Rnet[184] + Rnet[193] + Rnet[219] +
      Rnet[243] + Rnet[245] + Rnet[290] + Rnet[293] + Rnet[258] - Rnet[0] - Rnet[0]
      - Rnet[1] - Rnet[2] - Rnet[3] - Rnet[4] - Rnet[5] - Rnet[6] - Rnet[7] -
      Rnet[8] - Rnet[9] - Rnet[10] - Rnet[11] - Rnet[12] - Rnet[13] - Rnet[14]
      - Rnet[15] - Rnet[16] - Rnet[17] - Rnet[18] - Rnet[19] - Rnet[20] - Rnet[21]
      - Rnet[22] - Rnet[23] - Rnet[24] - Rnet[25] - Rnet[26] - Rnet[27] - Rnet[28]
      - Rnet[29] - Rnet[180] - Rnet[181] - Rnet[186] - Rnet[187] - Rnet[189]
      - Rnet[199] - Rnet[200] - Rnet[206] - Rnet[207] - Rnet[212] - Rnet[216]
      - Rnet[221] - Rnet[230] - Rnet[231] - Rnet[232] - Rnet[256] - Rnet[257]
      - Rnet[261] - Rnet[262] - Rnet[263] - Rnet[278] - Rnet[283] - Rnet[284]
      - Rnet[285] - Rnet[295] - Rnet[296] - Rnet[304] - Rnet[312] - Rnet[318] ;
    omega[3] =  + Rnet[0] + Rnet[3] + Rnet[33] + Rnet[44] + Rnet[86] + Rnet[114] + Rnet[115]
      + Rnet[117] + Rnet[180] + Rnet[187] + Rnet[286] + Rnet[322] - Rnet[30]
      - Rnet[31] - Rnet[32] - Rnet[37] - Rnet[121] - Rnet[124] - Rnet[134] -
      Rnet[143] - Rnet[144] - Rnet[154] - Rnet[155] - Rnet[167] - Rnet[168] -
      Rnet[169] - Rnet[170] - Rnet[172] - Rnet[174] - Rnet[175] - Rnet[178] -
      Rnet[193] - Rnet[194] - Rnet[205] - Rnet[215] - Rnet[219] - Rnet[225] -
      Rnet[258] - Rnet[289] - Rnet[290] - Rnet[293] - Rnet[294] - Rnet[297] -
      Rnet[305] - Rnet[306] - Rnet[33] - Rnet[33] - Rnet[34] - Rnet[35] - Rnet[36] ;
    omega[4] =  + Rnet[1] + Rnet[2] + Rnet[3] + Rnet[4] + Rnet[10] + Rnet[12] + Rnet[14]
      + Rnet[15] + Rnet[16] + Rnet[17] + Rnet[18] + Rnet[21] + Rnet[26] + Rnet[28]
      + Rnet[37] + Rnet[45] + Rnet[45] + Rnet[47] + Rnet[60] + Rnet[65] + Rnet[116]
      + Rnet[118] + Rnet[119] + Rnet[155] + Rnet[182] + Rnet[185] + Rnet[188]
      + Rnet[194] + Rnet[197] + Rnet[199] + Rnet[206] + Rnet[212] + Rnet[218]
      + Rnet[232] + Rnet[249] + Rnet[252] + Rnet[255] + Rnet[263] + Rnet[270]
      + Rnet[278] + Rnet[295] + Rnet[312] + Rnet[143] + Rnet[175] + Rnet[134]
      + Rnet[296] + Rnet[305] + Rnet[306] + Rnet[323] - Rnet[42] - Rnet[83] -
      Rnet[84] - Rnet[84] - Rnet[85] - Rnet[85] - Rnet[86] - Rnet[87] - Rnet[88]
      - Rnet[89] - Rnet[90] - Rnet[91] - Rnet[92] - Rnet[93] - Rnet[94] - Rnet[95]
      - Rnet[96] - Rnet[97] - Rnet[98] - Rnet[99] - Rnet[100] - Rnet[101] - Rnet[102]
      - Rnet[103] - Rnet[104] - Rnet[105] - Rnet[106] - Rnet[107] - Rnet[108]
      - Rnet[109] - Rnet[110] - Rnet[111] - Rnet[112] - Rnet[113] - Rnet[179]
      - Rnet[183] - Rnet[191] - Rnet[192] - Rnet[202] - Rnet[209] - Rnet[214]
      - Rnet[217] - Rnet[223] - Rnet[233] - Rnet[234] - Rnet[235] - Rnet[259]
      - Rnet[266] - Rnet[267] - Rnet[277] - Rnet[286] - Rnet[287] - Rnet[300]
      - Rnet[309] - Rnet[310] - Rnet[314] - Rnet[321] ;
    omega[5] =  + Rnet[42] + Rnet[34] + Rnet[40] + Rnet[43] + Rnet[47] + Rnet[61] + Rnet[66]
      + Rnet[83] + Rnet[85] + Rnet[86] + Rnet[87] + Rnet[88] + Rnet[92] + Rnet[95]
      + Rnet[96] + Rnet[97] + Rnet[99] + Rnet[100] + Rnet[101] + Rnet[102] +
      Rnet[103] + Rnet[104] + Rnet[108] + Rnet[110] + Rnet[111] + Rnet[112] +
      Rnet[113] + Rnet[144] + Rnet[147] + Rnet[192] + Rnet[202] + Rnet[209] +
      Rnet[214] + Rnet[254] + Rnet[266] + Rnet[277] + Rnet[286] + Rnet[309] +
      Rnet[314] + Rnet[165] + Rnet[300] - Rnet[126] - Rnet[146] - Rnet[147] -
      Rnet[165] - Rnet[196] - Rnet[218] - Rnet[292] - Rnet[34] - Rnet[40] ;
    omega[6] =  + Rnet[32] + Rnet[4] + Rnet[31] + Rnet[33] + Rnet[34] + Rnet[35] + Rnet[36]
      + Rnet[46] + Rnet[87] + Rnet[88] + Rnet[156] + Rnet[167] + Rnet[168] +
      Rnet[169] + Rnet[174] + Rnet[183] + Rnet[205] + Rnet[215] + Rnet[294] +
      Rnet[315] + Rnet[297] - Rnet[3] - Rnet[43] - Rnet[44] - Rnet[45] - Rnet[86]
      - Rnet[114] - Rnet[114] - Rnet[115] - Rnet[115] - Rnet[116] - Rnet[117]
      - Rnet[118] - Rnet[119] - Rnet[120] - Rnet[185] - Rnet[286] - Rnet[301]
      - Rnet[322] - Rnet[323] ;
    omega[7] =  + Rnet[84] + Rnet[114] + Rnet[115] + Rnet[120] + Rnet[301] - Rnet[4] -
      Rnet[46] - Rnet[47] - Rnet[87] - Rnet[88] - Rnet[156] - Rnet[315] ;
    omega[8] =  + Rnet[48] - Rnet[89] - Rnet[121] - Rnet[122] - Rnet[123] - Rnet[238]
      - Rnet[243] - Rnet[244] ;
    omega[9] =  + Rnet[19] + Rnet[50] + Rnet[92] - Rnet[5] - Rnet[48] - Rnet[90] - Rnet[124]
      - Rnet[125] - Rnet[126] - Rnet[127] - Rnet[128] - Rnet[129] - Rnet[130]
      - Rnet[131] - Rnet[132] - Rnet[133] - Rnet[239] - Rnet[240] - Rnet[245]
      - Rnet[246] - Rnet[247] - Rnet[288] ;
    omega[10] =  + Rnet[22] + Rnet[29] + Rnet[95] + Rnet[125] + Rnet[141] + Rnet[142] +
      Rnet[147] + Rnet[150] + Rnet[151] + Rnet[237] + Rnet[260] + Rnet[304] -
      Rnet[6] - Rnet[49] - Rnet[91] - Rnet[92] - Rnet[116] - Rnet[122] - Rnet[127]
      - Rnet[134] - Rnet[135] - Rnet[136] - Rnet[136] - Rnet[137] - Rnet[138]
      - Rnet[139] - Rnet[140] - Rnet[241] - Rnet[248] - Rnet[249] - Rnet[250]
      - Rnet[289] - Rnet[290] - Rnet[291] - Rnet[291] ;
    omega[11] =  + Rnet[61] + Rnet[66] + Rnet[78] + Rnet[96] - Rnet[7] - Rnet[8] - Rnet[50]
      - Rnet[93] - Rnet[141] - Rnet[142] - Rnet[143] - Rnet[144] - Rnet[145]
      - Rnet[146] - Rnet[147] - Rnet[148] - Rnet[149] - Rnet[150] - Rnet[151]
      - Rnet[152] - Rnet[153] - Rnet[242] - Rnet[251] - Rnet[252] - Rnet[253]
      - Rnet[292] ;
    omega[12] =  + Rnet[49] + Rnet[288] + Rnet[10] + Rnet[24] + Rnet[25] + Rnet[52] + Rnet[60]
      + Rnet[65] + Rnet[80] + Rnet[97] + Rnet[109] + Rnet[135] + Rnet[138] +
      Rnet[138] + Rnet[145] + Rnet[149] + Rnet[149] + Rnet[153] + Rnet[307] +
      Rnet[320] + Rnet[296] + Rnet[297] + Rnet[299] + Rnet[300] + Rnet[301] +
      Rnet[302] - Rnet[9] - Rnet[51] - Rnet[94] - Rnet[95] - Rnet[96] - Rnet[117]
      - Rnet[118] - Rnet[123] - Rnet[128] - Rnet[137] - Rnet[148] - Rnet[154]
      - Rnet[155] - Rnet[156] - Rnet[157] - Rnet[157] - Rnet[158] - Rnet[158]
      - Rnet[159] - Rnet[160] - Rnet[161] - Rnet[162] - Rnet[163] - Rnet[164]
      - Rnet[210] - Rnet[254] - Rnet[255] - Rnet[274] - Rnet[275] - Rnet[283]
      - Rnet[287] - Rnet[302] - Rnet[311] - Rnet[316] - Rnet[317] - Rnet[324] ;
    omega[13] =  + Rnet[51] + Rnet[117] + Rnet[156] + Rnet[159] + Rnet[160] + Rnet[161]
      + Rnet[162] + Rnet[163] + Rnet[164] + Rnet[210] + Rnet[316] + Rnet[302]
      - Rnet[10] - Rnet[52] - Rnet[97] - Rnet[129] - Rnet[138] - Rnet[149] ;
    omega[14] =  + Rnet[5] + Rnet[7] + Rnet[12] + Rnet[19] + Rnet[22] + Rnet[54] + Rnet[78]
      + Rnet[80] + Rnet[89] + Rnet[99] + Rnet[109] + Rnet[121] + Rnet[131] +
      Rnet[133] + Rnet[140] + Rnet[144] + Rnet[150] + Rnet[152] + Rnet[159] +
      Rnet[166] + Rnet[167] + Rnet[170] + Rnet[216] + Rnet[221] + Rnet[222] +
      Rnet[224] + Rnet[226] + Rnet[227] + Rnet[231] + Rnet[235] + Rnet[244] +
      Rnet[262] + Rnet[264] + Rnet[268] + Rnet[271] + Rnet[273] + Rnet[279] +
      Rnet[282] + Rnet[27] + Rnet[27] + Rnet[143] + Rnet[165] + Rnet[175] + Rnet[175]
      + Rnet[176] + Rnet[176] + Rnet[223] + Rnet[256] + Rnet[134] + Rnet[283]
      + Rnet[296] + Rnet[297] + Rnet[299] + Rnet[300] + Rnet[301] + Rnet[302]
      + Rnet[305] - Rnet[11] - Rnet[30] - Rnet[82] - Rnet[98] - Rnet[119] - Rnet[130]
      - Rnet[139] - Rnet[150] ;
    omega[15] =  + Rnet[11] + Rnet[13] + Rnet[29] + Rnet[30] + Rnet[41] + Rnet[98] + Rnet[119]
      + Rnet[151] + Rnet[225] + Rnet[228] + Rnet[261] + Rnet[267] + Rnet[281]
      + Rnet[289] + Rnet[304] - Rnet[131] - Rnet[151] - Rnet[152] - Rnet[279]
      - Rnet[282] - Rnet[41] ;
    omega[16] =  + Rnet[6] + Rnet[8] + Rnet[14] + Rnet[24] + Rnet[31] + Rnet[57] + Rnet[90]
      + Rnet[100] + Rnet[120] + Rnet[124] + Rnet[131] + Rnet[160] + Rnet[170]
      + Rnet[172] + Rnet[247] + Rnet[307] + Rnet[310] + Rnet[258] + Rnet[259]
      + Rnet[306] + Rnet[306] - Rnet[166] - Rnet[12] - Rnet[13] - Rnet[53] -
      Rnet[54] - Rnet[99] - Rnet[159] - Rnet[165] - Rnet[167] ;
    omega[17] =  + Rnet[53] + Rnet[82] + Rnet[9] + Rnet[15] + Rnet[16] + Rnet[25] + Rnet[59]
      + Rnet[64] + Rnet[91] + Rnet[93] + Rnet[101] + Rnet[102] + Rnet[116] +
      Rnet[126] + Rnet[152] + Rnet[155] + Rnet[168] + Rnet[169] + Rnet[172] +
      Rnet[290] + Rnet[318] + Rnet[287] + Rnet[292] + Rnet[305] + Rnet[323] -
      Rnet[14] - Rnet[31] - Rnet[55] - Rnet[56] - Rnet[57] - Rnet[100] - Rnet[120]
      - Rnet[132] - Rnet[160] ;
    omega[18] =  + Rnet[55] + Rnet[17] + Rnet[63] + Rnet[67] + Rnet[103] + Rnet[161] +
      Rnet[310] + Rnet[321] - Rnet[15] - Rnet[58] - Rnet[59] - Rnet[60] - Rnet[61]
      - Rnet[101] - Rnet[168] ;
    omega[19] =  + Rnet[56] + Rnet[18] + Rnet[68] + Rnet[104] + Rnet[118] + Rnet[154] +
      Rnet[162] - Rnet[16] - Rnet[62] - Rnet[63] - Rnet[64] - Rnet[65] - Rnet[66]
      - Rnet[102] - Rnet[169] ;
    omega[20] =  + Rnet[58] + Rnet[62] + Rnet[94] + Rnet[146] - Rnet[17] - Rnet[18] - Rnet[67]
      - Rnet[68] - Rnet[103] - Rnet[104] - Rnet[161] - Rnet[162] ;
    omega[21] =  + Rnet[21] + Rnet[108] + Rnet[122] - Rnet[19] - Rnet[69] - Rnet[105] -
      Rnet[170] - Rnet[171] ;
    omega[22] =  + Rnet[69] + Rnet[72] + Rnet[110] + Rnet[123] + Rnet[127] + Rnet[133]
      + Rnet[136] + Rnet[171] + Rnet[173] + Rnet[294] + Rnet[176] + Rnet[291]
      - Rnet[20] - Rnet[21] - Rnet[22] - Rnet[70] - Rnet[106] - Rnet[107] - Rnet[108]
      - Rnet[109] ;
    omega[23] =  + Rnet[70] + Rnet[74] + Rnet[111] + Rnet[128] + Rnet[140] + Rnet[163]
      - Rnet[23] - Rnet[71] - Rnet[72] - Rnet[110] - Rnet[172] - Rnet[293] -
      Rnet[294] ;
    omega[24] =  + Rnet[71] + Rnet[76] + Rnet[129] + Rnet[137] + Rnet[148] + Rnet[174]
      - Rnet[173] - Rnet[24] - Rnet[73] - Rnet[74] - Rnet[111] - Rnet[163] -
      Rnet[284] - Rnet[317] ;
    omega[25] =  + Rnet[73] + Rnet[26] + Rnet[77] + Rnet[112] + Rnet[153] + Rnet[158] +
      Rnet[164] + Rnet[318] + Rnet[320] + Rnet[321] + Rnet[324] + Rnet[324] +
      Rnet[323] - Rnet[25] - Rnet[75] - Rnet[76] - Rnet[174] - Rnet[285] - Rnet[311] ;
    omega[26] =  + Rnet[75] + Rnet[157] - Rnet[26] - Rnet[77] - Rnet[112] - Rnet[153] -
      Rnet[164] ;
    omega[27] =  + Rnet[130] + Rnet[20] + Rnet[28] + Rnet[79] + Rnet[105] + Rnet[113] -
      Rnet[27] - Rnet[78] - Rnet[133] - Rnet[140] - Rnet[175] - Rnet[176] - Rnet[176]
      - Rnet[273] ;
    omega[28] =  + Rnet[139] + Rnet[23] + Rnet[81] + Rnet[106] + Rnet[132] + Rnet[308]
      + Rnet[309] - Rnet[28] - Rnet[29] - Rnet[79] - Rnet[80] - Rnet[113] - Rnet[303] ;
    omega[29] =  + Rnet[107] - Rnet[81] ;
    omega[30] =  + Rnet[190] + Rnet[192] + Rnet[216] + Rnet[226] + Rnet[238] + Rnet[239]
      + Rnet[244] + Rnet[247] - Rnet[177] - Rnet[178] - Rnet[179] - Rnet[195]
      - Rnet[224] - Rnet[237] - Rnet[274] - Rnet[275] - Rnet[282] ;
    omega[31] =  + Rnet[199] + Rnet[201] + Rnet[202] + Rnet[207] + Rnet[222] + Rnet[231]
      + Rnet[241] + Rnet[242] + Rnet[261] + Rnet[268] - Rnet[189] - Rnet[190]
      - Rnet[191] - Rnet[192] - Rnet[193] - Rnet[194] - Rnet[195] - Rnet[196]
      - Rnet[197] - Rnet[198] - Rnet[279] ;
    omega[32] =  + Rnet[235] + Rnet[264] + Rnet[267] + Rnet[271] + Rnet[276] + Rnet[277]
      + Rnet[278] - Rnet[199] - Rnet[200] - Rnet[201] - Rnet[202] ;
    omega[33] =  - Rnet[276] - Rnet[277] - Rnet[278] ;
    omega[34] =  - Rnet[203] - Rnet[204] - Rnet[205] - Rnet[206] - Rnet[207] - Rnet[208]
      - Rnet[209] - Rnet[210] ;
    omega[35] =  + Rnet[178] + Rnet[179] + Rnet[181] + Rnet[181] + Rnet[187] + Rnet[188]
      + Rnet[189] + Rnet[194] + Rnet[207] + Rnet[212] + Rnet[213] + Rnet[214]
      + Rnet[215] + Rnet[221] + Rnet[225] + Rnet[257] + Rnet[280] + Rnet[282]
      + Rnet[223] - Rnet[177] - Rnet[185] - Rnet[186] - Rnet[197] - Rnet[198]
      - Rnet[211] - Rnet[227] - Rnet[228] - Rnet[243] - Rnet[244] - Rnet[245]
      - Rnet[246] - Rnet[247] - Rnet[248] - Rnet[249] - Rnet[250] - Rnet[251]
      - Rnet[252] - Rnet[253] - Rnet[254] - Rnet[255] - Rnet[273] ;
    omega[36] =  + Rnet[186] + Rnet[185] - Rnet[187] - Rnet[188] - Rnet[280] - Rnet[281] ;
    omega[37] =  + Rnet[198] + Rnet[227] + Rnet[281] - Rnet[184] - Rnet[180] - Rnet[181]
      - Rnet[182] - Rnet[183] ;
    omega[38] =  + Rnet[211] + Rnet[191] + Rnet[193] + Rnet[196] + Rnet[200] + Rnet[262]
      + Rnet[279] - Rnet[212] - Rnet[213] - Rnet[214] - Rnet[215] ;
    omega[39] =  + Rnet[229] + Rnet[232] + Rnet[238] + Rnet[243] - Rnet[216] - Rnet[217]
      - Rnet[218] - Rnet[219] - Rnet[220] - Rnet[280] ;
    omega[40] =  + Rnet[218] + Rnet[220] + Rnet[239] + Rnet[241] + Rnet[242] + Rnet[245]
      + Rnet[249] + Rnet[252] + Rnet[254] + Rnet[257] + Rnet[270] + Rnet[275]
      - Rnet[229] - Rnet[230] - Rnet[231] - Rnet[232] - Rnet[233] - Rnet[234]
      - Rnet[235] - Rnet[236] ;
    omega[41] =  + Rnet[236] + Rnet[255] + Rnet[274] - Rnet[237] ;
    omega[42] =  + Rnet[240] - Rnet[256] - Rnet[257] - Rnet[258] - Rnet[259] - Rnet[260] ;
    omega[43] =  + Rnet[250] + Rnet[253] + Rnet[273] - Rnet[269] - Rnet[270] - Rnet[271] ;
    omega[44] =  + Rnet[233] - Rnet[272] ;
    omega[45] =  + Rnet[234] + Rnet[248] + Rnet[251] + Rnet[269] + Rnet[272] - Rnet[268]
      - Rnet[261] - Rnet[262] - Rnet[263] - Rnet[264] - Rnet[265] - Rnet[266]
      - Rnet[267] ;
    omega[46] =  + Rnet[217] + Rnet[219] + Rnet[230] + Rnet[246] + Rnet[263] + Rnet[265]
      + Rnet[266] + Rnet[280] - Rnet[226] - Rnet[221] - Rnet[222] - Rnet[223]
      - Rnet[224] - Rnet[225] - Rnet[227] - Rnet[228] - Rnet[281] ;
    omega[47] =  + Rnet[35] + Rnet[141] + Rnet[177] + Rnet[180] + Rnet[182] + Rnet[183]
      + Rnet[184] + Rnet[195] + Rnet[197] + Rnet[203] + Rnet[204] + Rnet[205]
      + Rnet[206] + Rnet[208] + Rnet[209] + Rnet[210] + Rnet[224] + Rnet[228]
      + Rnet[237] + Rnet[260] + Rnet[256] + Rnet[258] + Rnet[259] - Rnet[141]
      - Rnet[238] - Rnet[239] - Rnet[240] - Rnet[241] - Rnet[242] - Rnet[35] ;
    omega[48] =  + Rnet[36] + Rnet[142] - Rnet[142] - Rnet[36] ;
    omega[49] =  + Rnet[317] + Rnet[312] + Rnet[313] + Rnet[314] + Rnet[316] - Rnet[315]
      - Rnet[318] - Rnet[319] - Rnet[320] - Rnet[321] - Rnet[322] - Rnet[323]
      - Rnet[324] ;
    omega[50] =  + Rnet[311] + Rnet[319] + Rnet[315] + Rnet[322] - Rnet[312] - Rnet[313]
      - Rnet[314] - Rnet[316] ;
    omega[51] =  + Rnet[303] + Rnet[284] + Rnet[293] + Rnet[295] + Rnet[298] - Rnet[304]
      - Rnet[305] - Rnet[306] - Rnet[307] - Rnet[308] - Rnet[309] - Rnet[310] ;
    omega[52] =  + Rnet[285] - Rnet[295] - Rnet[296] - Rnet[297] - Rnet[298] - Rnet[299]
      - Rnet[300] - Rnet[301] - Rnet[302] ;

    for(int k = 0; k < kk; ++k) { FY[k] = mw[k] * omega[k] / rho; }

  }

  template <class Type>
  vector<Type> transpose(vector<Type>& mat)
  {

    int nn = mat.size();
    int n  = sqrt(nn);
    
    for (int i = 0; i < n; i++)
      {
	for (int j = i+1; j < n; j++)
	  {
	    Type temp  = mat[i*n+j];
	    mat[i*n+j] = mat[j*n+i];
	    mat[j*n+i] = temp;
	  }
      }
    
    return(mat);

  }
  
} // namespace mech

void nspecies_(int& nspec) {

  nspec = mech::kk;
  
}

void nreactions_(int& nreac) {

  nreac = mech::ii;
  
}

void nelements_(int& nelem) {

  nelem = mech::mm;
  
}

void getmolecularweights_(double* mw) {

  vector<double> mwts = mech::getMolecularWeights();
  for(int k = 0; k < mech::kk; ++k) { mw[k] = mwts[k]; }
  
}

void getmassfractions_(double* x, double* y) {

  double         mmw = 0.0;
  vector<double> mw  = mech::getMolecularWeights();

  for(int k = 0; k < mech::kk; k++) {
    double xk = max(x[k], 0.0);
    mmw  += mw[k] * xk;
  }
  
  mmw = 1.0/mmw;
  for(int k = 0; k < mech::kk; ++k) { y[k] = max(mw[k] * x[k] * mmw, 0.0); }
  
}

void getenthalpymass_(double* T, double* y, double* h) {

  double         RT = mech::GasConstant * (*T);
  vector<double> mw = mech::getMolecularWeights();
  vector<double> hi(mech::kk, 0.0);

  mech::getEnthalpies_RT(*T, hi);
  *h = 0.0;
  for(int k = 0; k < mech::kk; ++k) {
    hi[k]  = RT * hi[k];
    *h    += hi[k] * y[k] / mw[k];
  }
  
}

void getdensity_(double* T, double* p, double* y, double* rho) {

  double         RT  = mech::GasConstant * (*T);
  double         mmw = 0.0;
  vector<double> mw  = mech::getMolecularWeights();
  for(int k = 0; k < mech::kk; ++k) {
    mmw += y[k]/mw[k];
  }
  mmw = 1.0/mmw;

  *rho = (*p) * mmw / RT;
  
}

void gettemperature_(double* h, double* y, double* Told, double* Tnew) {

  double         T;
  vector<double> Y(mech::kk, 0.0);

  for(int k = 0; k < mech::kk; ++k) { Y[k] = y[k]; }
  mech::getTemperature(*h, *Told, Y, T);
  *Tnew = T;
  
}

void gettemperaturesource_(double* p, double* h, double* T, double* y, double* fT) {

  double         FT = 0.0;
  double         RT = mech::GasConstant * (*T);
  double         cp;
  double         rho;
  double         mmw = 0.0;
  vector<double> Y(mech::kk);
  vector<double> FY(mech::kk);
  vector<double> hi(mech::kk);
  vector<double> cpi(mech::kk);
  vector<double> mw = mech::getMolecularWeights();

  for(int k = 0; k < mech::kk; ++k) { Y[k] = y[k]; }
  for(int k = 0; k < mech::kk; ++k) { mmw += y[k]/mw[k]; }
  mmw = 1.0/mmw;
  rho = (*p) * mmw / RT;

  mech::getSpecificHeats_R(*T, cpi);
  mech::getEnthalpies_RT((*T), hi);
  mech::updateSpeciesSourceTerm(*p, *h, *T, Y, FY);

  cp = 0.0;
  for(int k = 0; k < mech::kk; ++k) {
    hi[k] = RT * hi[k] / mw[k];
    cp   += mech::GasConstant * cpi[k] * Y[k] / mw[k];
  }

  for(int k = 0; k < mech::kk; ++k) { FT -= mw[k] * hi[k] * FY[k] / (cp * rho); }
  
  *fT = FT;
  
}

void getsource_(double* p, double* h, double* Told, double* y, double* fy) {

  /* declarations */
  cout.precision(4);
  cout.setf(ios::scientific);

  vector<double> Y(mech::kk,  0.0);
  vector<double> FY(mech::kk, 0.0);

  for(int k = 0; k < mech::kk; ++k) { Y[k] = y[k]; }
  mech::updateSpeciesSourceTerm(*p, *h, *Told, Y, FY);
  copy(FY.begin(), FY.end(), fy);
}

void getjacobian_(double* p, double* h, double* Told, double* y, double* dfy) {

  /* declarations */
  cout.precision(4);
  cout.setf(ios::scientific);

  int                  kk = mech::kk;
  vector<double>       Y(kk, 0.0);
  vector<double>       FY(kk,0.0);
  vector<double>       DFY(kk*kk,0.0);
  vector< AD<double> > a_Y(kk, 0.0);
  vector< AD<double> > a_FY(kk,0.0);

  /* AD stuff */
  for(int k = 0; k < mech::kk; ++k) { Y[k] = y[k]; }
  copy(Y.begin(), Y.end(), a_Y.begin());

  /* AD Stuff */
  CppAD::Independent(a_Y);
  mech::updateSpeciesSourceTerm(*p, *h, *Told, a_Y, a_FY);
  CppAD::ADFun<double> tapef(a_Y, a_FY);
  //FY   = tapef.Forward(0, Y);
  
  DFY  = tapef.Jacobian(Y);
  DFY  = mech::transpose(DFY);

  copy(DFY.begin(), DFY.end(), dfy);
   
}

